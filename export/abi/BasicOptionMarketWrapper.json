[
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "thrower",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "caller",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "nominatedOwner",
        "type": "address"
      }
    ],
    "name": "OnlyNominatedOwner",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "thrower",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "caller",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      }
    ],
    "name": "OnlyOwner",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "oldOwner",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnerChanged",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnerNominated",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "acceptOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract OptionMarket",
        "name": "optionMarket",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "strikeId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "positionId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "iterations",
            "type": "uint256"
          },
          {
            "internalType": "enum OptionMarket.OptionType",
            "name": "optionType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "setCollateralTo",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minTotalCost",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxTotalCost",
            "type": "uint256"
          }
        ],
        "internalType": "struct OptionMarket.TradeInputParameters",
        "name": "params",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "extraCollateral",
        "type": "uint256"
      }
    ],
    "name": "closePosition",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "positionId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalCost",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalFee",
            "type": "uint256"
          }
        ],
        "internalType": "struct OptionMarket.Result",
        "name": "result",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract OptionMarket",
        "name": "optionMarket",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "strikeId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "positionId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "iterations",
            "type": "uint256"
          },
          {
            "internalType": "enum OptionMarket.OptionType",
            "name": "optionType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "setCollateralTo",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minTotalCost",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxTotalCost",
            "type": "uint256"
          }
        ],
        "internalType": "struct OptionMarket.TradeInputParameters",
        "name": "params",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "extraCollateral",
        "type": "uint256"
      }
    ],
    "name": "forceClosePosition",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "positionId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalCost",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalFee",
            "type": "uint256"
          }
        ],
        "internalType": "struct OptionMarket.Result",
        "name": "result",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract OptionMarket",
        "name": "",
        "type": "address"
      }
    ],
    "name": "marketContracts",
    "outputs": [
      {
        "internalType": "contract IERC20",
        "name": "quoteAsset",
        "type": "address"
      },
      {
        "internalType": "contract IERC20",
        "name": "baseAsset",
        "type": "address"
      },
      {
        "internalType": "contract OptionToken",
        "name": "optionToken",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_owner",
        "type": "address"
      }
    ],
    "name": "nominateNewOwner",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nominatedOwner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract OptionMarket",
        "name": "optionMarket",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "strikeId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "positionId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "iterations",
            "type": "uint256"
          },
          {
            "internalType": "enum OptionMarket.OptionType",
            "name": "optionType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "setCollateralTo",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minTotalCost",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxTotalCost",
            "type": "uint256"
          }
        ],
        "internalType": "struct OptionMarket.TradeInputParameters",
        "name": "params",
        "type": "tuple"
      },
      {
        "internalType": "uint256",
        "name": "extraCollateral",
        "type": "uint256"
      }
    ],
    "name": "openPosition",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "positionId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalCost",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalFee",
            "type": "uint256"
          }
        ],
        "internalType": "struct OptionMarket.Result",
        "name": "result",
        "type": "tuple"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "contract OptionMarket",
        "name": "optionMarket",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "contract IERC20",
            "name": "quoteAsset",
            "type": "address"
          },
          {
            "internalType": "contract IERC20",
            "name": "baseAsset",
            "type": "address"
          },
          {
            "internalType": "contract OptionToken",
            "name": "optionToken",
            "type": "address"
          }
        ],
        "internalType": "struct BasicOptionMarketWrapper.OptionMarketContracts",
        "name": "_marketContracts",
        "type": "tuple"
      }
    ],
    "name": "updateMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
