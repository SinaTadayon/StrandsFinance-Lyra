/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export type OptionMarketParametersStruct = {
  maxBoardExpiry: BigNumberish;
  securityModule: string;
  feePortionReserved: BigNumberish;
  staticBaseSettlementFee: BigNumberish;
};

export type OptionMarketParametersStructOutput = [
  BigNumber,
  string,
  BigNumber,
  BigNumber
] & {
  maxBoardExpiry: BigNumber;
  securityModule: string;
  feePortionReserved: BigNumber;
  staticBaseSettlementFee: BigNumber;
};

export type TradeEventDataStruct = {
  expiry: BigNumberish;
  strikePrice: BigNumberish;
  optionType: BigNumberish;
  tradeDirection: BigNumberish;
  amount: BigNumberish;
  setCollateralTo: BigNumberish;
  isForceClose: boolean;
  spotPrice: BigNumberish;
  reservedFee: BigNumberish;
  totalCost: BigNumberish;
};

export type TradeEventDataStructOutput = [
  BigNumber,
  BigNumber,
  number,
  number,
  BigNumber,
  BigNumber,
  boolean,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  expiry: BigNumber;
  strikePrice: BigNumber;
  optionType: number;
  tradeDirection: number;
  amount: BigNumber;
  setCollateralTo: BigNumber;
  isForceClose: boolean;
  spotPrice: BigNumber;
  reservedFee: BigNumber;
  totalCost: BigNumber;
};

export type VegaUtilFeeComponentsStruct = {
  preTradeAmmNetStdVega: BigNumberish;
  postTradeAmmNetStdVega: BigNumberish;
  vegaUtil: BigNumberish;
  volTraded: BigNumberish;
  NAV: BigNumberish;
  vegaUtilFee: BigNumberish;
};

export type VegaUtilFeeComponentsStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  preTradeAmmNetStdVega: BigNumber;
  postTradeAmmNetStdVega: BigNumber;
  vegaUtil: BigNumber;
  volTraded: BigNumber;
  NAV: BigNumber;
  vegaUtilFee: BigNumber;
};

export type VarianceFeeComponentsStruct = {
  varianceFeeCoefficient: BigNumberish;
  vega: BigNumberish;
  vegaCoefficient: BigNumberish;
  skew: BigNumberish;
  skewCoefficient: BigNumberish;
  ivVariance: BigNumberish;
  ivVarianceCoefficient: BigNumberish;
  varianceFee: BigNumberish;
};

export type VarianceFeeComponentsStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  varianceFeeCoefficient: BigNumber;
  vega: BigNumber;
  vegaCoefficient: BigNumber;
  skew: BigNumber;
  skewCoefficient: BigNumber;
  ivVariance: BigNumber;
  ivVarianceCoefficient: BigNumber;
  varianceFee: BigNumber;
};

export type TradeResultStruct = {
  amount: BigNumberish;
  premium: BigNumberish;
  optionPriceFee: BigNumberish;
  spotPriceFee: BigNumberish;
  vegaUtilFee: VegaUtilFeeComponentsStruct;
  varianceFee: VarianceFeeComponentsStruct;
  totalFee: BigNumberish;
  totalCost: BigNumberish;
  volTraded: BigNumberish;
  newBaseIv: BigNumberish;
  newSkew: BigNumberish;
};

export type TradeResultStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  VegaUtilFeeComponentsStructOutput,
  VarianceFeeComponentsStructOutput,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  amount: BigNumber;
  premium: BigNumber;
  optionPriceFee: BigNumber;
  spotPriceFee: BigNumber;
  vegaUtilFee: VegaUtilFeeComponentsStructOutput;
  varianceFee: VarianceFeeComponentsStructOutput;
  totalFee: BigNumber;
  totalCost: BigNumber;
  volTraded: BigNumber;
  newBaseIv: BigNumber;
  newSkew: BigNumber;
};

export type LiquidationEventDataStruct = {
  rewardBeneficiary: string;
  caller: string;
  returnCollateral: BigNumberish;
  lpPremiums: BigNumberish;
  lpFee: BigNumberish;
  liquidatorFee: BigNumberish;
  smFee: BigNumberish;
  insolventAmount: BigNumberish;
};

export type LiquidationEventDataStructOutput = [
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  rewardBeneficiary: string;
  caller: string;
  returnCollateral: BigNumber;
  lpPremiums: BigNumber;
  lpFee: BigNumber;
  liquidatorFee: BigNumber;
  smFee: BigNumber;
  insolventAmount: BigNumber;
};

export type TradeInputParametersStruct = {
  strikeId: BigNumberish;
  positionId: BigNumberish;
  iterations: BigNumberish;
  optionType: BigNumberish;
  amount: BigNumberish;
  setCollateralTo: BigNumberish;
  minTotalCost: BigNumberish;
  maxTotalCost: BigNumberish;
};

export type TradeInputParametersStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  number,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  strikeId: BigNumber;
  positionId: BigNumber;
  iterations: BigNumber;
  optionType: number;
  amount: BigNumber;
  setCollateralTo: BigNumber;
  minTotalCost: BigNumber;
  maxTotalCost: BigNumber;
};

export type ResultStruct = {
  positionId: BigNumberish;
  totalCost: BigNumberish;
  totalFee: BigNumberish;
};

export type ResultStructOutput = [BigNumber, BigNumber, BigNumber] & {
  positionId: BigNumber;
  totalCost: BigNumber;
  totalFee: BigNumber;
};

export type OptionBoardStruct = {
  id: BigNumberish;
  expiry: BigNumberish;
  iv: BigNumberish;
  frozen: boolean;
  strikeIds: BigNumberish[];
};

export type OptionBoardStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  boolean,
  BigNumber[]
] & {
  id: BigNumber;
  expiry: BigNumber;
  iv: BigNumber;
  frozen: boolean;
  strikeIds: BigNumber[];
};

export type StrikeStruct = {
  id: BigNumberish;
  strikePrice: BigNumberish;
  skew: BigNumberish;
  longCall: BigNumberish;
  shortCallBase: BigNumberish;
  shortCallQuote: BigNumberish;
  longPut: BigNumberish;
  shortPut: BigNumberish;
  boardId: BigNumberish;
};

export type StrikeStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  id: BigNumber;
  strikePrice: BigNumber;
  skew: BigNumber;
  longCall: BigNumber;
  shortCallBase: BigNumber;
  shortCallQuote: BigNumber;
  longPut: BigNumber;
  shortPut: BigNumber;
  boardId: BigNumber;
};

export interface OptionMarketInterface extends utils.Interface {
  functions: {
    "acceptOwnership()": FunctionFragment;
    "addCollateral(uint256,uint256)": FunctionFragment;
    "addStrikeToBoard(uint256,uint256,uint256)": FunctionFragment;
    "boardToPriceAtExpiry(uint256)": FunctionFragment;
    "closePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))": FunctionFragment;
    "createOptionBoard(uint256,uint256,uint256[],uint256[],bool)": FunctionFragment;
    "forceClosePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))": FunctionFragment;
    "forceSettleBoard(uint256)": FunctionFragment;
    "getBoardAndStrikeDetails(uint256)": FunctionFragment;
    "getBoardStrikes(uint256)": FunctionFragment;
    "getLiveBoards()": FunctionFragment;
    "getNumLiveBoards()": FunctionFragment;
    "getOptionBoard(uint256)": FunctionFragment;
    "getOptionMarketParams()": FunctionFragment;
    "getSettlementParameters(uint256)": FunctionFragment;
    "getStrike(uint256)": FunctionFragment;
    "getStrikeAndBoard(uint256)": FunctionFragment;
    "getStrikeAndExpiry(uint256)": FunctionFragment;
    "init(address,address,address,address,address,address,address,address)": FunctionFragment;
    "liquidatePosition(uint256,address)": FunctionFragment;
    "nominateNewOwner(address)": FunctionFragment;
    "nominatedOwner()": FunctionFragment;
    "openPosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))": FunctionFragment;
    "owner()": FunctionFragment;
    "setBoardBaseIv(uint256,uint256)": FunctionFragment;
    "setBoardFrozen(uint256,bool)": FunctionFragment;
    "setOptionMarketParams((uint256,address,uint256,uint256))": FunctionFragment;
    "setStrikeSkew(uint256,uint256)": FunctionFragment;
    "settleExpiredBoard(uint256)": FunctionFragment;
    "smClaim()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "acceptOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addCollateral",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "addStrikeToBoard",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "boardToPriceAtExpiry",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "closePosition",
    values: [TradeInputParametersStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createOptionBoard",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish[],
      BigNumberish[],
      boolean
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "forceClosePosition",
    values: [TradeInputParametersStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "forceSettleBoard",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBoardAndStrikeDetails",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getBoardStrikes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getLiveBoards",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getNumLiveBoards",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOptionBoard",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getOptionMarketParams",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSettlementParameters",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStrike",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStrikeAndBoard",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStrikeAndExpiry",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "init",
    values: [string, string, string, string, string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidatePosition",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "nominateNewOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "nominatedOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "openPosition",
    values: [TradeInputParametersStruct]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setBoardBaseIv",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setBoardFrozen",
    values: [BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "setOptionMarketParams",
    values: [OptionMarketParametersStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "setStrikeSkew",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settleExpiredBoard",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "smClaim", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "acceptOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addStrikeToBoard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "boardToPriceAtExpiry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "closePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createOptionBoard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "forceClosePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "forceSettleBoard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBoardAndStrikeDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBoardStrikes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLiveBoards",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getNumLiveBoards",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOptionBoard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOptionMarketParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSettlementParameters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getStrike", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getStrikeAndBoard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStrikeAndExpiry",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "init", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "liquidatePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nominateNewOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nominatedOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "openPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setBoardBaseIv",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBoardFrozen",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOptionMarketParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setStrikeSkew",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "settleExpiredBoard",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "smClaim", data: BytesLike): Result;

  events: {
    "BoardBaseIvSet(uint256,uint256)": EventFragment;
    "BoardCreated(uint256,uint256,uint256,bool)": EventFragment;
    "BoardFrozen(uint256,bool)": EventFragment;
    "BoardSettled(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "OptionMarketParamsSet(tuple)": EventFragment;
    "OwnerChanged(address,address)": EventFragment;
    "OwnerNominated(address)": EventFragment;
    "SMClaimed(address,uint256,uint256)": EventFragment;
    "StrikeAdded(uint256,uint256,uint256,uint256)": EventFragment;
    "StrikeSkewSet(uint256,uint256)": EventFragment;
    "Trade(address,uint256,uint256,tuple,tuple[],tuple,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "BoardBaseIvSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BoardCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BoardFrozen"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "BoardSettled"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OptionMarketParamsSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerChanged"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnerNominated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SMClaimed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StrikeAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "StrikeSkewSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Trade"): EventFragment;
}

export type BoardBaseIvSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  { boardId: BigNumber; baseIv: BigNumber }
>;

export type BoardBaseIvSetEventFilter = TypedEventFilter<BoardBaseIvSetEvent>;

export type BoardCreatedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, boolean],
  { boardId: BigNumber; expiry: BigNumber; baseIv: BigNumber; frozen: boolean }
>;

export type BoardCreatedEventFilter = TypedEventFilter<BoardCreatedEvent>;

export type BoardFrozenEvent = TypedEvent<
  [BigNumber, boolean],
  { boardId: BigNumber; frozen: boolean }
>;

export type BoardFrozenEventFilter = TypedEventFilter<BoardFrozenEvent>;

export type BoardSettledEvent = TypedEvent<
  [
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ],
  {
    boardId: BigNumber;
    spotPriceAtExpiry: BigNumber;
    totalUserLongProfitQuote: BigNumber;
    totalBoardLongCallCollateral: BigNumber;
    totalBoardLongPutCollateral: BigNumber;
    totalAMMShortCallProfitBase: BigNumber;
    totalAMMShortCallProfitQuote: BigNumber;
    totalAMMShortPutProfitQuote: BigNumber;
  }
>;

export type BoardSettledEventFilter = TypedEventFilter<BoardSettledEvent>;

export type OptionMarketParamsSetEvent = TypedEvent<
  [OptionMarketParametersStructOutput],
  { optionMarketParams: OptionMarketParametersStructOutput }
>;

export type OptionMarketParamsSetEventFilter =
  TypedEventFilter<OptionMarketParamsSetEvent>;

export type OwnerChangedEvent = TypedEvent<
  [string, string],
  { oldOwner: string; newOwner: string }
>;

export type OwnerChangedEventFilter = TypedEventFilter<OwnerChangedEvent>;

export type OwnerNominatedEvent = TypedEvent<[string], { newOwner: string }>;

export type OwnerNominatedEventFilter = TypedEventFilter<OwnerNominatedEvent>;

export type SMClaimedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  { securityModule: string; quoteAmount: BigNumber; baseAmount: BigNumber }
>;

export type SMClaimedEventFilter = TypedEventFilter<SMClaimedEvent>;

export type StrikeAddedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, BigNumber],
  {
    boardId: BigNumber;
    strikeId: BigNumber;
    strikePrice: BigNumber;
    skew: BigNumber;
  }
>;

export type StrikeAddedEventFilter = TypedEventFilter<StrikeAddedEvent>;

export type StrikeSkewSetEvent = TypedEvent<
  [BigNumber, BigNumber],
  { strikeId: BigNumber; skew: BigNumber }
>;

export type StrikeSkewSetEventFilter = TypedEventFilter<StrikeSkewSetEvent>;

export type TradeEvent = TypedEvent<
  [
    string,
    BigNumber,
    BigNumber,
    TradeEventDataStructOutput,
    TradeResultStructOutput[],
    LiquidationEventDataStructOutput,
    BigNumber
  ],
  {
    trader: string;
    strikeId: BigNumber;
    positionId: BigNumber;
    trade: TradeEventDataStructOutput;
    tradeResults: TradeResultStructOutput[];
    liquidation: LiquidationEventDataStructOutput;
    timestamp: BigNumber;
  }
>;

export type TradeEventFilter = TypedEventFilter<TradeEvent>;

export interface OptionMarket extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: OptionMarketInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    acceptOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "acceptOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addCollateral(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addCollateral(uint256,uint256)"(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addStrikeToBoard(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "addStrikeToBoard(uint256,uint256,uint256)"(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    boardToPriceAtExpiry(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "boardToPriceAtExpiry(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    closePosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "closePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    createOptionBoard(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "createOptionBoard(uint256,uint256,uint256[],uint256[],bool)"(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    forceClosePosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "forceClosePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    forceSettleBoard(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "forceSettleBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getBoardAndStrikeDetails(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [OptionBoardStructOutput, StrikeStructOutput[], BigNumber[], BigNumber]
    >;

    "getBoardAndStrikeDetails(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [OptionBoardStructOutput, StrikeStructOutput[], BigNumber[], BigNumber]
    >;

    getBoardStrikes(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { strikeIds: BigNumber[] }>;

    "getBoardStrikes(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { strikeIds: BigNumber[] }>;

    getLiveBoards(
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { _liveBoards: BigNumber[] }>;

    "getLiveBoards()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { _liveBoards: BigNumber[] }>;

    getNumLiveBoards(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { numLiveBoards: BigNumber }>;

    "getNumLiveBoards()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { numLiveBoards: BigNumber }>;

    getOptionBoard(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[OptionBoardStructOutput]>;

    "getOptionBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[OptionBoardStructOutput]>;

    getOptionMarketParams(
      overrides?: CallOverrides
    ): Promise<[OptionMarketParametersStructOutput]>;

    "getOptionMarketParams()"(
      overrides?: CallOverrides
    ): Promise<[OptionMarketParametersStructOutput]>;

    getSettlementParameters(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        strikePrice: BigNumber;
        priceAtExpiry: BigNumber;
        strikeToBaseReturned: BigNumber;
      }
    >;

    "getSettlementParameters(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        strikePrice: BigNumber;
        priceAtExpiry: BigNumber;
        strikeToBaseReturned: BigNumber;
      }
    >;

    getStrike(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[StrikeStructOutput]>;

    "getStrike(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[StrikeStructOutput]>;

    getStrikeAndBoard(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[StrikeStructOutput, OptionBoardStructOutput]>;

    "getStrikeAndBoard(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[StrikeStructOutput, OptionBoardStructOutput]>;

    getStrikeAndExpiry(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { strikePrice: BigNumber; expiry: BigNumber }
    >;

    "getStrikeAndExpiry(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { strikePrice: BigNumber; expiry: BigNumber }
    >;

    init(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "init(address,address,address,address,address,address,address,address)"(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    liquidatePosition(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "liquidatePosition(uint256,address)"(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    nominateNewOwner(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "nominateNewOwner(address)"(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    nominatedOwner(overrides?: CallOverrides): Promise<[string]>;

    "nominatedOwner()"(overrides?: CallOverrides): Promise<[string]>;

    openPosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "openPosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    setBoardBaseIv(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setBoardBaseIv(uint256,uint256)"(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setBoardFrozen(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setBoardFrozen(uint256,bool)"(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setOptionMarketParams(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setOptionMarketParams((uint256,address,uint256,uint256))"(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setStrikeSkew(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setStrikeSkew(uint256,uint256)"(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settleExpiredBoard(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settleExpiredBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    smClaim(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "smClaim()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  acceptOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "acceptOwnership()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addCollateral(
    positionId: BigNumberish,
    amountCollateral: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addCollateral(uint256,uint256)"(
    positionId: BigNumberish,
    amountCollateral: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addStrikeToBoard(
    boardId: BigNumberish,
    strikePrice: BigNumberish,
    skew: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "addStrikeToBoard(uint256,uint256,uint256)"(
    boardId: BigNumberish,
    strikePrice: BigNumberish,
    skew: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  boardToPriceAtExpiry(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "boardToPriceAtExpiry(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  closePosition(
    params: TradeInputParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "closePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
    params: TradeInputParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  createOptionBoard(
    expiry: BigNumberish,
    baseIV: BigNumberish,
    strikePrices: BigNumberish[],
    skews: BigNumberish[],
    frozen: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "createOptionBoard(uint256,uint256,uint256[],uint256[],bool)"(
    expiry: BigNumberish,
    baseIV: BigNumberish,
    strikePrices: BigNumberish[],
    skews: BigNumberish[],
    frozen: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  forceClosePosition(
    params: TradeInputParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "forceClosePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
    params: TradeInputParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  forceSettleBoard(
    boardId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "forceSettleBoard(uint256)"(
    boardId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getBoardAndStrikeDetails(
    boardId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [OptionBoardStructOutput, StrikeStructOutput[], BigNumber[], BigNumber]
  >;

  "getBoardAndStrikeDetails(uint256)"(
    boardId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [OptionBoardStructOutput, StrikeStructOutput[], BigNumber[], BigNumber]
  >;

  getBoardStrikes(
    boardId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getBoardStrikes(uint256)"(
    boardId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getLiveBoards(overrides?: CallOverrides): Promise<BigNumber[]>;

  "getLiveBoards()"(overrides?: CallOverrides): Promise<BigNumber[]>;

  getNumLiveBoards(overrides?: CallOverrides): Promise<BigNumber>;

  "getNumLiveBoards()"(overrides?: CallOverrides): Promise<BigNumber>;

  getOptionBoard(
    boardId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<OptionBoardStructOutput>;

  "getOptionBoard(uint256)"(
    boardId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<OptionBoardStructOutput>;

  getOptionMarketParams(
    overrides?: CallOverrides
  ): Promise<OptionMarketParametersStructOutput>;

  "getOptionMarketParams()"(
    overrides?: CallOverrides
  ): Promise<OptionMarketParametersStructOutput>;

  getSettlementParameters(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      strikePrice: BigNumber;
      priceAtExpiry: BigNumber;
      strikeToBaseReturned: BigNumber;
    }
  >;

  "getSettlementParameters(uint256)"(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      strikePrice: BigNumber;
      priceAtExpiry: BigNumber;
      strikeToBaseReturned: BigNumber;
    }
  >;

  getStrike(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<StrikeStructOutput>;

  "getStrike(uint256)"(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<StrikeStructOutput>;

  getStrikeAndBoard(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[StrikeStructOutput, OptionBoardStructOutput]>;

  "getStrikeAndBoard(uint256)"(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[StrikeStructOutput, OptionBoardStructOutput]>;

  getStrikeAndExpiry(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { strikePrice: BigNumber; expiry: BigNumber }
  >;

  "getStrikeAndExpiry(uint256)"(
    strikeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { strikePrice: BigNumber; expiry: BigNumber }
  >;

  init(
    _synthetixAdapter: string,
    _liquidityPool: string,
    _optionPricer: string,
    _greekCache: string,
    _shortCollateral: string,
    _optionToken: string,
    _quoteAsset: string,
    _baseAsset: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "init(address,address,address,address,address,address,address,address)"(
    _synthetixAdapter: string,
    _liquidityPool: string,
    _optionPricer: string,
    _greekCache: string,
    _shortCollateral: string,
    _optionToken: string,
    _quoteAsset: string,
    _baseAsset: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  liquidatePosition(
    positionId: BigNumberish,
    rewardBeneficiary: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "liquidatePosition(uint256,address)"(
    positionId: BigNumberish,
    rewardBeneficiary: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  nominateNewOwner(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "nominateNewOwner(address)"(
    _owner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  nominatedOwner(overrides?: CallOverrides): Promise<string>;

  "nominatedOwner()"(overrides?: CallOverrides): Promise<string>;

  openPosition(
    params: TradeInputParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "openPosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
    params: TradeInputParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  setBoardBaseIv(
    boardId: BigNumberish,
    baseIv: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setBoardBaseIv(uint256,uint256)"(
    boardId: BigNumberish,
    baseIv: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setBoardFrozen(
    boardId: BigNumberish,
    frozen: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setBoardFrozen(uint256,bool)"(
    boardId: BigNumberish,
    frozen: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setOptionMarketParams(
    _optionMarketParams: OptionMarketParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setOptionMarketParams((uint256,address,uint256,uint256))"(
    _optionMarketParams: OptionMarketParametersStruct,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setStrikeSkew(
    strikeId: BigNumberish,
    skew: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setStrikeSkew(uint256,uint256)"(
    strikeId: BigNumberish,
    skew: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settleExpiredBoard(
    boardId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settleExpiredBoard(uint256)"(
    boardId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  smClaim(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "smClaim()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    acceptOwnership(overrides?: CallOverrides): Promise<void>;

    "acceptOwnership()"(overrides?: CallOverrides): Promise<void>;

    addCollateral(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addCollateral(uint256,uint256)"(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    addStrikeToBoard(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "addStrikeToBoard(uint256,uint256,uint256)"(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    boardToPriceAtExpiry(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "boardToPriceAtExpiry(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    closePosition(
      params: TradeInputParametersStruct,
      overrides?: CallOverrides
    ): Promise<ResultStructOutput>;

    "closePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: CallOverrides
    ): Promise<ResultStructOutput>;

    createOptionBoard(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "createOptionBoard(uint256,uint256,uint256[],uint256[],bool)"(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    forceClosePosition(
      params: TradeInputParametersStruct,
      overrides?: CallOverrides
    ): Promise<ResultStructOutput>;

    "forceClosePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: CallOverrides
    ): Promise<ResultStructOutput>;

    forceSettleBoard(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "forceSettleBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    getBoardAndStrikeDetails(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [OptionBoardStructOutput, StrikeStructOutput[], BigNumber[], BigNumber]
    >;

    "getBoardAndStrikeDetails(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [OptionBoardStructOutput, StrikeStructOutput[], BigNumber[], BigNumber]
    >;

    getBoardStrikes(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getBoardStrikes(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getLiveBoards(overrides?: CallOverrides): Promise<BigNumber[]>;

    "getLiveBoards()"(overrides?: CallOverrides): Promise<BigNumber[]>;

    getNumLiveBoards(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumLiveBoards()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOptionBoard(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<OptionBoardStructOutput>;

    "getOptionBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<OptionBoardStructOutput>;

    getOptionMarketParams(
      overrides?: CallOverrides
    ): Promise<OptionMarketParametersStructOutput>;

    "getOptionMarketParams()"(
      overrides?: CallOverrides
    ): Promise<OptionMarketParametersStructOutput>;

    getSettlementParameters(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        strikePrice: BigNumber;
        priceAtExpiry: BigNumber;
        strikeToBaseReturned: BigNumber;
      }
    >;

    "getSettlementParameters(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        strikePrice: BigNumber;
        priceAtExpiry: BigNumber;
        strikeToBaseReturned: BigNumber;
      }
    >;

    getStrike(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<StrikeStructOutput>;

    "getStrike(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<StrikeStructOutput>;

    getStrikeAndBoard(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[StrikeStructOutput, OptionBoardStructOutput]>;

    "getStrikeAndBoard(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[StrikeStructOutput, OptionBoardStructOutput]>;

    getStrikeAndExpiry(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { strikePrice: BigNumber; expiry: BigNumber }
    >;

    "getStrikeAndExpiry(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { strikePrice: BigNumber; expiry: BigNumber }
    >;

    init(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "init(address,address,address,address,address,address,address,address)"(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidatePosition(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "liquidatePosition(uint256,address)"(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: CallOverrides
    ): Promise<void>;

    nominateNewOwner(_owner: string, overrides?: CallOverrides): Promise<void>;

    "nominateNewOwner(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    nominatedOwner(overrides?: CallOverrides): Promise<string>;

    "nominatedOwner()"(overrides?: CallOverrides): Promise<string>;

    openPosition(
      params: TradeInputParametersStruct,
      overrides?: CallOverrides
    ): Promise<ResultStructOutput>;

    "openPosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: CallOverrides
    ): Promise<ResultStructOutput>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    setBoardBaseIv(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBoardBaseIv(uint256,uint256)"(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setBoardFrozen(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    "setBoardFrozen(uint256,bool)"(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    setOptionMarketParams(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    "setOptionMarketParams((uint256,address,uint256,uint256))"(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: CallOverrides
    ): Promise<void>;

    setStrikeSkew(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setStrikeSkew(uint256,uint256)"(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settleExpiredBoard(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "settleExpiredBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    smClaim(overrides?: CallOverrides): Promise<void>;

    "smClaim()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {
    "BoardBaseIvSet(uint256,uint256)"(
      boardId?: BigNumberish | null,
      baseIv?: null
    ): BoardBaseIvSetEventFilter;
    BoardBaseIvSet(
      boardId?: BigNumberish | null,
      baseIv?: null
    ): BoardBaseIvSetEventFilter;

    "BoardCreated(uint256,uint256,uint256,bool)"(
      boardId?: BigNumberish | null,
      expiry?: null,
      baseIv?: null,
      frozen?: null
    ): BoardCreatedEventFilter;
    BoardCreated(
      boardId?: BigNumberish | null,
      expiry?: null,
      baseIv?: null,
      frozen?: null
    ): BoardCreatedEventFilter;

    "BoardFrozen(uint256,bool)"(
      boardId?: BigNumberish | null,
      frozen?: null
    ): BoardFrozenEventFilter;
    BoardFrozen(
      boardId?: BigNumberish | null,
      frozen?: null
    ): BoardFrozenEventFilter;

    "BoardSettled(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
      boardId?: BigNumberish | null,
      spotPriceAtExpiry?: null,
      totalUserLongProfitQuote?: null,
      totalBoardLongCallCollateral?: null,
      totalBoardLongPutCollateral?: null,
      totalAMMShortCallProfitBase?: null,
      totalAMMShortCallProfitQuote?: null,
      totalAMMShortPutProfitQuote?: null
    ): BoardSettledEventFilter;
    BoardSettled(
      boardId?: BigNumberish | null,
      spotPriceAtExpiry?: null,
      totalUserLongProfitQuote?: null,
      totalBoardLongCallCollateral?: null,
      totalBoardLongPutCollateral?: null,
      totalAMMShortCallProfitBase?: null,
      totalAMMShortCallProfitQuote?: null,
      totalAMMShortPutProfitQuote?: null
    ): BoardSettledEventFilter;

    "OptionMarketParamsSet(tuple)"(
      optionMarketParams?: null
    ): OptionMarketParamsSetEventFilter;
    OptionMarketParamsSet(
      optionMarketParams?: null
    ): OptionMarketParamsSetEventFilter;

    "OwnerChanged(address,address)"(
      oldOwner?: null,
      newOwner?: null
    ): OwnerChangedEventFilter;
    OwnerChanged(oldOwner?: null, newOwner?: null): OwnerChangedEventFilter;

    "OwnerNominated(address)"(newOwner?: null): OwnerNominatedEventFilter;
    OwnerNominated(newOwner?: null): OwnerNominatedEventFilter;

    "SMClaimed(address,uint256,uint256)"(
      securityModule?: null,
      quoteAmount?: null,
      baseAmount?: null
    ): SMClaimedEventFilter;
    SMClaimed(
      securityModule?: null,
      quoteAmount?: null,
      baseAmount?: null
    ): SMClaimedEventFilter;

    "StrikeAdded(uint256,uint256,uint256,uint256)"(
      boardId?: BigNumberish | null,
      strikeId?: BigNumberish | null,
      strikePrice?: null,
      skew?: null
    ): StrikeAddedEventFilter;
    StrikeAdded(
      boardId?: BigNumberish | null,
      strikeId?: BigNumberish | null,
      strikePrice?: null,
      skew?: null
    ): StrikeAddedEventFilter;

    "StrikeSkewSet(uint256,uint256)"(
      strikeId?: BigNumberish | null,
      skew?: null
    ): StrikeSkewSetEventFilter;
    StrikeSkewSet(
      strikeId?: BigNumberish | null,
      skew?: null
    ): StrikeSkewSetEventFilter;

    "Trade(address,uint256,uint256,tuple,tuple[],tuple,uint256)"(
      trader?: string | null,
      strikeId?: BigNumberish | null,
      positionId?: BigNumberish | null,
      trade?: null,
      tradeResults?: null,
      liquidation?: null,
      timestamp?: null
    ): TradeEventFilter;
    Trade(
      trader?: string | null,
      strikeId?: BigNumberish | null,
      positionId?: BigNumberish | null,
      trade?: null,
      tradeResults?: null,
      liquidation?: null,
      timestamp?: null
    ): TradeEventFilter;
  };

  estimateGas: {
    acceptOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "acceptOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addCollateral(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addCollateral(uint256,uint256)"(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addStrikeToBoard(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "addStrikeToBoard(uint256,uint256,uint256)"(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    boardToPriceAtExpiry(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "boardToPriceAtExpiry(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    closePosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "closePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    createOptionBoard(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "createOptionBoard(uint256,uint256,uint256[],uint256[],bool)"(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    forceClosePosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "forceClosePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    forceSettleBoard(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "forceSettleBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getBoardAndStrikeDetails(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBoardAndStrikeDetails(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBoardStrikes(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getBoardStrikes(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLiveBoards(overrides?: CallOverrides): Promise<BigNumber>;

    "getLiveBoards()"(overrides?: CallOverrides): Promise<BigNumber>;

    getNumLiveBoards(overrides?: CallOverrides): Promise<BigNumber>;

    "getNumLiveBoards()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOptionBoard(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOptionBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOptionMarketParams(overrides?: CallOverrides): Promise<BigNumber>;

    "getOptionMarketParams()"(overrides?: CallOverrides): Promise<BigNumber>;

    getSettlementParameters(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSettlementParameters(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStrike(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStrike(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStrikeAndBoard(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStrikeAndBoard(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStrikeAndExpiry(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getStrikeAndExpiry(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    init(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "init(address,address,address,address,address,address,address,address)"(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    liquidatePosition(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "liquidatePosition(uint256,address)"(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    nominateNewOwner(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "nominateNewOwner(address)"(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    nominatedOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "nominatedOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    openPosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "openPosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    setBoardBaseIv(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setBoardBaseIv(uint256,uint256)"(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setBoardFrozen(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setBoardFrozen(uint256,bool)"(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setOptionMarketParams(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setOptionMarketParams((uint256,address,uint256,uint256))"(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setStrikeSkew(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setStrikeSkew(uint256,uint256)"(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settleExpiredBoard(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settleExpiredBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    smClaim(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "smClaim()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    acceptOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "acceptOwnership()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addCollateral(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addCollateral(uint256,uint256)"(
      positionId: BigNumberish,
      amountCollateral: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addStrikeToBoard(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "addStrikeToBoard(uint256,uint256,uint256)"(
      boardId: BigNumberish,
      strikePrice: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    boardToPriceAtExpiry(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "boardToPriceAtExpiry(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    closePosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "closePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    createOptionBoard(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "createOptionBoard(uint256,uint256,uint256[],uint256[],bool)"(
      expiry: BigNumberish,
      baseIV: BigNumberish,
      strikePrices: BigNumberish[],
      skews: BigNumberish[],
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    forceClosePosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "forceClosePosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    forceSettleBoard(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "forceSettleBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getBoardAndStrikeDetails(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBoardAndStrikeDetails(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBoardStrikes(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBoardStrikes(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLiveBoards(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getLiveBoards()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getNumLiveBoards(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getNumLiveBoards()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOptionBoard(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOptionBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOptionMarketParams(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOptionMarketParams()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSettlementParameters(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSettlementParameters(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStrike(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStrike(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStrikeAndBoard(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStrikeAndBoard(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStrikeAndExpiry(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStrikeAndExpiry(uint256)"(
      strikeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    init(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "init(address,address,address,address,address,address,address,address)"(
      _synthetixAdapter: string,
      _liquidityPool: string,
      _optionPricer: string,
      _greekCache: string,
      _shortCollateral: string,
      _optionToken: string,
      _quoteAsset: string,
      _baseAsset: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    liquidatePosition(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "liquidatePosition(uint256,address)"(
      positionId: BigNumberish,
      rewardBeneficiary: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    nominateNewOwner(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "nominateNewOwner(address)"(
      _owner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    nominatedOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "nominatedOwner()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    openPosition(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "openPosition((uint256,uint256,uint256,uint8,uint256,uint256,uint256,uint256))"(
      params: TradeInputParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setBoardBaseIv(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setBoardBaseIv(uint256,uint256)"(
      boardId: BigNumberish,
      baseIv: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setBoardFrozen(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setBoardFrozen(uint256,bool)"(
      boardId: BigNumberish,
      frozen: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setOptionMarketParams(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setOptionMarketParams((uint256,address,uint256,uint256))"(
      _optionMarketParams: OptionMarketParametersStruct,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setStrikeSkew(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setStrikeSkew(uint256,uint256)"(
      strikeId: BigNumberish,
      skew: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settleExpiredBoard(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settleExpiredBoard(uint256)"(
      boardId: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    smClaim(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "smClaim()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
