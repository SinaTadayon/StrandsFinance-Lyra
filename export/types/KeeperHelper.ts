/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface KeeperHelperInterface extends utils.Interface {
  functions: {
    "greekCache()": FunctionFragment;
    "init(address,address,address)": FunctionFragment;
    "initialized()": FunctionFragment;
    "liquidate8(uint256)": FunctionFragment;
    "liquidateMany(uint256[])": FunctionFragment;
    "optionMarket()": FunctionFragment;
    "settle16(uint256,uint256)": FunctionFragment;
    "settle24(uint256,uint256,uint256)": FunctionFragment;
    "settle32(uint256,uint256,uint256,uint256)": FunctionFragment;
    "settle40(uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "settle8(uint256)": FunctionFragment;
    "settle80(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "settleMany(uint256[])": FunctionFragment;
    "shortCollateral()": FunctionFragment;
    "updateAllBoardCachedGreeks()": FunctionFragment;
    "updateStaleBoardCachedGreeks()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "greekCache",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "init",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initialized",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "liquidate8",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidateMany",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "optionMarket",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "settle16",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settle24",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settle32",
    values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settle40",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "settle8",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "settle80",
    values: [
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "settleMany",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "shortCollateral",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "updateAllBoardCachedGreeks",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "updateStaleBoardCachedGreeks",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "greekCache", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "init", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initialized",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "liquidate8", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "liquidateMany",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "optionMarket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "settle16", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "settle24", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "settle32", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "settle40", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "settle8", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "settle80", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "settleMany", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "shortCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateAllBoardCachedGreeks",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateStaleBoardCachedGreeks",
    data: BytesLike
  ): Result;

  events: {};
}

export interface KeeperHelper extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: KeeperHelperInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    greekCache(overrides?: CallOverrides): Promise<[string]>;

    "greekCache()"(overrides?: CallOverrides): Promise<[string]>;

    init(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "init(address,address,address)"(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    initialized(overrides?: CallOverrides): Promise<[boolean]>;

    "initialized()"(overrides?: CallOverrides): Promise<[boolean]>;

    liquidate8(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "liquidate8(uint256)"(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    liquidateMany(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "liquidateMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    optionMarket(overrides?: CallOverrides): Promise<[string]>;

    "optionMarket()"(overrides?: CallOverrides): Promise<[string]>;

    settle16(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settle16(uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settle24(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settle24(uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settle32(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settle32(uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settle40(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settle40(uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settle8(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settle8(uint256)"(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settle80(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settle80(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    settleMany(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "settleMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    shortCollateral(overrides?: CallOverrides): Promise<[string]>;

    "shortCollateral()"(overrides?: CallOverrides): Promise<[string]>;

    updateAllBoardCachedGreeks(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "updateAllBoardCachedGreeks()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    updateStaleBoardCachedGreeks(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "updateStaleBoardCachedGreeks()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  greekCache(overrides?: CallOverrides): Promise<string>;

  "greekCache()"(overrides?: CallOverrides): Promise<string>;

  init(
    _optionMarket: string,
    _shortCollateral: string,
    _greekCache: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "init(address,address,address)"(
    _optionMarket: string,
    _shortCollateral: string,
    _greekCache: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  initialized(overrides?: CallOverrides): Promise<boolean>;

  "initialized()"(overrides?: CallOverrides): Promise<boolean>;

  liquidate8(
    batch1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "liquidate8(uint256)"(
    batch1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  liquidateMany(
    positionIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "liquidateMany(uint256[])"(
    positionIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  optionMarket(overrides?: CallOverrides): Promise<string>;

  "optionMarket()"(overrides?: CallOverrides): Promise<string>;

  settle16(
    batch1: BigNumberish,
    batch2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settle16(uint256,uint256)"(
    batch1: BigNumberish,
    batch2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settle24(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settle24(uint256,uint256,uint256)"(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settle32(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    batch4: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settle32(uint256,uint256,uint256,uint256)"(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    batch4: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settle40(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    batch4: BigNumberish,
    batch5: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settle40(uint256,uint256,uint256,uint256,uint256)"(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    batch4: BigNumberish,
    batch5: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settle8(
    batch1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settle8(uint256)"(
    batch1: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settle80(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    batch4: BigNumberish,
    batch5: BigNumberish,
    batch6: BigNumberish,
    batch7: BigNumberish,
    batch8: BigNumberish,
    batch9: BigNumberish,
    batch10: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settle80(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
    batch1: BigNumberish,
    batch2: BigNumberish,
    batch3: BigNumberish,
    batch4: BigNumberish,
    batch5: BigNumberish,
    batch6: BigNumberish,
    batch7: BigNumberish,
    batch8: BigNumberish,
    batch9: BigNumberish,
    batch10: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  settleMany(
    positionIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "settleMany(uint256[])"(
    positionIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  shortCollateral(overrides?: CallOverrides): Promise<string>;

  "shortCollateral()"(overrides?: CallOverrides): Promise<string>;

  updateAllBoardCachedGreeks(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "updateAllBoardCachedGreeks()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  updateStaleBoardCachedGreeks(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "updateStaleBoardCachedGreeks()"(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    greekCache(overrides?: CallOverrides): Promise<string>;

    "greekCache()"(overrides?: CallOverrides): Promise<string>;

    init(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "init(address,address,address)"(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: CallOverrides
    ): Promise<void>;

    initialized(overrides?: CallOverrides): Promise<boolean>;

    "initialized()"(overrides?: CallOverrides): Promise<boolean>;

    liquidate8(batch1: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "liquidate8(uint256)"(
      batch1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidateMany(
      positionIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "liquidateMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    optionMarket(overrides?: CallOverrides): Promise<string>;

    "optionMarket()"(overrides?: CallOverrides): Promise<string>;

    settle16(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "settle16(uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settle24(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "settle24(uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settle32(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "settle32(uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settle40(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "settle40(uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settle8(batch1: BigNumberish, overrides?: CallOverrides): Promise<void>;

    "settle8(uint256)"(
      batch1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settle80(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "settle80(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    settleMany(
      positionIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    "settleMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    shortCollateral(overrides?: CallOverrides): Promise<string>;

    "shortCollateral()"(overrides?: CallOverrides): Promise<string>;

    updateAllBoardCachedGreeks(overrides?: CallOverrides): Promise<void>;

    "updateAllBoardCachedGreeks()"(overrides?: CallOverrides): Promise<void>;

    updateStaleBoardCachedGreeks(overrides?: CallOverrides): Promise<void>;

    "updateStaleBoardCachedGreeks()"(overrides?: CallOverrides): Promise<void>;
  };

  filters: {};

  estimateGas: {
    greekCache(overrides?: CallOverrides): Promise<BigNumber>;

    "greekCache()"(overrides?: CallOverrides): Promise<BigNumber>;

    init(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "init(address,address,address)"(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    initialized(overrides?: CallOverrides): Promise<BigNumber>;

    "initialized()"(overrides?: CallOverrides): Promise<BigNumber>;

    liquidate8(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "liquidate8(uint256)"(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    liquidateMany(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "liquidateMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    optionMarket(overrides?: CallOverrides): Promise<BigNumber>;

    "optionMarket()"(overrides?: CallOverrides): Promise<BigNumber>;

    settle16(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settle16(uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settle24(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settle24(uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settle32(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settle32(uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settle40(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settle40(uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settle8(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settle8(uint256)"(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settle80(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settle80(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    settleMany(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "settleMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    shortCollateral(overrides?: CallOverrides): Promise<BigNumber>;

    "shortCollateral()"(overrides?: CallOverrides): Promise<BigNumber>;

    updateAllBoardCachedGreeks(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "updateAllBoardCachedGreeks()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    updateStaleBoardCachedGreeks(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "updateStaleBoardCachedGreeks()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    greekCache(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "greekCache()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    init(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "init(address,address,address)"(
      _optionMarket: string,
      _shortCollateral: string,
      _greekCache: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    initialized(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "initialized()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    liquidate8(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "liquidate8(uint256)"(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    liquidateMany(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "liquidateMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    optionMarket(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "optionMarket()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    settle16(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settle16(uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settle24(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settle24(uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settle32(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settle32(uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settle40(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settle40(uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settle8(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settle8(uint256)"(
      batch1: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settle80(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settle80(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
      batch1: BigNumberish,
      batch2: BigNumberish,
      batch3: BigNumberish,
      batch4: BigNumberish,
      batch5: BigNumberish,
      batch6: BigNumberish,
      batch7: BigNumberish,
      batch8: BigNumberish,
      batch9: BigNumberish,
      batch10: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    settleMany(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "settleMany(uint256[])"(
      positionIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    shortCollateral(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "shortCollateral()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateAllBoardCachedGreeks(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "updateAllBoardCachedGreeks()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    updateStaleBoardCachedGreeks(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "updateStaleBoardCachedGreeks()"(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
