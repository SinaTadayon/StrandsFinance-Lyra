/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BasicOptionMarketWrapper,
  BasicOptionMarketWrapperInterface,
} from "../BasicOptionMarketWrapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "extraCollateral",
        type: "uint256",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "extraCollateral",
        type: "uint256",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketContracts",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "extraCollateral",
        type: "uint256",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
        ],
        internalType: "struct BasicOptionMarketWrapper.OptionMarketContracts",
        name: "_marketContracts",
        type: "tuple",
      },
    ],
    name: "updateMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a161120f8061006e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80636f7c4bfd116100665780636f7c4bfd1461012557806373ccbf671461013857806379ba5097146101a15780638da5cb5b146101a9578063d51046eb146101bc57600080fd5b80631627540c146100985780633408ef7a146100ad57806339fa8afb146100c057806353a47bb7146100fa575b600080fd5b6100ab6100a6366004610eaa565b6101cf565b005b6100ab6100bb366004610f06565b61022b565b6100d36100ce366004610faf565b6103a9565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b60015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020016100f1565b6100d3610133366004610faf565b610627565b610177610146366004610eaa565b60026020819052600091825260409091208054600182015491909201546001600160a01b0392831692918216911683565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100f1565b6100ab61073d565b60005461010d906001600160a01b031681565b6100d36101ca366004610faf565b6107fa565b6101d76109a2565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b6102336109a2565b6001600160a01b03828116600081815260026020818152604092839020865181546001600160a01b03199081169188169182178355928801516001830180548516918916919091179055878501519190930180549092169516949094179093555163095ea7b360e01b81526004810191909152600019602482015263095ea7b390604401602060405180830381600087803b1580156102d157600080fd5b505af11580156102e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103099190611060565b506001600160a01b038281166000818152600260205260409081902060010154905163095ea7b360e01b8152600481019290925260001960248301529091169063095ea7b390604401602060405180830381600087803b15801561036c57600080fd5b505af1158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190611060565b505050565b6103cd60405180606001604052806000815260200160008152602001600081525090565b6001600160a01b03808516600090815260026020818152604092839020835160608101855281548616815260018201548616818401529201549093169181019190915290840151156104845780604001516001600160a01b03166323b872dd333087602001516040518463ffffffff1660e01b815260040161045193929190611082565b600060405180830381600087803b15801561046b57600080fd5b505af115801561047f573d6000803e3d6000fd5b505050505b610493818560600151856109ea565b60405163e4e83e3d60e01b81526001600160a01b0386169063e4e83e3d906104bf9087906004016110bc565b606060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105119190611135565b915061051c81610bae565b600160408281015184519151637594ee2f60e11b815260048101929092526001600160a01b03169063eb29dc5e9060240160206040518083038186803b15801561056557600080fd5b505afa158015610579573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059d919061119f565b60058111156105ae576105ae6110a6565b141561061f5780604001516001600160a01b03166323b872dd303387602001516040518463ffffffff1660e01b81526004016105ec93929190611082565b600060405180830381600087803b15801561060657600080fd5b505af115801561061a573d6000803e3d6000fd5b505050505b509392505050565b61064b60405180606001604052806000815260200160008152602001600081525090565b6001600160a01b03808516600090815260026020818152604092839020835160608101855281548616815260018201548616818401529201549093169181019190915290840151156107025780604001516001600160a01b03166323b872dd333087602001516040518463ffffffff1660e01b81526004016106cf93929190611082565b600060405180830381600087803b1580156106e957600080fd5b505af11580156106fd573d6000803e3d6000fd5b505050505b610711818560600151856109ea565b6040516324ad18cb60e21b81526001600160a01b038616906392b4632c906104bf9087906004016110bc565b6001546001600160a01b03163314610788576001546040516312d9f3db60e31b81523060048201523360248201526001600160a01b0390911660448201526064015b60405180910390fd5b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b61081e60405180606001604052806000815260200160008152602001600081525090565b6001600160a01b03808516600090815260026020818152604092839020835160608101855281548616815260018201548616818401529201549093169181019190915290840151156108d55780604001516001600160a01b03166323b872dd333087602001516040518463ffffffff1660e01b81526004016108a293929190611082565b600060405180830381600087803b1580156108bc57600080fd5b505af11580156108d0573d6000803e3d6000fd5b505050505b6108e4818560600151856109ea565b604051620dfcaf60e21b81526001600160a01b038616906237f2bc9061090e9087906004016110bc565b606060405180830381600087803b15801561092857600080fd5b505af115801561093c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109609190611135565b915061096b81610bae565b604080820151835191516323b872dd60e01b81526001600160a01b03909116916323b872dd916105ec913091339190600401611082565b6000546001600160a01b031633146109e85760005460405163035785f360e31b81523060048201523360248201526001600160a01b03909116604482015260640161077f565b565b6109f382610e58565b6103a45780156103a457610a0682610e75565b15610add5782602001516001600160a01b03166323b872dd3330846040518463ffffffff1660e01b8152600401610a3f93929190611082565b602060405180830381600087803b158015610a5957600080fd5b505af1158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a919190611060565b6103a45760405162461bcd60e51b815260206004820152601c60248201527f74616b654578747261436f6c6c61743a20626173652078666572206600000000604482015260640161077f565b82516040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610b1090339030908690600401611082565b602060405180830381600087803b158015610b2a57600080fd5b505af1158015610b3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b629190611060565b6103a45760405162461bcd60e51b815260206004820152601d60248201527f74616b654578747261436f6c6c61743a20216261736520786665722066000000604482015260640161077f565b80516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610bf157600080fd5b505afa158015610c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2991906111c0565b90508015610d0057815160405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610c7c57600080fd5b505af1158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb49190611060565b610d005760405162461bcd60e51b815260206004820181905260248201527f5f72657475726e45786365737346756e64733a2071756f746520786665722066604482015260640161077f565b60208201516040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610d4657600080fd5b505afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e91906111c0565b905080156103a457602083015160405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610dd457600080fd5b505af1158015610de8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0c9190611060565b6103a45760405162461bcd60e51b815260206004820152601f60248201527f5f72657475726e45786365737346756e64733a20626173652078666572206600604482015260640161077f565b60006002826004811115610e6e57610e6e6110a6565b1092915050565b60006002826004811115610e8b57610e8b6110a6565b1492915050565b6001600160a01b0381168114610ea757600080fd5b50565b600060208284031215610ebc57600080fd5b8135610ec781610e92565b9392505050565b604051610100810167ffffffffffffffff81118282101715610f0057634e487b7160e01b600052604160045260246000fd5b60405290565b6000808284036080811215610f1a57600080fd5b8335610f2581610e92565b92506060601f1982011215610f3957600080fd5b506040516060810181811067ffffffffffffffff82111715610f6b57634e487b7160e01b600052604160045260246000fd5b6040526020840135610f7c81610e92565b81526040840135610f8c81610e92565b60208201526060840135610f9f81610e92565b6040820152919491935090915050565b6000806000838503610140811215610fc657600080fd5b8435610fd181610e92565b9350610100601f198201811315610fe757600080fd5b610fef610ece565b915060208601358252604086013560208301526060860135604083015260808601356005811061101e57600080fd5b8060608401525060a0860135608083015260c086013560a083015260e086013560c08301528086013560e0830152508092505061012084013590509250925092565b60006020828403121561107257600080fd5b81518015158114610ec757600080fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052602160045260246000fd5b60006101008201905082518252602083015160208301526040830151604083015260608301516005811061110057634e487b7160e01b600052602160045260246000fd5b806060840152506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b60006060828403121561114757600080fd5b6040516060810181811067ffffffffffffffff8211171561117857634e487b7160e01b600052604160045260246000fd5b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000602082840312156111b157600080fd5b815160068110610ec757600080fd5b6000602082840312156111d257600080fd5b505191905056fea2646970667358221220842546c9a0bbd421806c8ba23afbd0088d87aaca6e6e99e3aa5126d9db89399b64736f6c63430008090033";

type BasicOptionMarketWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicOptionMarketWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicOptionMarketWrapper__factory extends ContractFactory {
  constructor(...args: BasicOptionMarketWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BasicOptionMarketWrapper> {
    return super.deploy(overrides || {}) as Promise<BasicOptionMarketWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BasicOptionMarketWrapper {
    return super.attach(address) as BasicOptionMarketWrapper;
  }
  connect(signer: Signer): BasicOptionMarketWrapper__factory {
    return super.connect(signer) as BasicOptionMarketWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicOptionMarketWrapperInterface {
    return new utils.Interface(_abi) as BasicOptionMarketWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BasicOptionMarketWrapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BasicOptionMarketWrapper;
  }
}
