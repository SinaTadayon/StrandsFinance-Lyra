/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SynthetixAdapter,
  SynthetixAdapterInterface,
} from "../SynthetixAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
    ],
    name: "AllMarketsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuoteRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseToSpend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
    ],
    name: "BaseQuoteExchangeExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardAddress",
        type: "address",
      },
    ],
    name: "InvalidRewardAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
    ],
    name: "MarketIsPaused",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBaseRequested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteToSpend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
    ],
    name: "QuoteBaseExchangeExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "invalid",
        type: "bool",
      },
    ],
    name: "RateIsInvalid",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "fromKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "toKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountSwapped",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountReceived",
        type: "uint256",
      },
    ],
    name: "ReceivedZeroFromExchange",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IAddressResolver",
        name: "addressResolver",
        type: "address",
      },
    ],
    name: "AddressResolverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    name: "BaseSwappedForQuote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "GlobalPausedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "quoteKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rewardAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "trackingCode",
        type: "bytes32",
      },
    ],
    name: "GlobalsSetForContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    name: "MarketPausedSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "marketAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteSwapped",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    name: "QuoteSwappedForBase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISynthetix",
        name: "synthetix",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IExchanger",
        name: "exchanger",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IExchangeRates",
        name: "exchangeRates",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IDelegateApprovals",
        name: "delegateApprovals",
        type: "address",
      },
    ],
    name: "SynthetixAddressesUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addressResolver",
    outputs: [
      {
        internalType: "contract IAddressResolver",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "baseKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delegateApprovals",
    outputs: [
      {
        internalType: "contract IDelegateApprovals",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "estimateExchangeToExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "estimateExchangeToExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseNeeded",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "exchangeFromExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "exchangeFromExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRates",
    outputs: [
      {
        internalType: "contract IExchangeRates",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
    ],
    name: "exchangeToExactBase",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteLimit",
        type: "uint256",
      },
    ],
    name: "exchangeToExactBaseWithLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
    ],
    name: "exchangeToExactQuote",
    outputs: [
      {
        internalType: "uint256",
        name: "baseSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountQuote",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseLimit",
        type: "uint256",
      },
    ],
    name: "exchangeToExactQuoteWithLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "baseSpent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quoteReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchanger",
    outputs: [
      {
        internalType: "contract IExchanger",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "getExchangeParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "quoteKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "baseKey",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "quoteBaseFeeRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseQuoteFeeRate",
            type: "uint256",
          },
        ],
        internalType: "struct SynthetixAdapter.ExchangeParams",
        name: "exchangeParams",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "to",
        type: "bytes32",
      },
    ],
    name: "getSpotPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
    ],
    name: "getSpotPriceForMarket",
    outputs: [
      {
        internalType: "uint256",
        name: "spotPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isGlobalPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMarketPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoteKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "optionMarket",
        type: "address",
      },
    ],
    name: "requireNotGlobalPaused",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAddressResolver",
        name: "_addressResolver",
        type: "address",
      },
    ],
    name: "setAddressResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setGlobalPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_quoteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_baseKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_rewardAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_trackingCode",
        type: "bytes32",
      },
    ],
    name: "setGlobalsForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isPaused",
        type: "bool",
      },
    ],
    name: "setMarketPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetix",
    outputs: [
      {
        internalType: "contract ISynthetix",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "trackingCode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateSynthetixAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ac0806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806379ba50971161011a578063ae58cf0b116100ad578063cfbe7f441161007c578063cfbe7f4414610484578063d667e5a4146104d9578063f6c9988a146104ec578063fb4876d7146104ff578063fb585b111461051f57600080fd5b8063ae58cf0b14610411578063b714fa3e14610424578063cc8e05c214610441578063cf7fb2641461046157600080fd5b806381d9f28e116100e957806381d9f28e146103ba5780638da5cb5b146103c257806399798509146103d5578063a88c32a2146103fe57600080fd5b806379ba5097146103845780637dbae6481461038c5780637f8c2d611461039f5780638129fc1c146103b257600080fd5b806341627ea711610192578063599c5d0811610161578063599c5d08146103385780636f3dfefa1461034b578063759b52251461035e57806376cad8341461037157600080fd5b806341627ea7146102ec5780634d12fca4146102ff5780634ffcd9df1461031257806353a47bb71461032557600080fd5b806327a008c1116101ce57806327a008c11461027e5780633535c97b1461029e578063362e6c0b146102b157806339fcb4be146102d957600080fd5b806305a2ee2a1461020057806314302387146102355780631627540c1461024a57806323ebff491461025d575b600080fd5b6003546102189061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102486102433660046115e0565b610532565b005b6102486102583660046115e0565b6105aa565b61027061026b3660046115fd565b610600565b60405190815260200161022c565b61027061028c3660046115e0565b60086020526000908152604090205481565b600754610218906001600160a01b031681565b6102c46102bf3660046116a7565b610615565b6040805192835260208301919091520161022c565b6102c46102e73660046116a7565b61067f565b6102486102fa3660046115e0565b6106d3565b600554610218906001600160a01b031681565b600654610218906001600160a01b031681565b600154610218906001600160a01b031681565b6102c46103463660046116ed565b61070b565b61027061035936600461172d565b610728565b600454610218906001600160a01b031681565b61024861037f366004611754565b6107ee565b610248610837565b61027061039a3660046115e0565b6108ef565b6102486103ad366004611771565b61099d565b610248610a08565b610248610adb565b600054610218906001600160a01b031681565b6102186103e33660046115e0565b600a602052600090815260409020546001600160a01b031681565b6102c461040c3660046116ed565b610dd2565b61027061041f3660046115fd565b610de3565b6003546104319060ff1681565b604051901515815260200161022c565b61027061044f3660046115e0565b60096020526000908152604090205481565b61043161046f3660046115e0565b60026020526000908152604090205460ff1681565b6104976104923660046115e0565b610def565b60405161022c9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6102486104e73660046117aa565b61101f565b6102706104fa3660046117fc565b6110fc565b61027061050d3660046115e0565b600b6020526000908152604090205481565b61027061052d3660046117fc565b611131565b61053a611155565b60038054610100600160a81b0319166101006001600160a01b03841602179055610562610adb565b6003546040516101009091046001600160a01b031681527f77a0d41431d4d1c45459357535878e774682df27b236483a0be6f78000cbc5de906020015b60405180910390a150565b6105b2611155565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200161059f565b600061060c838361119d565b90505b92915050565b60008060006106248786611131565b90508381111561066657865160408089015160208a01519151636770c89760e01b815261065d9330938a9387938b939290600401611827565b60405180910390fd5b80610671878361119d565b925092505094509492505050565b600080600061068e87866110fc565b9050838111156106c857865160208801516040808a015190516335cd65f360e01b815261065d9330938a9387938b93929190600401611827565b806106718783611328565b60035460ff1615610708576040516348bf9ae560e01b81523060048201526001600160a01b038216602482015260440161065d565b50565b60008061071c858585600019610615565b91509150935093915050565b600654604051630c71cd2360e01b815260048101839052600091829182916001600160a01b031690630c71cd2390602401604080518083038186803b15801561077057600080fd5b505afa158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611862565b9150915081600014806107b85750805b156107e75760405163239ed03f60e11b815230600482015260248101839052811515604482015260640161065d565b5092915050565b6107f6611155565b6003805460ff19168215159081179091556040519081527f9b05e78546abbee90b7c8730f27509b1582ccc91b8f65aa578222fcaaf258f749060200161059f565b6001546001600160a01b0316331461087d576001546040516312d9f3db60e31b81523060048201523360248201526001600160a01b03909116604482015260640161065d565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b600354600090829060ff1615610929576040516348bf9ae560e01b81523060048201526001600160a01b038216602482015260440161065d565b6001600160a01b03811660009081526002602052604090205460ff161561097457604051630d7e318360e01b81523060048201526001600160a01b038216602482015260440161065d565b6001600160a01b03831660009081526009602052604090205461099690610728565b9392505050565b6109a5611155565b6001600160a01b038216600081815260026020908152604091829020805460ff19168515159081179091558251938452908301527f29ddfbde5c0d97d0ef6ca59e6566ec1237d92cd97dd7a1aa76aefe14b70d524b910160405180910390a15050565b600154600160a81b900460ff16610a2c57600154600160a01b900460ff1615610a30565b303b155b610a935760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161065d565b600154600160a81b900460ff16158015610abd576001805461ffff60a01b191661010160a01b1790555b610ac56114a9565b8015610708576001805460ff60a81b1916905550565b6003546040516321f8a72160e01b81526d0a0e4def0f2a6f2dce8d0cae8d2f60931b60048201526101009091046001600160a01b0316906321f8a7219060240160206040518083038186803b158015610b3357600080fd5b505afa158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6b9190611887565b600480546001600160a01b0319166001600160a01b039283161781556003546040516321f8a72160e01b81526822bc31b430b733b2b960b91b928101929092526101009004909116906321f8a7219060240160206040518083038186803b158015610bd557600080fd5b505afa158015610be9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0d9190611887565b600580546001600160a01b0319166001600160a01b039283161790556003546040516321f8a72160e01b81526c45786368616e6765526174657360981b6004820152610100909104909116906321f8a7219060240160206040518083038186803b158015610c7a57600080fd5b505afa158015610c8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb29190611887565b600680546001600160a01b0319166001600160a01b039283161790556003546040516321f8a72160e01b81527044656c6567617465417070726f76616c7360781b6004820152610100909104909116906321f8a7219060240160206040518083038186803b158015610d2357600080fd5b505afa158015610d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5b9190611887565b600780546001600160a01b0319166001600160a01b0392831690811790915560045460055460065460408051938616845291851660208401529093169281019290925260608201527fb00bf94a989859908b656894cc3628460456bec70528fde9a5d1451502d375b49060800160405180910390a1565b60008061071c85858560001961067f565b600061060c8383611328565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152600354829060ff1615610e51576040516348bf9ae560e01b81523060048201526001600160a01b038216602482015260440161065d565b6001600160a01b03811660009081526002602052604090205460ff1615610e9c57604051630d7e318360e01b81523060048201526001600160a01b038216602482015260440161065d565b6040805160a08101825260008082526001600160a01b03861680825260086020908152848320548185015290825260099052828120549282018390526060820181905260808201529250610eef90610728565b825260055460208301516040808501519051631a5c609560e01b8152600481019290925260248201526001600160a01b0390911690631a5c60959060440160206040518083038186803b158015610f4557600080fd5b505afa158015610f59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7d91906118a4565b606083015260055460408084015160208501519151631a5c609560e01b81526001600160a01b0390931692631a5c609592610fc49291600401918252602082015260400190565b60206040518083038186803b158015610fdc57600080fd5b505afa158015610ff0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101491906118a4565b608083015250919050565b611027611155565b6001600160a01b03821661105f57604051634322cea160e01b81523060048201526001600160a01b038316602482015260440161065d565b6001600160a01b03858116600081815260086020908152604080832089905560098252808320889055600a825280832080546001600160a01b0319169588169586179055600b82529182902085905581518881529081018790529081019290925260608201839052907f1ea3fec1ea8c1fa60c04ec062e29b29fba18dab76abdd9ac37c9e78639fa3a019060800160405180910390a25050505050565b8151606083015160009161060c9161112b9061111a6012600a6119b7565b61112491906119c3565b859061152a565b90611542565b8151608083015160009161060c9161114f9061111a6012600a6119b7565b9061152a565b6000546001600160a01b0316331461119b5760005460405163035785f360e31b81523060048201523360248201526001600160a01b03909116604482015260640161065d565b565b6000816111ac5750600061060f565b600480546001600160a01b038581166000908152600960209081526040808320546008835281842054600a845282852054600b9094529382902054915163123cad6d60e31b8152958516966391e56b689661121296339693958c959116929091016119da565b602060405180830381600087803b15801561122c57600080fd5b505af1158015611240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126491906118a4565b90506402540be40082118015611278575080155b156112db576001600160a01b03831660009081526009602090815260408083205460089092529182902054915163051e940360e51b815230600482015260248101919091526044810191909152606481018390526084810182905260a40161065d565b604080518381526020810183905233916001600160a01b038616917f6821d7fdba33c25477cb96e3e21d4b5c7e6ac1b692e363ac18472a8c53d084b391015b60405180910390a392915050565b6000816113375750600061060f565b600480546001600160a01b038581166000908152600860209081526040808320546009835281842054600a845282852054600b9094529382902054915163123cad6d60e31b8152958516966391e56b689661139d96339693958c959116929091016119da565b602060405180830381600087803b1580156113b757600080fd5b505af11580156113cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ef91906118a4565b90506402540be40082118015611403575080155b15611466576001600160a01b03831660009081526008602090815260408083205460099092529182902054915163051e940360e51b815230600482015260248101919091526044810191909152606481018390526084810182905260a40161065d565b604080518381526020810183905233916001600160a01b038616917f70f50ab67b9243e12fad4429b7610619e14e835e65e5e1949cda40195907fe42910161131a565b600154600160a81b900460ff166115165760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161065d565b600080546001600160a01b03191633179055565b600061060c838361153d6012600a6119b7565b61155a565b600061060c83836115556012600a6119b7565b6115b3565b6000808361156984600a611a15565b6115739087611a15565b61157d9190611a4a565b9050600561158c600a83611a5e565b1061159f5761159c600a82611a72565b90505b6115aa600a82611a4a565b95945050505050565b6000806115c1600a84611a4a565b6115738587611a15565b6001600160a01b038116811461070857600080fd5b6000602082840312156115f257600080fd5b8135610996816115cb565b6000806040838503121561161057600080fd5b823561161b816115cb565b946020939093013593505050565b600060a0828403121561163b57600080fd5b60405160a0810181811067ffffffffffffffff8211171561166c57634e487b7160e01b600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b60008060008061010085870312156116be57600080fd5b6116c88686611629565b935060a08501356116d8816115cb565b939693955050505060c08201359160e0013590565b600080600060e0848603121561170257600080fd5b61170c8585611629565b925060a084013561171c816115cb565b9295929450505060c0919091013590565b60006020828403121561173f57600080fd5b5035919050565b801515811461070857600080fd5b60006020828403121561176657600080fd5b813561099681611746565b6000806040838503121561178457600080fd5b823561178f816115cb565b9150602083013561179f81611746565b809150509250929050565b600080600080600060a086880312156117c257600080fd5b85356117cd816115cb565b9450602086013593506040860135925060608601356117eb816115cb565b949793965091946080013592915050565b60008060c0838503121561180f57600080fd5b6118198484611629565b9460a0939093013593505050565b6001600160a01b03979097168752602087019590955260408601939093526060850191909152608084015260a083015260c082015260e00190565b6000806040838503121561187557600080fd5b82519150602083015161179f81611746565b60006020828403121561189957600080fd5b8151610996816115cb565b6000602082840312156118b657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561190e5781600019048211156118f4576118f46118bd565b8085161561190157918102915b93841c93908002906118d8565b509250929050565b6000826119255750600161060f565b816119325750600061060f565b816001811461194857600281146119525761196e565b600191505061060f565b60ff841115611963576119636118bd565b50506001821b61060f565b5060208310610133831016604e8410600b8410161715611991575081810a61060f565b61199b83836118d3565b80600019048211156119af576119af6118bd565b029392505050565b600061060c8383611916565b6000828210156119d5576119d56118bd565b500390565b6001600160a01b039687168152602081019590955260408501939093526060840191909152909216608082015260a081019190915260c00190565b6000816000190483118215151615611a2f57611a2f6118bd565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611a5957611a59611a34565b500490565b600082611a6d57611a6d611a34565b500690565b60008219821115611a8557611a856118bd565b50019056fea26469706673582212200af6a7ab1b0edbc6387da864712dadee9433fda00e19b6d6dcff4d618a8916e364736f6c63430008090033";

type SynthetixAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SynthetixAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SynthetixAdapter__factory extends ContractFactory {
  constructor(...args: SynthetixAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SynthetixAdapter> {
    return super.deploy(overrides || {}) as Promise<SynthetixAdapter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SynthetixAdapter {
    return super.attach(address) as SynthetixAdapter;
  }
  connect(signer: Signer): SynthetixAdapter__factory {
    return super.connect(signer) as SynthetixAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SynthetixAdapterInterface {
    return new utils.Interface(_abi) as SynthetixAdapterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SynthetixAdapter {
    return new Contract(address, _abi, signerOrProvider) as SynthetixAdapter;
  }
}
