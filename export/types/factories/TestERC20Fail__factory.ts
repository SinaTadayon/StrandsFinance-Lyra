/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC20Fail, TestERC20FailInterface } from "../TestERC20Fail";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "forceFail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxApproveFail",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "permit",
        type: "bool",
      },
    ],
    name: "permitMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "permitted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_forceFail",
        type: "bool",
      },
    ],
    name: "setForceFail",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_maxApproveFail",
        type: "bool",
      },
    ],
    name: "setMaxApprovalFail",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526006805461ffff191690553480156200001c57600080fd5b50604051620010e9380380620010e98339810160408190526200003f916200020c565b8181818181600390805190602001906200005b92919062000099565b5080516200007190600490602084019062000099565b5050336000908152600560205260409020805460ff1916600117905550620002b39350505050565b828054620000a79062000276565b90600052602060002090601f016020900481019282620000cb576000855562000116565b82601f10620000e657805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000116578251825591602001919060010190620000f9565b506200012492915062000128565b5090565b5b8082111562000124576000815560010162000129565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016757600080fd5b81516001600160401b03808211156200018457620001846200013f565b604051601f8301601f19908116603f01168101908282118183101715620001af57620001af6200013f565b81604052838152602092508683858801011115620001cc57600080fd5b600091505b83821015620001f05785820183015181830184015290820190620001d1565b83821115620002025760008385830101525b9695505050505050565b600080604083850312156200022057600080fd5b82516001600160401b03808211156200023857600080fd5b620002468683870162000155565b935060208501519150808211156200025d57600080fd5b506200026c8582860162000155565b9150509250929050565b600181811c908216806200028b57607f821691505b60208210811415620002ad57634e487b7160e01b600052602260045260246000fd5b50919050565b610e2680620002c36000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636f9445e8116100ad5780639dcff856116100715780639dcff85614610285578063a457c2d714610292578063a9059cbb146102a5578063c465a5d5146102b8578063dd62ed3e146102cb57600080fd5b80636f9445e81461020e57806370a082311461022057806395d89b411461024957806398e92ebb146102515780639dc29fac1461027257600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b57806340c10f19146101ae5780635164e85a146101c35780636cc301e3146101eb57600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e610304565b60405161013b9190610bce565b60405180910390f35b610157610152366004610c3f565b610396565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610c69565b6103e4565b6040516012815260200161013b565b6101576101a9366004610c3f565b61040f565b6101c16101bc366004610c3f565b610454565b005b6101c16101d1366004610cb5565b600680549115156101000261ff0019909216919091179055565b6101576101f9366004610cd0565b60056020526000908152604090205460ff1681565b60065461015790610100900460ff1681565b61016b61022e366004610cd0565b6001600160a01b031660009081526020819052604090205490565b61012e61049a565b6101c161025f366004610cb5565b6006805460ff1916911515919091179055565b6101c1610280366004610c3f565b6104a9565b6006546101579060ff1681565b6101576102a0366004610c3f565b6104e2565b6101576102b3366004610c3f565b61057b565b6101c16102c6366004610ceb565b61059b565b61016b6102d9366004610d1e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461031390610d48565b80601f016020809104026020016040519081016040528092919081815260200182805461033f90610d48565b801561038c5780601f106103615761010080835404028352916020019161038c565b820191906000526020600020905b81548152906001019060200180831161036f57829003601f168201915b5050505050905090565b60065460009060ff16156103ac575060006103de565b600654610100900460ff1680156103c4575060001982145b156103d1575060006103de565b6103db83836105f5565b90505b92915050565b60065460009060ff16156103fa57506000610408565b610405848484610602565b90505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161044b918590610446908690610d99565b6106ac565b50600192915050565b3360009081526005602052604090205460ff1661048c5760405162461bcd60e51b815260040161048390610db1565b60405180910390fd5b61049682826107d1565b5050565b60606004805461031390610d48565b3360009081526005602052604090205460ff166104d85760405162461bcd60e51b815260040161048390610db1565b61049682826108b0565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105645760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610483565b61057133858584036106ac565b5060019392505050565b60065460009060ff1615610591575060006103de565b6103db83836109f6565b3360009081526005602052604090205460ff166105ca5760405162461bcd60e51b815260040161048390610db1565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b600061044b3384846106ac565b600061060f8484846109ff565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106945760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610483565b6106a185338584036106ac565b506001949350505050565b6001600160a01b03831661070e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610483565b6001600160a01b03821661076f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610483565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0382166108275760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610483565b80600260008282546108399190610d99565b90915550506001600160a01b03821660009081526020819052604081208054839290610866908490610d99565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109105760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610483565b6001600160a01b038216600090815260208190526040902054818110156109845760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610483565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109b3908490610dd9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016107c4565b600061044b3384845b6001600160a01b038316610a635760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610483565b6001600160a01b038216610ac55760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610483565b6001600160a01b03831660009081526020819052604090205481811015610b3d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610483565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610b74908490610d99565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bc091815260200190565b60405180910390a350505050565b600060208083528351808285015260005b81811015610bfb57858101830151858201604001528201610bdf565b81811115610c0d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c3a57600080fd5b919050565b60008060408385031215610c5257600080fd5b610c5b83610c23565b946020939093013593505050565b600080600060608486031215610c7e57600080fd5b610c8784610c23565b9250610c9560208501610c23565b9150604084013590509250925092565b80358015158114610c3a57600080fd5b600060208284031215610cc757600080fd5b6103db82610ca5565b600060208284031215610ce257600080fd5b6103db82610c23565b60008060408385031215610cfe57600080fd5b610d0783610c23565b9150610d1560208401610ca5565b90509250929050565b60008060408385031215610d3157600080fd5b610d3a83610c23565b9150610d1560208401610c23565b600181811c90821680610d5c57607f821691505b60208210811415610d7d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610dac57610dac610d83565b500190565b6020808252600e908201526d1bdb9b1e481c195c9b5a5d1d195960921b604082015260600190565b600082821015610deb57610deb610d83565b50039056fea264697066735822122087d88f183b5913b10b67f27a776aa121b2a7d04c8b5d99d76779c8805f5501ae64736f6c63430008090033";

type TestERC20FailConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20FailConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20Fail__factory extends ContractFactory {
  constructor(...args: TestERC20FailConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20Fail> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<TestERC20Fail>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): TestERC20Fail {
    return super.attach(address) as TestERC20Fail;
  }
  connect(signer: Signer): TestERC20Fail__factory {
    return super.connect(signer) as TestERC20Fail__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20FailInterface {
    return new utils.Interface(_abi) as TestERC20FailInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20Fail {
    return new Contract(address, _abi, signerOrProvider) as TestERC20Fail;
  }
}
