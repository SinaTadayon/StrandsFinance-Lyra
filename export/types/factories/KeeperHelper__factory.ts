/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KeeperHelper, KeeperHelperInterface } from "../KeeperHelper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greekCache",
    outputs: [
      {
        internalType: "contract OptionGreekCache",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "_optionMarket",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
    ],
    name: "liquidate8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "liquidateMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "optionMarket",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
    ],
    name: "settle16",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
    ],
    name: "settle24",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch4",
        type: "uint256",
      },
    ],
    name: "settle32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch5",
        type: "uint256",
      },
    ],
    name: "settle40",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
    ],
    name: "settle8",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "batch1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch4",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch5",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch6",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch7",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch8",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch9",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "batch10",
        type: "uint256",
      },
    ],
    name: "settle80",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "positionIds",
        type: "uint256[]",
      },
    ],
    name: "settleMany",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shortCollateral",
    outputs: [
      {
        internalType: "contract ShortCollateral",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateAllBoardCachedGreeks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateStaleBoardCachedGreeks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type KeeperHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KeeperHelper__factory extends ContractFactory {
  constructor(...args: KeeperHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KeeperHelper> {
    return super.deploy(overrides || {}) as Promise<KeeperHelper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): KeeperHelper {
    return super.attach(address) as KeeperHelper;
  }
  connect(signer: Signer): KeeperHelper__factory {
    return super.connect(signer) as KeeperHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperHelperInterface {
    return new utils.Interface(_abi) as KeeperHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperHelper {
    return new Contract(address, _abi, signerOrProvider) as KeeperHelper;
  }
}
