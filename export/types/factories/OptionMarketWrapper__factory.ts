/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptionMarketWrapper,
  OptionMarketWrapperInterface,
} from "../OptionMarketWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "approving",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "approvalAmount",
        type: "uint256",
      },
    ],
    name: "ApprovalFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AssetTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "DuplicateEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "enum OptionMarket.OptionType",
        name: "optionType",
        type: "uint8",
      },
    ],
    name: "OnlyShorts",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "RemovingInvalidId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "swapFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PositionTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCollateral",
        type: "uint256",
      },
    ],
    name: "SetCollateralTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ICurve",
        name: "curveSwap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract SynthetixAdapter",
        name: "synthetixAdapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IFeeCounter",
        name: "tradingRewards",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minReturnPercent",
        type: "uint256",
      },
    ],
    name: "WrapperParamsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "addCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "addLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "contract ERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "baseAsset",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionMarketContracts",
        name: "_marketContracts",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "addShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "closeLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "closeShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curveSwap",
    outputs: [
      {
        internalType: "contract ICurve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ercIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getBalancesAndAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.StableAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "contract OptionMarket",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isApprovedForAll",
            type: "bool",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.MarketAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.LiquidityBalanceAndAllowance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketAndErcIds",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToERC",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToMarket",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketContracts",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minReturnPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "openLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "openShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "quoteCurveSwap",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "reduceLong",
    outputs: [
      {
        internalType: "uint256",
        name: "totalReceived",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "params",
        type: "uint256",
      },
    ],
    name: "reduceShort",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetixAdapter",
    outputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingRewards",
    outputs: [
      {
        internalType: "contract IFeeCounter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICurve",
        name: "_curveSwap",
        type: "address",
      },
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract IFeeCounter",
        name: "_tradingRewards",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minReturnPercent",
        type: "uint256",
      },
    ],
    name: "updateContractParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670d99a8cec7e2000060055534801561001c57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a161498b8061007a6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80638da5cb5b1161010f578063c390c411116100a2578063dee2a1a111610071578063dee2a1a11461055d578063ecf6578314610570578063ed072e2214610599578063f9fad053146105ac57600080fd5b8063c390c41114610502578063d2f5a5bb14610524578063d8369d9314610537578063d8fca1ac1461054a57600080fd5b8063a8d21c45116100de578063a8d21c451461048b578063b515016b14610494578063b738a96b146104c6578063c3467451146104d957600080fd5b80638da5cb5b1461043f57806390ac6a1114610452578063932d4187146104655780639f0390901461047857600080fd5b806353a47bb71161018757806379ba50971161015657806379ba5097146103fe5780637f402dd314610406578063883ec2f7146104195780638bc369691461042c57600080fd5b806353a47bb7146103255780635f9afcff1461035057806373ccbf6714610363578063779a9683146103eb57600080fd5b806326041aee116101c357806326041aee146102c45780632e7f2f37146102d75780632eeee0b9146102ed57806331296d241461031257600080fd5b80630aecdc7a146101f5578063128b19171461027b5780631627540c1461029c578063172d102d146102b1575b600080fd5b610208610203366004613dfb565b6105bf565b604051610272919081516001600160a01b03908116825260208084015190830152604080840151821690830152606080840151908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b60405180910390f35b61028e610289366004613ea8565b6105d8565b604051908152602001610272565b6102af6102aa366004613ec1565b6107bc565b005b6102af6102bf366004613ede565b610818565b61028e6102d2366004613ea8565b6108a6565b6102df610a77565b604051610272929190613f6d565b6103006102fb366004613ea8565b610b66565b60405160ff9091168152602001610272565b61028e610320366004613ea8565b610b9a565b600154610338906001600160a01b031681565b6040516001600160a01b039091168152602001610272565b6102af61035e366004613faa565b610d25565b6103b1610371366004613ec1565b600a60205260009081526040902080546001820154600283015460038401546004909401546001600160a01b039384169492841693918216928216911685565b604080516001600160a01b03968716815294861660208601529285169284019290925283166060830152909116608082015260a001610272565b6103006103f9366004613ea8565b6110bb565b6102af6110cb565b6102af610414366004614060565b611183565b61028e610427366004613ea8565b61143d565b61020861043a366004613dfb565b6115fe565b600054610338906001600160a01b031681565b61028e610460366004613ea8565b61160f565b6102af610473366004614099565b6117c7565b61028e610486366004613ea8565b61198c565b61028e60055481565b6104a76104a23660046140b6565b611aa5565b604080516001600160a01b039093168352602083019190915201610272565b6102086104d4366004613dfb565b611b4b565b6103386104e7366004614099565b6009602052600090815260409020546001600160a01b031681565b610515610510366004613ec1565b611b5e565b60405161027293929190614278565b600354610338906001600160a01b031681565b6102af610545366004614099565b6124c7565b600254610338906001600160a01b031681565b61028e61056b366004613ea8565b61263d565b61033861057e366004614099565b6007602052600090815260409020546001600160a01b031681565b61028e6105a7366004613ea8565b6127ca565b600454610338906001600160a01b031681565b6105c7613c0d565b6105d2826001612914565b92915050565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a08101855281548416815260018201548416818701526002820154841681860181905260038301548516606083015260049283015490941660808201529351637916c6cd60e11b81529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b15801561068257600080fd5b505afa158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190614360565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b03898116825284870151948201949094528551928101929092529394509216916060810161071660108a901c60ff1690565b815260200160008152602001600081526020018460400151600481111561073f5761073f6143fc565b81526020018460600151815260200161075b60608a901c612cb1565b8152602001600019815260200161078261077c60408b901c63ffffffff1690565b85612cca565b8152602001836001600160a01b0316815250905060006107ac82600060188b901c60ff1611612914565b6080015198975050505050505050565b6107c4612d0e565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b610820612d0e565b600280546001600160a01b038087166001600160a01b03199283161790925560038054868416908316179055600480549285169290911691909117905560058190556040517f684e538a62c4f0f847b52625d992452110a7383fbe027e8327c80ba5b222d6e390610898908690869086908690614412565b60405180910390a150505050565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a08101855281548416815260018201548416958101959095526002810154831685850181905260038201548416606087015260049182015490931660808601529251637916c6cd60e11b8152601887901c63ffffffff1693810193909352929184919063f22d8d9a9060240160e06040518083038186803b15801561095857600080fd5b505afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109909190614360565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b0389811682528487015194820194909452855192810192909252939450921691606081016109ec60108a901c60ff1690565b8152602001600081526020016000815260200184604001516004811115610a1557610a156143fc565b8152602001610a2760788a901c612d56565b815260200160008152602001610a4060388a901c612cb1565b8152602001610a5863ffffffff60588b901c1661077c565b8152602001836001600160a01b0316815250905060006107ac82612d71565b6060806008600681805480602002602001604051908101604052809291908181526020018280548015610ae757602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610ab85790505b5050505050915080805480602002602001604051908101604052809291908181526020018280548015610b5757602002820191906000526020600020906000905b825461010083900a900460ff16815260206001928301818104948501949093039092029101808411610b285790505b50505050509050915091509091565b60068181548110610b7657600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a08101855281548416815260018201548416818701526002820154841681860181905260038301548516606083015260049283015490941660808201529351637916c6cd60e11b81529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b158015610c4457600080fd5b505afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190614360565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b038981168252848701519482019490945285519281019290925293945092169160608101610cd860108a901c60ff1690565b8152602001600081526020016000815260200184604001516004811115610d0157610d016143fc565b8152602001610d1360608a901c612d56565b815260200161075b60a08a901c612cb1565b610d2d612d0e565b6001600160a01b038381166000908152600a6020908152604091829020845181546001600160a01b0319908116918616918217835592860151600183018054851691871691909117905592850151600282018054841691861691909117905560608501516003820180548416918616919091179055608085015160049091018054909216931692909217909155610dc49084613059565b6001600160a01b038084166000908152600a6020526040902060010154610dec911684613059565b60005b600854811015610edc57836001600160a01b03166009600060088481548110610e1a57610e1a61443c565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b03161480610e8f57508260ff1660088281548110610e6d57610e6d61443c565b60009182526020918290209181049091015460ff601f9092166101000a900416145b15610ecc57604051630bc8e84360e41b815230600482015260ff841660248201526001600160a01b03851660448201526064015b60405180910390fd5b610ed581614468565b9050610def565b5080602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610f1a57600080fd5b505afa158015610f2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f529190614483565b600b600083602001516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610fd057600080fd5b505afa158015610fe4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100c91908101906144a0565b6020808301516001600160a01b03166000908152600c825260409020825161103a9391929190910190613c6d565b5050600880546001810190915560208082047ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805460ff948516601f9094166101000a8481029502191693909317909255600090815260099091526040902080546001600160a01b039092166001600160a01b0319909216919091179055565b60088181548110610b7657600080fd5b6001546001600160a01b03163314611111576001546040516312d9f3db60e31b81523060048201523360248201526001600160a01b039091166044820152606401610ec3565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b61118b612d0e565b6002546111a29083906001600160a01b0316613059565b60005b60065481101561128d57826001600160a01b031660076000600684815481106111d0576111d061443c565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b0316148061124557508160ff16600682815481106112235761122361443c565b60009182526020918290209181049091015460ff601f9092166101000a900416145b1561127d57604051630bc8e84360e41b815230600482015260ff831660248201526001600160a01b0384166044820152606401610ec3565b61128681614468565b90506111a5565b50600680546001810190915560208082047ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805460ff808616601f9095166101000a85810291021990911617905560009182526007815260409182902080546001600160a01b0386166001600160a01b03199091168117909155825163313ce56760e01b81529251909263313ce567926004808301939192829003018186803b15801561133a57600080fd5b505afa15801561134e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113729190614483565b6001600160a01b0383166000818152600b6020526040808220805460ff191660ff959095169490941790935582516395d89b4160e01b8152925191926395d89b419260048083019392829003018186803b1580156113cf57600080fd5b505afa1580156113e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261140b91908101906144a0565b6001600160a01b0383166000908152600c6020908152604090912082516114389391929190910190613c6d565b505050565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a08101855281548416815260018201548416958101959095526002810154831685850181905260038201548416606087015260049182015490931660808601529251637916c6cd60e11b8152601887901c63ffffffff1693810193909352929184919063f22d8d9a9060240160e06040518083038186803b1580156114ef57600080fd5b505afa158015611503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115279190614360565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b03898116825284870151948201949094528551928101929092529394509216916060810161158360108a901c60ff1690565b815260200161159560b88a901c612d56565b815260200184608001518152602001846040015160048111156115ba576115ba6143fc565b81526020016115cc60788a901c612d56565b81526020016115de60588a901c612cb1565b81526000196020820152604001610a5863ffffffff60388b901c1661077c565b611606613c0d565b6105d282612d71565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a08101855281548416815260018201548416818701526002820154841681860181905260038301548516606083015260049283015490941660808201529351637916c6cd60e11b81529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b1580156116b957600080fd5b505afa1580156116cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f19190614360565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b03898116825284870151948201949094528551928101929092529394509216916060810161174d60108a901c60ff1690565b815260200161175f60c48a901c612d56565b81526020018460800151815260200184604001516004811115611784576117846143fc565b815260200161179660808a901c612d56565b8152602001600081526020016117af60608a901c612cb1565b815260200161078263ffffffff60408b901c1661077c565b6117cf612d0e565b60008060005b600854811015611838578360ff16600882815481106117f6576117f661443c565b60009182526020918290209181049091015460ff601f9092166101000a90041614156118285780925060019150611838565b61183181614468565b90506117d5565b508061186257604051632cce786160e21b815230600482015260ff84166024820152604401610ec3565b600880546118729060019061454d565b815481106118825761188261443c565b90600052602060002090602091828204019190069054906101000a900460ff16600883815481106118b5576118b561443c565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff16021790555060088054806118f0576118f0614564565b60008281526020808220600019909301818104909301805460ff601f86166101000a8102199091169091559290935594168085526009808352604080872080546001600160a01b03168852600a855290872080546001600160a01b031990811682556001820180548216905560028201805482169055600382018054821690556004909101805482169055929096529091528354169092555050565b60ff600882901c8116600090815260076020908152604080832054815161018081018352948616845260098352908320546001600160a01b03908116855292939216918391818101906119e59087901c63ffffffff1690565b81526000602082015260400160ff601887901c16815260200160008152602001600081526020016000601087901c60ff1611611a22576001611a25565b60005b6004811115611a3657611a366143fc565b8152602001611a48608087901c612d56565b815260200160008152602001611a61604087901c612cb1565b8152602001611a7963ffffffff606088901c1661077c565b8152602001836001600160a01b031681525090506000611a9882612d71565b6080015195945050505050565b600080611ab1856131af565b50611abb846131af565b50600254604051634e21df7560e01b81526001600160a01b0390911690634e21df7590611af09088908890889060040161457a565b604080518083038186803b158015611b0757600080fd5b505afa158015611b1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3f919061459e565b90969095509350505050565b611b53613c0d565b6105d2826000612914565b6006546060908190819060008167ffffffffffffffff811115611b8357611b83613d58565b604051908082528060200260200182016040528015611be257816020015b6040805160c081018252600080825260208083018290529282018190526060808301526080820181905260a08201528252600019909201910181611ba15790505b50905060005b82811015611e7a5760006007600060068481548110611c0957611c0961443c565b600091825260208083208183040154601f9092166101000a90910460ff168352820192909252604090810190912054815160c08101909252600680546001600160a01b039092169350829185908110611c6457611c6461443c565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038616848201819052808452600b8252604080852054909316838601528352600c905290208054606090920191611cc1906145cc565b80601f0160208091040260200160405190810160405280929190818152602001828054611ced906145cc565b8015611d3a5780601f10611d0f57610100808354040283529160200191611d3a565b820191906000526020600020905b815481529060010190602001808311611d1d57829003601f168201915b50505091835250506040516370a0823160e01b81526001600160a01b038b811660048301526020909201918416906370a082319060240160206040518083038186803b158015611d8957600080fd5b505afa158015611d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc19190614607565b8152604051636eb1769f60e11b81526001600160a01b038b8116600483015230602483015260209092019184169063dd62ed3e9060440160206040518083038186803b158015611e1057600080fd5b505afa158015611e24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e489190614607565b815250838381518110611e5d57611e5d61443c565b60200260200101819052505080611e7390614468565b9050611be8565b5060085460008167ffffffffffffffff811115611e9957611e99613d58565b604051908082528060200260200182016040528015611f0757816020015b6040805161010081018252600080825260208083018290529282018190526060808301829052608083015260a0820181905260c0820181905260e08201528252600019909201910181611eb75790505b50905060008267ffffffffffffffff811115611f2557611f25613d58565b604051908082528060200260200182016040528015611f8357816020015b611f70604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b815260200190600190039081611f435790505b50905060005b838110156124b65760006009600060088481548110611faa57611faa61443c565b600091825260208083208183040154601f90921661010090810a90920460ff1684528381019490945260409283018220546001600160a01b03908116808452600a865292849020845160a081018652815483168152600182015483169681019690965260028101548216868601526003810154821660608701526004015416608085015282519081019092526008805491945082918690811061204f5761204f61443c565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038088168583015286820180518216604080880191909152815183168652600b845280862054909416606087015251168352600c9052902080546080909201916120bf906145cc565b80601f01602080910402602001604051908101604052809291908181526020018280546120eb906145cc565b80156121385780601f1061210d57610100808354040283529160200191612138565b820191906000526020600020905b81548152906001019060200180831161211b57829003601f168201915b5050505050815260200182602001516001600160a01b03166370a082318f6040518263ffffffff1660e01b815260040161218191906001600160a01b0391909116815260200190565b60206040518083038186803b15801561219957600080fd5b505afa1580156121ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d19190614607565b815260200182602001516001600160a01b031663dd62ed3e8f306040518363ffffffff1660e01b815260040161221d9291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b15801561223557600080fd5b505afa158015612249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226d9190614607565b815260200182604001516001600160a01b031663e985e9c58f306040518363ffffffff1660e01b81526004016122b99291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b1580156122d157600080fd5b505afa1580156122e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123099190614620565b15158152508584815181106123205761232061443c565b602090810291909101015260808101516040516370a0823160e01b81526001600160a01b038e81166004830152909116906370a082319060240160206040518083038186803b15801561237257600080fd5b505afa158015612386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123aa9190614607565b8484815181106123bc576123bc61443c565b602090810291909101810151015280516060820151604051636eb1769f60e11b81526001600160a01b038f81166004830152918216602482015291169063dd62ed3e9060440160206040518083038186803b15801561241a57600080fd5b505afa15801561242e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124529190614607565b8484815181106124645761246461443c565b60200260200101516040018181525050806060015184848151811061248b5761248b61443c565b60209081029190910101516001600160a01b039091169052506124af905081614468565b9050611f89565b509298909750919550909350505050565b6124cf612d0e565b60008060005b600654811015612538578360ff16600682815481106124f6576124f661443c565b60009182526020918290209181049091015460ff601f9092166101000a90041614156125285780925060019150612538565b61253181614468565b90506124d5565b508061256257604051632cce786160e21b815230600482015260ff84166024820152604401610ec3565b600680546125729060019061454d565b815481106125825761258261443c565b90600052602060002090602091828204019190069054906101000a900460ff16600683815481106125b5576125b561443c565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff16021790555060068054806125f0576125f0614564565b60008281526020808220600019909301818104909301805460ff601f86166101000a81021990911690915592909355941684526007905250506040902080546001600160a01b0319169055565b60ff81166000908152600960209081526040808320546001600160a01b03908116808552600a8452828520835160a08101855281548416815260018201548416818701526002820154841681860181905260038301548516606083015260049283015490941660808201529351637916c6cd60e11b81529487901c63ffffffff16908501529284919063f22d8d9a9060240160e06040518083038186803b1580156126e757600080fd5b505afa1580156126fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061271f9190614360565b60ff600887901c166000908152600760209081526040808320548151610180810183526001600160a01b03898116825284870151948201949094528551928101929092529394509216916060810161277b60108a901c60ff1690565b81526020016000815260200184608001518152602001846040015160048111156127a7576127a76143fc565b815260200184606001518152602001600081526020016117af60608a901c612cb1565b60ff600882901c8116600090815260076020908152604080832054815161018081018352948616845260098352818420546001600160a01b03908116865263ffffffff87851c16938601939093529084018390529192911690829060608101612837601887901c60ff1690565b815260200161284960c087901c612d56565b815260200160008152602001601086901c60ff16600481111561286e5761286e6143fc565b600481111561287f5761287f6143fc565b8152602001612891608087901c612d56565b81526020016128a3604087901c612cb1565b815260001960208201526040016128c363ffffffff606088901c1661077c565b8152602001836001600160a01b031681525090506128e48160c00151613257565b156129095760c0810151604051634e85fe2f60e01b8152610ec3913091600401614664565b6000611a9882612d71565b61291c613c0d565b82516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401819052600383015487166060830152600492830154871660808301526101608a0151848b015194516323b872dd60e01b8152929716909414159493926323b872dd926129b3923392309290910161457a565b600060405180830381600087803b1580156129cd57600080fd5b505af11580156129e1573d6000803e3d6000fd5b50505050612a018660c001518760a0015188608001518660200151613274565b612a0e8660c00151613257565b612ae457612a2886610160015133308961014001516132b4565b8115612ae45761012086015160028760c001516004811115612a4c57612a4c6143fc565b14612abd5760008760a0015188610120015111612a7d578761012001518860a00151612a78919061454d565b612a80565b60005b90508088608001511115612aa557808860800151612a9e919061454d565b9150612abb565b612ab28860c00151613257565b612abb57600091505b505b8015612ae257612ade87610160015185600001518961014001518430613422565b9250505b505b6000612aef87613606565b9050612b1560405180606001604052806000815260200160008152602001600081525090565b8615612ba357875160405163e4e83e3d60e01b81526001600160a01b039091169063e4e83e3d90612b4a908590600401614681565b606060405180830381600087803b158015612b6457600080fd5b505af1158015612b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b9c91906146e3565b9050612c27565b87516040516324ad18cb60e21b81526001600160a01b03909116906392b4632c90612bd2908590600401614681565b606060405180830381600087803b158015612bec57600080fd5b505af1158015612c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c2491906146e3565b90505b612c44886000015133846080015184602001518560400151613682565b6000612c5986600001518a6101600151613718565b9150612c679050818561473f565b9350612c808660200151876040015184600001516138c4565b612c8b898386613a4b565b9650612ca5876000612ca08c60c00151613257565b613aca565b50505050505092915050565b60006105d263ffffffff8316662386f26fc10000614780565b6001600160a01b0381166000908152600b6020526040812054612cf29060029060ff1661479f565b612cfd90600a6148a6565b612d079084614780565b9392505050565b6000546001600160a01b03163314612d545760005460405163035785f360e31b81523060048201523360248201526001600160a01b039091166044820152606401610ec3565b565b60006105d267ffffffffffffffff83166402540be400614780565b612d79613c0d565b81516001600160a01b039081166000908152600a60209081526040808320815160a0810183528154861680825260018301548716948201949094526002820154861681840152600382015486166060820152600490910154851660808201526101608701519187015190949190911690911415919015612e5e5782604001516001600160a01b03166323b872dd333088604001516040518463ffffffff1660e01b8152600401612e2b9392919061457a565b600060405180830381600087803b158015612e4557600080fd5b505af1158015612e59573d6000803e3d6000fd5b505050505b612e7a8560c001518660a0015187608001518660200151613274565b60028560c001516004811115612e9257612e926143fc565b14612f4357612ead85610160015133308861014001516132b4565b818015612ebe575061014085015115155b15612f43576000612ed28660c00151613257565b612f145760008661010001518760a00151612eed91906148b5565b90508087608001511115612f0e57808760800151612f0b919061454d565b91505b50612f1c565b506101208501515b8015612f4157612f3d86610160015185600001518861014001518430613422565b9250505b505b6000612f4e86613606565b9050600086600001516001600160a01b03166237f2bc836040518263ffffffff1660e01b8152600401612f819190614681565b606060405180830381600087803b158015612f9b57600080fd5b505af1158015612faf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fd391906146e3565b9050612ff2876000015133846080015184602001518560400151613682565b60006130078660000151896101600151613718565b91506130159050818561473f565b935061302e8660200151876040015184600001516138c4565b613039888386613a4b565b965061304e876001612ca08b60c00151613257565b505050505050919050565b60405163095ea7b360e01b81526001600160a01b0382811660048301526000602483015283169063095ea7b390604401602060405180830381600087803b1580156130a357600080fd5b505af11580156130b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130db9190614620565b613101573082826000604051636f27b69360e01b8152600401610ec39493929190614412565b60405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b15801561314c57600080fd5b505af1158015613160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131849190614620565b6131ab57308282600019604051636f27b69360e01b8152600401610ec39493929190614412565b5050565b6000805b60065481101561323257826001600160a01b031660076000600684815481106131de576131de61443c565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b031614156132225750600192915050565b61322b81614468565b90506131b3565b50604051635f8b555b60e11b81526001600160a01b0383166004820152602401610ec3565b6000600282600481111561326d5761326d6143fc565b1092915050565b6002846004811115613288576132886143fc565b14801561329457508282115b156132ae576132ae8133306132a9878761454d565b6132b4565b50505050565b60006001600160a01b0384163014156133505760405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905286169063a9059cbb90604401602060405180830381600087803b15801561331157600080fd5b505af1158015613325573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133499190614620565b90506133d5565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd906133809087908790879060040161457a565b602060405180830381600087803b15801561339a57600080fd5b505af11580156133ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133d29190614620565b90505b8061341b5760405163188bd94160e11b81523060048201526001600160a01b0380871660248301528086166044830152841660648201526084810183905260a401610ec3565b5050505050565b60008061342e876131af565b50613438866131af565b506001600160a01b038681166000908152600b602052604080822054928a168083528183205491516370a0823160e01b815230600482015260ff9485169490921692916370a082319060240160206040518083038186803b15801561349c57600080fd5b505afa1580156134b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134d49190614607565b600254604051634fb4d35360e11b81526001600160a01b038d811660048301528c81166024830152604482018c9052606482018b90528981166084830152929350911690639f69a6a69060a401602060405180830381600087803b15801561353b57600080fd5b505af115801561354f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135739190614607565b94508460ff80851690841610156135aa5761358e838561479f565b61359990600a6148a6565b6135a39083614780565b91506135da565b8360ff168360ff1611156135da576135c2848461479f565b6135cd90600a6148a6565b6135d79087614780565b90505b6135e381613b7d565b6135ec83613b7d565b6135f691906148cd565b9450505050509550959350505050565b61360e613ced565b6040518061010001604052808360200151815260200183604001518152602001836060015181526020018360c00151600481111561364e5761364e6143fc565b81526020018360e0015181526020018360800151815260200183610100015181526020018361012001518152509050919050565b6004546001600160a01b03161561341b576004805460405163a4ed578160e01b81526001600160a01b0388811693820193909352868316602482015260448101869052606481018590526084810184905291169063a4ed57819060a401600060405180830381600087803b1580156136f957600080fd5b505af115801561370d573d6000803e3d6000fd5b505050505050505050565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a082319060240160206040518083038186803b15801561375c57600080fd5b505afa158015613770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137949190614607565b915081156138bd57836001600160a01b0316836001600160a01b0316146138b1576001600160a01b0384166000908152600b60205260408120546137dc9060ff16600a6148a6565b6001600160a01b0385166000908152600b60205260409020546138039060ff16600a6148a6565b6005546138109190614780565b61381a919061490c565b905061383285858561382c8186613beb565b30613422565b6040516370a0823160e01b81523060048201529093506001600160a01b03861691506370a082319060240160206040518083038186803b15801561387557600080fd5b505afa158015613889573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138ad9190614607565b9250505b6138bd833033856132b4565b9250929050565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b15801561390657600080fd5b505afa15801561391a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061393e9190614607565b9050801561395257613952843033846132b4565b6001604051637594ee2f60e11b8152600481018490526001600160a01b0385169063eb29dc5e9060240160206040518083038186803b15801561399457600080fd5b505afa1580156139a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139cc919061492e565b60058111156139dd576139dd6143fc565b14156132ae576040516323b872dd60e01b81526001600160a01b038416906323b872dd90613a139030903390879060040161457a565b600060405180830381600087803b158015613a2d57600080fd5b505af1158015613a41573d6000803e3d6000fd5b5050505050505050565b613a53613c0d565b60405180610100016040528085600001516001600160a01b0316815260200184600001518152602001336001600160a01b031681526020018560e00151815260200184602001518152602001846040015181526020018381526020018561016001516001600160a01b031681525090509392505050565b82604001516001600160a01b0316836020015184600001516001600160a01b03167ff74837aa66b0393a1c687b44e30275519696e95458ad4a8bf7657e2364a734508585886060015189608001518a60a001518b60c001518c60e00151604051613b7097969594939291909615158752941515602087015260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b60405180910390a4505050565b60006001600160ff1b03821115613be75760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610ec3565b5090565b6000613bf96012600a614949565b613c038385614780565b612d07919061490c565b60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b828054613c79906145cc565b90600052602060002090601f016020900481019282613c9b5760008555613ce1565b82601f10613cb457805160ff1916838001178555613ce1565b82800160010185558215613ce1579182015b82811115613ce1578251825591602001919060010190613cc6565b50613be7929150613d43565b60405180610100016040528060008152602001600081526020016000815260200160006004811115613d2157613d216143fc565b8152602001600081526020016000815260200160008152602001600081525090565b5b80821115613be75760008155600101613d44565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715613d9257613d92613d58565b60405290565b60405160a0810167ffffffffffffffff81118282101715613d9257613d92613d58565b6001600160a01b0381168114613dd057600080fd5b50565b8035613dde81613dbb565b919050565b60058110613dd057600080fd5b8035613dde81613de3565b60006101808284031215613e0e57600080fd5b613e16613d6e565b613e1f83613dd3565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a0820152613e5f60c08401613df0565b60c082015260e08381013590820152610100808401359082015261012080840135908201526101408084013590820152610160613e9d818501613dd3565b908201529392505050565b600060208284031215613eba57600080fd5b5035919050565b600060208284031215613ed357600080fd5b8135612d0781613dbb565b60008060008060808587031215613ef457600080fd5b8435613eff81613dbb565b93506020850135613f0f81613dbb565b92506040850135613f1f81613dbb565b9396929550929360600135925050565b600081518084526020808501945080840160005b83811015613f6257815160ff1687529582019590820190600101613f43565b509495945050505050565b604081526000613f806040830185613f2f565b8281036020840152613f928185613f2f565b95945050505050565b60ff81168114613dd057600080fd5b600080600083850360e0811215613fc057600080fd5b8435613fcb81613dbb565b93506020850135613fdb81613f9b565b925060a0603f1982011215613fef57600080fd5b50613ff8613d98565b604085013561400681613dbb565b8152606085013561401681613dbb565b6020820152608085013561402981613dbb565b604082015260a085013561403c81613dbb565b606082015260c085013561404f81613dbb565b608082015292959194509192509050565b6000806040838503121561407357600080fd5b823561407e81613dbb565b9150602083013561408e81613f9b565b809150509250929050565b6000602082840312156140ab57600080fd5b8135612d0781613f9b565b6000806000606084860312156140cb57600080fd5b83356140d681613dbb565b925060208401356140e681613dbb565b929592945050506040919091013590565b60005b838110156141125781810151838201526020016140fa565b838111156132ae5750506000910152565b6000815180845261413b8160208601602086016140f7565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b8581101561421c5782840389528151805160ff168552858101516001600160a01b03168686015260408082015161010091906141b3828901826001600160a01b03169052565b505060608281015160ff16908701526080808301518188018390526141da83890182614123565b60a085810151908a015260c080860151908a015260e094850151801515868b01529490935091506142089050565b50998601999450509084019060010161416d565b5091979650505050505050565b600081518084526020808501945080840160005b83811015613f6257815180516001600160a01b031688528381015184890152604090810151908801526060909601959082019060010161423d565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561431c57898403607f190186528151805160ff9081168652848201516001600160a01b031685870152604080830151909116908601528881015160c08a8701819052906142f482880182614123565b838b0151888c015260a0938401519390970192909252505094820194908201906001016142a1565b50508782039088015261432f818a61414f565b94505050505082810360408401526143478185614229565b9695505050505050565b805160068110613dde57600080fd5b600060e0828403121561437257600080fd5b60405160e0810181811067ffffffffffffffff8211171561439557614395613d58565b8060405250825181526020830151602082015260408301516143b681613de3565b8060408301525060608301516060820152608083015160808201526143dd60a08401614351565b60a082015260c08301516143f081613dbb565b60c08201529392505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561447c5761447c614452565b5060010190565b60006020828403121561449557600080fd5b8151612d0781613f9b565b6000602082840312156144b257600080fd5b815167ffffffffffffffff808211156144ca57600080fd5b818401915084601f8301126144de57600080fd5b8151818111156144f0576144f0613d58565b604051601f8201601f19908116603f0116810190838211818310171561451857614518613d58565b8160405282815287602084870101111561453157600080fd5b6145428360208301602088016140f7565b979650505050505050565b60008282101561455f5761455f614452565b500390565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080604083850312156145b157600080fd5b82516145bc81613dbb565b6020939093015192949293505050565b600181811c908216806145e057607f821691505b6020821081141561460157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561461957600080fd5b5051919050565b60006020828403121561463257600080fd5b81518015158114612d0757600080fd5b6005811061466057634e487b7160e01b600052602160045260246000fd5b9052565b6001600160a01b038316815260408101612d076020830184614642565b60006101008201905082518252602083015160208301526040830151604083015260608301516146b46060840182614642565b506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6000606082840312156146f557600080fd5b6040516060810181811067ffffffffffffffff8211171561471857614718613d58565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600080821280156001600160ff1b038490038513161561476157614761614452565b600160ff1b839003841281161561477a5761477a614452565b50500190565b600081600019048311821515161561479a5761479a614452565b500290565b600060ff821660ff8416808210156147b9576147b9614452565b90039392505050565b600181815b808511156147fd5781600019048211156147e3576147e3614452565b808516156147f057918102915b93841c93908002906147c7565b509250929050565b600082614814575060016105d2565b81614821575060006105d2565b816001811461483757600281146148415761485d565b60019150506105d2565b60ff84111561485257614852614452565b50506001821b6105d2565b5060208310610133831016604e8410600b8410161715614880575081810a6105d2565b61488a83836147c2565b806000190482111561489e5761489e614452565b029392505050565b6000612d0760ff841683614805565b600082198211156148c8576148c8614452565b500190565b60008083128015600160ff1b8501841216156148eb576148eb614452565b6001600160ff1b038401831381161561490657614906614452565b50500390565b60008261492957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561494057600080fd5b612d0782614351565b6000612d07838361480556fea26469706673582212203fd98078acbab4dae3c2069d053d7f9740334a1eb63fdb48e6b510d1be4a7e2864736f6c63430008090033";

type OptionMarketWrapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketWrapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarketWrapper__factory extends ContractFactory {
  constructor(...args: OptionMarketWrapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptionMarketWrapper> {
    return super.deploy(overrides || {}) as Promise<OptionMarketWrapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OptionMarketWrapper {
    return super.attach(address) as OptionMarketWrapper;
  }
  connect(signer: Signer): OptionMarketWrapper__factory {
    return super.connect(signer) as OptionMarketWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketWrapperInterface {
    return new utils.Interface(_abi) as OptionMarketWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarketWrapper {
    return new Contract(address, _abi, signerOrProvider) as OptionMarketWrapper;
  }
}
