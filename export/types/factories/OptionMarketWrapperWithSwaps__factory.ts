/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptionMarketWrapperWithSwaps,
  OptionMarketWrapperWithSwapsInterface,
} from "../OptionMarketWrapperWithSwaps";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "approving",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "approvalAmount",
        type: "uint256",
      },
    ],
    name: "ApprovalFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AssetTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "DuplicateEntry",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "RemovingInvalidId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isOpen",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "swapFee",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PositionTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCollateral",
        type: "uint256",
      },
    ],
    name: "SetCollateralTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ICurve",
        name: "curveSwap",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract SynthetixAdapter",
        name: "synthetixAdapter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IFeeCounter",
        name: "tradingRewards",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minReturnPercent",
        type: "uint256",
      },
    ],
    name: "WrapperParamsUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "addCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "contract ERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract ERC20",
            name: "baseAsset",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionMarketContracts",
        name: "_marketContracts",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "curveSwap",
    outputs: [
      {
        internalType: "contract ICurve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ercIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getBalancesAndAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.StableAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "id",
            type: "uint8",
          },
          {
            internalType: "contract OptionMarket",
            name: "market",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isApprovedForAll",
            type: "bool",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.MarketAssetView[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.LiquidityBalanceAndAllowance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketAndErcIds",
    outputs: [
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
      {
        internalType: "uint8[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToERC",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    name: "idToMarket",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketContracts",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketIds",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minReturnPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "inputAmount",
            type: "uint256",
          },
          {
            internalType: "contract ERC20",
            name: "inputAsset",
            type: "address",
          },
        ],
        internalType:
          "struct OptionMarketWrapperWithSwaps.OptionPositionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "swapFee",
            type: "int256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketWrapperWithSwaps.ReturnDetails",
        name: "returnDetails",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "quoteCurveSwap",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeCurveStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "id",
        type: "uint8",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetixAdapter",
    outputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingRewards",
    outputs: [
      {
        internalType: "contract IFeeCounter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICurve",
        name: "_curveSwap",
        type: "address",
      },
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract IFeeCounter",
        name: "_tradingRewards",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minReturnPercent",
        type: "uint256",
      },
    ],
    name: "updateContractParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052670d99a8cec7e2000060055534801561001c57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1613a688061007a6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80638da5cb5b116100c3578063c390c4111161007c578063c390c411146103f8578063d2f5a5bb1461041a578063d8369d931461042d578063d8fca1ac14610440578063ecf6578314610453578063f9fad0531461047c57600080fd5b80638da5cb5b1461034d578063932d418714610360578063a8d21c4514610373578063b515016b1461038a578063b738a96b146103bc578063c3467451146103cf57600080fd5b80635f9afcff116101155780635f9afcff1461027157806373ccbf6714610284578063779a96831461030c57806379ba50971461031f5780637f402dd3146103275780638bc369691461033a57600080fd5b80630aecdc7a1461015d5780631627540c146101e3578063172d102d146101f85780632e7f2f371461020b5780632eeee0b91461022157806353a47bb714610246575b600080fd5b61017061016b366004612fa8565b61048f565b6040516101da919081516001600160a01b03908116825260208084015190830152604080840151821690830152606080840151908301526080808401519083015260a0838101519083015260c0808401519083015260e09283015116918101919091526101000190565b60405180910390f35b6101f66101f1366004613055565b6104a8565b005b6101f6610206366004613072565b610504565b610213610592565b6040516101da929190613101565b61023461022f36600461312f565b610681565b60405160ff90911681526020016101da565b600154610259906001600160a01b031681565b6040516001600160a01b0390911681526020016101da565b6101f661027f366004613157565b6106b5565b6102d2610292366004613055565b600a60205260009081526040902080546001820154600283015460038401546004909401546001600160a01b039384169492841693918216928216911685565b604080516001600160a01b03968716815294861660208601529285169284019290925283166060830152909116608082015260a0016101da565b61023461031a36600461312f565b610a4b565b6101f6610a5b565b6101f661033536600461320d565b610b13565b610170610348366004612fa8565b610dcd565b600054610259906001600160a01b031681565b6101f661036e366004613246565b610dde565b61037c60055481565b6040519081526020016101da565b61039d610398366004613263565b610fa3565b604080516001600160a01b0390931683526020830191909152016101da565b6101706103ca366004612fa8565b611049565b6102596103dd366004613246565b6009602052600090815260409020546001600160a01b031681565b61040b610406366004613055565b61105c565b6040516101da93929190613422565b600354610259906001600160a01b031681565b6101f661043b366004613246565b6119c5565b600254610259906001600160a01b031681565b610259610461366004613246565b6007602052600090815260409020546001600160a01b031681565b600454610259906001600160a01b031681565b610497612dc3565b6104a2826001611b3b565b92915050565b6104b0611ed8565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200160405180910390a150565b61050c611ed8565b600280546001600160a01b038087166001600160a01b03199283161790925560038054868416908316179055600480549285169290911691909117905560058190556040517f684e538a62c4f0f847b52625d992452110a7383fbe027e8327c80ba5b222d6e3906105849086908690869086906134fb565b60405180910390a150505050565b606080600860068180548060200260200160405190810160405280929190818152602001828054801561060257602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116105d35790505b505050505091508080548060200260200160405190810160405280929190818152602001828054801561067257602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116106435790505b50505050509050915091509091565b6006818154811061069157600080fd5b9060005260206000209060209182820401919006915054906101000a900460ff1681565b6106bd611ed8565b6001600160a01b038381166000908152600a6020908152604091829020845181546001600160a01b03199081169186169182178355928601516001830180548516918716919091179055928501516002820180548416918616919091179055606085015160038201805484169186169190911790556080850151600490910180549092169316929092179091556107549084611f20565b6001600160a01b038084166000908152600a602052604090206001015461077c911684611f20565b60005b60085481101561086c57836001600160a01b031660096000600884815481106107aa576107aa613525565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b0316148061081f57508260ff16600882815481106107fd576107fd613525565b60009182526020918290209181049091015460ff601f9092166101000a900416145b1561085c57604051630bc8e84360e41b815230600482015260ff841660248201526001600160a01b03851660448201526064015b60405180910390fd5b61086581613551565b905061077f565b5080602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156108aa57600080fd5b505afa1580156108be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e2919061356c565b600b600083602001516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff021916908360ff16021790555080602001516001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561096057600080fd5b505afa158015610974573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261099c9190810190613589565b6020808301516001600160a01b03166000908152600c82526040902082516109ca9391929190910190612e23565b5050600880546001810190915560208082047ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805460ff948516601f9094166101000a8481029502191693909317909255600090815260099091526040902080546001600160a01b039092166001600160a01b0319909216919091179055565b6008818154811061069157600080fd5b6001546001600160a01b03163314610aa1576001546040516312d9f3db60e31b81523060048201523360248201526001600160a01b039091166044820152606401610853565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b610b1b611ed8565b600254610b329083906001600160a01b0316611f20565b60005b600654811015610c1d57826001600160a01b03166007600060068481548110610b6057610b60613525565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b03161480610bd557508160ff1660068281548110610bb357610bb3613525565b60009182526020918290209181049091015460ff601f9092166101000a900416145b15610c0d57604051630bc8e84360e41b815230600482015260ff831660248201526001600160a01b0384166044820152606401610853565b610c1681613551565b9050610b35565b50600680546001810190915560208082047ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805460ff808616601f9095166101000a85810291021990911617905560009182526007815260409182902080546001600160a01b0386166001600160a01b03199091168117909155825163313ce56760e01b81529251909263313ce567926004808301939192829003018186803b158015610cca57600080fd5b505afa158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d02919061356c565b6001600160a01b0383166000818152600b6020526040808220805460ff191660ff959095169490941790935582516395d89b4160e01b8152925191926395d89b419260048083019392829003018186803b158015610d5f57600080fd5b505afa158015610d73573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d9b9190810190613589565b6001600160a01b0383166000908152600c602090815260409091208251610dc89391929190910190612e23565b505050565b610dd5612dc3565b6104a282612076565b610de6611ed8565b60008060005b600854811015610e4f578360ff1660088281548110610e0d57610e0d613525565b60009182526020918290209181049091015460ff601f9092166101000a9004161415610e3f5780925060019150610e4f565b610e4881613551565b9050610dec565b5080610e7957604051632cce786160e21b815230600482015260ff84166024820152604401610853565b60088054610e8990600190613636565b81548110610e9957610e99613525565b90600052602060002090602091828204019190069054906101000a900460ff1660088381548110610ecc57610ecc613525565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055506008805480610f0757610f0761364d565b60008281526020808220600019909301818104909301805460ff601f86166101000a8102199091169091559290935594168085526009808352604080872080546001600160a01b03168852600a855290872080546001600160a01b031990811682556001820180548216905560028201805482169055600382018054821690556004909101805482169055929096529091528354169092555050565b600080610faf8561235e565b50610fb98461235e565b50600254604051634e21df7560e01b81526001600160a01b0390911690634e21df7590610fee90889088908890600401613663565b604080518083038186803b15801561100557600080fd5b505afa158015611019573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103d9190613687565b90969095509350505050565b611051612dc3565b6104a2826000611b3b565b6006546060908190819060008167ffffffffffffffff81111561108157611081612f0e565b6040519080825280602002602001820160405280156110e057816020015b6040805160c081018252600080825260208083018290529282018190526060808301526080820181905260a0820152825260001990920191018161109f5790505b50905060005b82811015611378576000600760006006848154811061110757611107613525565b600091825260208083208183040154601f9092166101000a90910460ff168352820192909252604090810190912054815160c08101909252600680546001600160a01b03909216935082918590811061116257611162613525565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038616848201819052808452600b8252604080852054909316838601528352600c9052902080546060909201916111bf906136b5565b80601f01602080910402602001604051908101604052809291908181526020018280546111eb906136b5565b80156112385780601f1061120d57610100808354040283529160200191611238565b820191906000526020600020905b81548152906001019060200180831161121b57829003601f168201915b50505091835250506040516370a0823160e01b81526001600160a01b038b811660048301526020909201918416906370a082319060240160206040518083038186803b15801561128757600080fd5b505afa15801561129b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bf91906136f0565b8152604051636eb1769f60e11b81526001600160a01b038b8116600483015230602483015260209092019184169063dd62ed3e9060440160206040518083038186803b15801561130e57600080fd5b505afa158015611322573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134691906136f0565b81525083838151811061135b5761135b613525565b6020026020010181905250508061137190613551565b90506110e6565b5060085460008167ffffffffffffffff81111561139757611397612f0e565b60405190808252806020026020018201604052801561140557816020015b6040805161010081018252600080825260208083018290529282018190526060808301829052608083015260a0820181905260c0820181905260e082015282526000199092019101816113b55790505b50905060008267ffffffffffffffff81111561142357611423612f0e565b60405190808252806020026020018201604052801561148157816020015b61146e604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816114415790505b50905060005b838110156119b457600060096000600884815481106114a8576114a8613525565b600091825260208083208183040154601f90921661010090810a90920460ff1684528381019490945260409283018220546001600160a01b03908116808452600a865292849020845160a081018652815483168152600182015483169681019690965260028101548216868601526003810154821660608701526004015416608085015282519081019092526008805491945082918690811061154d5761154d613525565b60009182526020808320818304015460ff601f9093166101000a9004821684526001600160a01b038088168583015286820180518216604080880191909152815183168652600b845280862054909416606087015251168352600c9052902080546080909201916115bd906136b5565b80601f01602080910402602001604051908101604052809291908181526020018280546115e9906136b5565b80156116365780601f1061160b57610100808354040283529160200191611636565b820191906000526020600020905b81548152906001019060200180831161161957829003601f168201915b5050505050815260200182602001516001600160a01b03166370a082318f6040518263ffffffff1660e01b815260040161167f91906001600160a01b0391909116815260200190565b60206040518083038186803b15801561169757600080fd5b505afa1580156116ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cf91906136f0565b815260200182602001516001600160a01b031663dd62ed3e8f306040518363ffffffff1660e01b815260040161171b9291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b15801561173357600080fd5b505afa158015611747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176b91906136f0565b815260200182604001516001600160a01b031663e985e9c58f306040518363ffffffff1660e01b81526004016117b79291906001600160a01b0392831681529116602082015260400190565b60206040518083038186803b1580156117cf57600080fd5b505afa1580156117e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118079190613709565b151581525085848151811061181e5761181e613525565b602090810291909101015260808101516040516370a0823160e01b81526001600160a01b038e81166004830152909116906370a082319060240160206040518083038186803b15801561187057600080fd5b505afa158015611884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a891906136f0565b8484815181106118ba576118ba613525565b602090810291909101810151015280516060820151604051636eb1769f60e11b81526001600160a01b038f81166004830152918216602482015291169063dd62ed3e9060440160206040518083038186803b15801561191857600080fd5b505afa15801561192c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195091906136f0565b84848151811061196257611962613525565b60200260200101516040018181525050806060015184848151811061198957611989613525565b60209081029190910101516001600160a01b039091169052506119ad905081613551565b9050611487565b509298909750919550909350505050565b6119cd611ed8565b60008060005b600654811015611a36578360ff16600682815481106119f4576119f4613525565b60009182526020918290209181049091015460ff601f9092166101000a9004161415611a265780925060019150611a36565b611a2f81613551565b90506119d3565b5080611a6057604051632cce786160e21b815230600482015260ff84166024820152604401610853565b60068054611a7090600190613636565b81548110611a8057611a80613525565b90600052602060002090602091828204019190069054906101000a900460ff1660068381548110611ab357611ab3613525565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055506006805480611aee57611aee61364d565b60008281526020808220600019909301818104909301805460ff601f86166101000a81021990911690915592909355941684526007905250506040902080546001600160a01b0319169055565b611b43612dc3565b82516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401819052600383015487166060830152600492830154871660808301526101608a0151848b015194516323b872dd60e01b8152929716909414159493926323b872dd92611bda9233923092909101613663565b600060405180830381600087803b158015611bf457600080fd5b505af1158015611c08573d6000803e3d6000fd5b50505050611c288660c001518760a0015188608001518660200151612406565b611c358660c00151612446565b611d0b57611c4f8661016001513330896101400151612463565b8115611d0b5761012086015160028760c001516004811115611c7357611c7361372b565b14611ce45760008760a0015188610120015111611ca4578761012001518860a00151611c9f9190613636565b611ca7565b60005b90508088608001511115611ccc57808860800151611cc59190613636565b9150611ce2565b611cd98860c00151612446565b611ce257600091505b505b8015611d0957611d05876101600151856000015189610140015184306125d1565b9250505b505b6000611d16876127b5565b9050611d3c60405180606001604052806000815260200160008152602001600081525090565b8615611dca57875160405163e4e83e3d60e01b81526001600160a01b039091169063e4e83e3d90611d71908590600401613741565b606060405180830381600087803b158015611d8b57600080fd5b505af1158015611d9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc391906137ba565b9050611e4e565b87516040516324ad18cb60e21b81526001600160a01b03909116906392b4632c90611df9908590600401613741565b606060405180830381600087803b158015611e1357600080fd5b505af1158015611e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4b91906137ba565b90505b611e6b886000015133846080015184602001518560400151612831565b6000611e8086600001518a61016001516128c7565b9150611e8e90508185613816565b9350611ea7866020015187604001518460000151612a73565b611eb2898386612bfa565b9650611ecc876000611ec78c60c00151612446565b612c79565b50505050505092915050565b6000546001600160a01b03163314611f1e5760005460405163035785f360e31b81523060048201523360248201526001600160a01b039091166044820152606401610853565b565b60405163095ea7b360e01b81526001600160a01b0382811660048301526000602483015283169063095ea7b390604401602060405180830381600087803b158015611f6a57600080fd5b505af1158015611f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa29190613709565b611fc8573082826000604051636f27b69360e01b815260040161085394939291906134fb565b60405163095ea7b360e01b81526001600160a01b038281166004830152600019602483015283169063095ea7b390604401602060405180830381600087803b15801561201357600080fd5b505af1158015612027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061204b9190613709565b61207257308282600019604051636f27b69360e01b815260040161085394939291906134fb565b5050565b61207e612dc3565b81516001600160a01b039081166000908152600a60209081526040808320815160a08101835281548616808252600183015487169482019490945260028201548616818401526003820154861660608201526004909101548516608082015261016087015191870151909491909116909114159190156121635782604001516001600160a01b03166323b872dd333088604001516040518463ffffffff1660e01b815260040161213093929190613663565b600060405180830381600087803b15801561214a57600080fd5b505af115801561215e573d6000803e3d6000fd5b505050505b61217f8560c001518660a0015187608001518660200151612406565b60028560c0015160048111156121975761219761372b565b14612248576121b28561016001513330886101400151612463565b8180156121c3575061014085015115155b156122485760006121d78660c00151612446565b6122195760008661010001518760a001516121f29190613857565b90508087608001511115612213578087608001516122109190613636565b91505b50612221565b506101208501515b801561224657612242866101600151856000015188610140015184306125d1565b9250505b505b6000612253866127b5565b9050600086600001516001600160a01b03166237f2bc836040518263ffffffff1660e01b81526004016122869190613741565b606060405180830381600087803b1580156122a057600080fd5b505af11580156122b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d891906137ba565b90506122f7876000015133846080015184602001518560400151612831565b600061230c86600001518961016001516128c7565b915061231a90508185613816565b9350612333866020015187604001518460000151612a73565b61233e888386612bfa565b9650612353876001611ec78b60c00151612446565b505050505050919050565b6000805b6006548110156123e157826001600160a01b0316600760006006848154811061238d5761238d613525565b600091825260208083208183040154601f9092166101000a90910460ff1683528201929092526040019020546001600160a01b031614156123d15750600192915050565b6123da81613551565b9050612362565b50604051635f8b555b60e11b81526001600160a01b0383166004820152602401610853565b600284600481111561241a5761241a61372b565b14801561242657508282115b156124405761244081333061243b8787613636565b612463565b50505050565b6000600282600481111561245c5761245c61372b565b1092915050565b60006001600160a01b0384163014156124ff5760405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905286169063a9059cbb90604401602060405180830381600087803b1580156124c057600080fd5b505af11580156124d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f89190613709565b9050612584565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd9061252f90879087908790600401613663565b602060405180830381600087803b15801561254957600080fd5b505af115801561255d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125819190613709565b90505b806125ca5760405163188bd94160e11b81523060048201526001600160a01b0380871660248301528086166044830152841660648201526084810183905260a401610853565b5050505050565b6000806125dd8761235e565b506125e78661235e565b506001600160a01b038681166000908152600b602052604080822054928a168083528183205491516370a0823160e01b815230600482015260ff9485169490921692916370a082319060240160206040518083038186803b15801561264b57600080fd5b505afa15801561265f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061268391906136f0565b600254604051634fb4d35360e11b81526001600160a01b038d811660048301528c81166024830152604482018c9052606482018b90528981166084830152929350911690639f69a6a69060a401602060405180830381600087803b1580156126ea57600080fd5b505af11580156126fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061272291906136f0565b94508460ff80851690841610156127595761273d838561386f565b61274890600a613976565b6127529083613985565b9150612789565b8360ff168360ff16111561278957612771848461386f565b61277c90600a613976565b6127869087613985565b90505b61279281612d2c565b61279b83612d2c565b6127a591906139a4565b9450505050509550959350505050565b6127bd612ea3565b6040518061010001604052808360200151815260200183604001518152602001836060015181526020018360c0015160048111156127fd576127fd61372b565b81526020018360e0015181526020018360800151815260200183610100015181526020018361012001518152509050919050565b6004546001600160a01b0316156125ca576004805460405163a4ed578160e01b81526001600160a01b0388811693820193909352868316602482015260448101869052606481018590526084810184905291169063a4ed57819060a401600060405180830381600087803b1580156128a857600080fd5b505af11580156128bc573d6000803e3d6000fd5b505050505050505050565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a082319060240160206040518083038186803b15801561290b57600080fd5b505afa15801561291f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061294391906136f0565b91508115612a6c57836001600160a01b0316836001600160a01b031614612a60576001600160a01b0384166000908152600b602052604081205461298b9060ff16600a613976565b6001600160a01b0385166000908152600b60205260409020546129b29060ff16600a613976565b6005546129bf9190613985565b6129c991906139e3565b90506129e18585856129db8186612d9a565b306125d1565b6040516370a0823160e01b81523060048201529093506001600160a01b03861691506370a082319060240160206040518083038186803b158015612a2457600080fd5b505afa158015612a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a5c91906136f0565b9250505b612a6c83303385612463565b9250929050565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a082319060240160206040518083038186803b158015612ab557600080fd5b505afa158015612ac9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aed91906136f0565b90508015612b0157612b0184303384612463565b6001604051637594ee2f60e11b8152600481018490526001600160a01b0385169063eb29dc5e9060240160206040518083038186803b158015612b4357600080fd5b505afa158015612b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b7b9190613a05565b6005811115612b8c57612b8c61372b565b1415612440576040516323b872dd60e01b81526001600160a01b038416906323b872dd90612bc290309033908790600401613663565b600060405180830381600087803b158015612bdc57600080fd5b505af1158015612bf0573d6000803e3d6000fd5b5050505050505050565b612c02612dc3565b60405180610100016040528085600001516001600160a01b0316815260200184600001518152602001336001600160a01b031681526020018560e00151815260200184602001518152602001846040015181526020018381526020018561016001516001600160a01b031681525090509392505050565b82604001516001600160a01b0316836020015184600001516001600160a01b03167ff74837aa66b0393a1c687b44e30275519696e95458ad4a8bf7657e2364a734508585886060015189608001518a60a001518b60c001518c60e00151604051612d1f97969594939291909615158752941515602087015260408601939093526060850191909152608084015260a08301526001600160a01b031660c082015260e00190565b60405180910390a4505050565b60006001600160ff1b03821115612d965760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401610853565b5090565b6000612da86012600a613a26565b612db28385613985565b612dbc91906139e3565b9392505050565b60405180610100016040528060006001600160a01b031681526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681525090565b828054612e2f906136b5565b90600052602060002090601f016020900481019282612e515760008555612e97565b82601f10612e6a57805160ff1916838001178555612e97565b82800160010185558215612e97579182015b82811115612e97578251825591602001919060010190612e7c565b50612d96929150612ef9565b60405180610100016040528060008152602001600081526020016000815260200160006004811115612ed757612ed761372b565b8152602001600081526020016000815260200160008152602001600081525090565b5b80821115612d965760008155600101612efa565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715612f4857612f48612f0e565b60405290565b60405160a0810167ffffffffffffffff81118282101715612f4857612f48612f0e565b6001600160a01b0381168114612f8657600080fd5b50565b8035612f9481612f71565b919050565b803560058110612f9457600080fd5b60006101808284031215612fbb57600080fd5b612fc3612f24565b612fcc83612f89565b81526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261300c60c08401612f99565b60c082015260e0838101359082015261010080840135908201526101208084013590820152610140808401359082015261016061304a818501612f89565b908201529392505050565b60006020828403121561306757600080fd5b8135612dbc81612f71565b6000806000806080858703121561308857600080fd5b843561309381612f71565b935060208501356130a381612f71565b925060408501356130b381612f71565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156130f657815160ff16875295820195908201906001016130d7565b509495945050505050565b60408152600061311460408301856130c3565b828103602084015261312681856130c3565b95945050505050565b60006020828403121561314157600080fd5b5035919050565b60ff81168114612f8657600080fd5b600080600083850360e081121561316d57600080fd5b843561317881612f71565b9350602085013561318881613148565b925060a0603f198201121561319c57600080fd5b506131a5612f4e565b60408501356131b381612f71565b815260608501356131c381612f71565b602082015260808501356131d681612f71565b604082015260a08501356131e981612f71565b606082015260c08501356131fc81612f71565b608082015292959194509192509050565b6000806040838503121561322057600080fd5b823561322b81612f71565b9150602083013561323b81613148565b809150509250929050565b60006020828403121561325857600080fd5b8135612dbc81613148565b60008060006060848603121561327857600080fd5b833561328381612f71565b9250602084013561329381612f71565b929592945050506040919091013590565b60005b838110156132bf5781810151838201526020016132a7565b838111156124405750506000910152565b600081518084526132e88160208601602086016132a4565b601f01601f19169290920160200192915050565b6000815180845260208085019450848260051b860182860160005b858110156133c65783830389528151805160ff168452858101516001600160a01b031686850152604080820151610100919061335d828801826001600160a01b03169052565b505060608281015160ff1690860152608080830151818701839052613384838801826132d0565b60a0858101519089015260c0808601519089015260e094850151801515868a01529490935091506133b29050565b509986019993505090840190600101613317565b5090979650505050505050565b600081518084526020808501945080840160005b838110156130f657815180516001600160a01b03168852838101518489015260409081015190880152606090960195908201906001016133e7565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156134c657898403607f190186528151805160ff9081168652848201516001600160a01b031685870152604080830151909116908601528881015160c08a87018190529061349e828801826132d0565b838b0151888c015260a09384015193909701929092525050948201949082019060010161344b565b5050878203908801526134d9818a6132fc565b94505050505082810360408401526134f181856133d3565b9695505050505050565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156135655761356561353b565b5060010190565b60006020828403121561357e57600080fd5b8151612dbc81613148565b60006020828403121561359b57600080fd5b815167ffffffffffffffff808211156135b357600080fd5b818401915084601f8301126135c757600080fd5b8151818111156135d9576135d9612f0e565b604051601f8201601f19908116603f0116810190838211818310171561360157613601612f0e565b8160405282815287602084870101111561361a57600080fd5b61362b8360208301602088016132a4565b979650505050505050565b6000828210156136485761364861353b565b500390565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000806040838503121561369a57600080fd5b82516136a581612f71565b6020939093015192949293505050565b600181811c908216806136c957607f821691505b602082108114156136ea57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561370257600080fd5b5051919050565b60006020828403121561371b57600080fd5b81518015158114612dbc57600080fd5b634e487b7160e01b600052602160045260246000fd5b60006101008201905082518252602083015160208301526040830151604083015260608301516005811061378557634e487b7160e01b600052602160045260246000fd5b806060840152506080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b6000606082840312156137cc57600080fd5b6040516060810181811067ffffffffffffffff821117156137ef576137ef612f0e565b80604052508251815260208301516020820152604083015160408201528091505092915050565b600080821280156001600160ff1b03849003851316156138385761383861353b565b600160ff1b83900384128116156138515761385161353b565b50500190565b6000821982111561386a5761386a61353b565b500190565b600060ff821660ff8416808210156138895761388961353b565b90039392505050565b600181815b808511156138cd5781600019048211156138b3576138b361353b565b808516156138c057918102915b93841c9390800290613897565b509250929050565b6000826138e4575060016104a2565b816138f1575060006104a2565b816001811461390757600281146139115761392d565b60019150506104a2565b60ff8411156139225761392261353b565b50506001821b6104a2565b5060208310610133831016604e8410600b8410161715613950575081810a6104a2565b61395a8383613892565b806000190482111561396e5761396e61353b565b029392505050565b6000612dbc60ff8416836138d5565b600081600019048311821515161561399f5761399f61353b565b500290565b60008083128015600160ff1b8501841216156139c2576139c261353b565b6001600160ff1b03840183138116156139dd576139dd61353b565b50500390565b600082613a0057634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215613a1757600080fd5b815160068110612dbc57600080fd5b6000612dbc83836138d556fea2646970667358221220d299d9426c274066458f50d58184703af39d85180766e9a503d69a352d13a38464736f6c63430008090033";

type OptionMarketWrapperWithSwapsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketWrapperWithSwapsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarketWrapperWithSwaps__factory extends ContractFactory {
  constructor(...args: OptionMarketWrapperWithSwapsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptionMarketWrapperWithSwaps> {
    return super.deploy(
      overrides || {}
    ) as Promise<OptionMarketWrapperWithSwaps>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OptionMarketWrapperWithSwaps {
    return super.attach(address) as OptionMarketWrapperWithSwaps;
  }
  connect(signer: Signer): OptionMarketWrapperWithSwaps__factory {
    return super.connect(signer) as OptionMarketWrapperWithSwaps__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketWrapperWithSwapsInterface {
    return new utils.Interface(_abi) as OptionMarketWrapperWithSwapsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarketWrapperWithSwaps {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptionMarketWrapperWithSwaps;
  }
}
