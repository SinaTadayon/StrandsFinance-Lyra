/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OptionMarket, OptionMarketInterface } from "../OptionMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
    ],
    name: "AlreadyInitialised",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BaseTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardAlreadySettled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "boardExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
    ],
    name: "BoardExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardIsFrozen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardNotExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "BoardNotFrozen",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "enum OptionMarket.NonZeroValues",
        name: "valueType",
        type: "uint8",
      },
    ],
    name: "ExpectedNonZeroValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "InvalidBoardId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxBoardExpiry",
        type: "uint256",
      },
    ],
    name: "InvalidExpiryTimestamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "optionMarketParams",
        type: "tuple",
      },
    ],
    name: "InvalidOptionMarketParams",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "InvalidStrikeId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "securityModule",
        type: "address",
      },
    ],
    name: "OnlySecurityModule",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "QuoteTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikesLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skewsLength",
        type: "uint256",
      },
    ],
    name: "StrikeSkewLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "TotalCostOutsideOfSpecifiedBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "iterations",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
    ],
    name: "TradeIterationsHasRemainder",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
    ],
    name: "BoardBaseIvSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "BoardCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "BoardFrozen",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spotPriceAtExpiry",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalUserLongProfitQuote",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBoardLongCallCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalBoardLongPutCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortCallProfitBase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortCallProfitQuote",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAMMShortPutProfitQuote",
        type: "uint256",
      },
    ],
    name: "BoardSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "optionMarketParams",
        type: "tuple",
      },
    ],
    name: "OptionMarketParamsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "securityModule",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
    ],
    name: "SMClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "StrikeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "StrikeSkewSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "enum OptionMarket.TradeDirection",
            name: "tradeDirection",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isForceClose",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "spotPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reservedFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.TradeEventData",
        name: "trade",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "optionPriceFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "spotPriceFee",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "preTradeAmmNetStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "postTradeAmmNetStdVega",
                type: "int256",
              },
              {
                internalType: "uint256",
                name: "vegaUtil",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "volTraded",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vegaUtilFee",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketPricer.VegaUtilFeeComponents",
            name: "vegaUtilFee",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "varianceFeeCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vega",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "vegaCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skewCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ivVariance",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ivVarianceCoefficient",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "varianceFee",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketPricer.VarianceFeeComponents",
            name: "varianceFee",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volTraded",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBaseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newSkew",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketPricer.TradeResult[]",
        name: "tradeResults",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "rewardBeneficiary",
            type: "address",
          },
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "returnCollateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpPremiums",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidatorFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "smFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "insolventAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarket.LiquidationEventData",
        name: "liquidation",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountCollateral",
        type: "uint256",
      },
    ],
    name: "addCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "addStrikeToBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "boardToPriceAtExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseIV",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "strikePrices",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "skews",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "createOptionBoard",
    outputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "forceClosePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "forceSettleBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardAndStrikeDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardStrikes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "strikeIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLiveBoards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_liveBoards",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumLiveBoards",
    outputs: [
      {
        internalType: "uint256",
        name: "numLiveBoards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getOptionBoard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOptionMarketParams",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getSettlementParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceAtExpiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "strikeToBaseReturned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrike",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrikeAndBoard",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikePrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "skew",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallBase",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortCallQuote",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortPut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Strike",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iv",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "frozen",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "strikeIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct OptionMarket.OptionBoard",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getStrikeAndExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "strikePrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
      {
        internalType: "contract LiquidityPool",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "contract OptionMarketPricer",
        name: "_optionPricer",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "_greekCache",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "_shortCollateral",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "_optionToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_baseAsset",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rewardBeneficiary",
        type: "address",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iterations",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "setCollateralTo",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minTotalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalCost",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.TradeInputParameters",
        name: "params",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.Result",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseIv",
        type: "uint256",
      },
    ],
    name: "setBoardBaseIv",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "frozen",
        type: "bool",
      },
    ],
    name: "setBoardFrozen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "maxBoardExpiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "securityModule",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "feePortionReserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "staticBaseSettlementFee",
            type: "uint256",
          },
        ],
        internalType: "struct OptionMarket.OptionMarketParameters",
        name: "_optionMarketParams",
        type: "tuple",
      },
    ],
    name: "setOptionMarketParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "skew",
        type: "uint256",
      },
    ],
    name: "setStrikeSkew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "settleExpiredBoard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "smClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805460ff60a01b19168155600b819055600c5534801561002557600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160016002556151e1806100886000396000f3fe608060405234801561001057600080fd5b50600436106101d95760003560e01c80637c1de42511610104578063a9c9d125116100a2578063e4e83e3d11610071578063e4e83e3d146104e1578063e7a5897b146104f4578063ebc2086614610507578063eed6601a1461050f57600080fd5b8063a9c9d1251461043e578063c4c4a0d014610451578063cf6bcba014610472578063d1e9e811146104c157600080fd5b806390e32fba116100de57806390e32fba146103e557806392b4632c146103f8578063a6063c051461040b578063a8f35adf1461042b57600080fd5b80637c1de425146103b75780637e7088eb146103ca5780638da5cb5b146103d257600080fd5b80631fdb6cbd1161017c57806353a47bb71161014b57806353a47bb7146103515780635d9d310c1461037c5780635f036de11461039c57806379ba5097146103af57600080fd5b80631fdb6cbd146102a95780632dd0776b146103085780633105dd9c14610329578063525240c01461033e57600080fd5b80631627540c116101b85780631627540c1461024057806316a54f501461025357806318cc7e86146102735780631f18a3421461028657600080fd5b806237f2bc146101de57806305c8954a146102185780631227e5001461022d575b600080fd5b6101f16101ec366004614024565b610517565b60408051825181526020808401519082015291810151908201526060015b60405180910390f35b61022b6102263660046140bf565b610596565b005b61022b61023b366004614100565b610668565b61022b61024e36600461416b565b610729565b610266610261366004614188565b61077f565b60405161020f9190614218565b61022b61028136600461422b565b610851565b610299610294366004614188565b61098f565b60405161020f949392919061431d565b6102ed6102b7366004614188565b60008181526013602090815260408083206001810154600890910154845260148352818420549484526015909252909120549092565b6040805193845260208401929092529082015260600161020f565b61031b610316366004614410565b610c45565b60405190815260200161020f565b610331610ef2565b60405161020f919061449b565b61022b61034c3660046144cf565b610f5c565b600154610364906001600160a01b031681565b6040516001600160a01b03909116815260200161020f565b61038f61038a366004614188565b611034565b60405161020f9190614578565b61022b6103aa36600461458b565b6110fa565b61022b6114db565b61022b6103c5366004614188565b611593565b61038f6116c1565b600054610364906001600160a01b031681565b61022b6103f3366004614188565b611766565b6101f1610406366004614024565b61186e565b61041e610419366004614188565b6118c3565b60405161020f91906145bb565b61022b61043936600461422b565b611944565b61022b61044c3660046145ca565b611a72565b61046461045f366004614188565b611b0c565b60405161020f9291906145ef565b6104ac610480366004614188565b600090815260136020908152604080832060018082015460089092015485526012909352922001549091565b6040805192835260208301919091520161020f565b61031b6104cf366004614188565b60146020526000908152604090205481565b6101f16104ef366004614024565b611c61565b61022b61050236600461422b565b611cb6565b61022b611e84565b600d5461031b565b61053b60405180606001604052806000815260200160008152602001600081525090565b6002805414156105665760405162461bcd60e51b815260040161055d90614611565b60405180910390fd5b60028055610573826121d6565b905061058c81602001518360c001518460e001516124af565b6001600255919050565b61059e6124e7565b60008381526012602052604090208054841415806105bb57508054155b156105dd573084604051631234dccd60e01b815260040161055d929190614648565b60006105ea82858561252f565b60065481516040516393c0a34f60e01b815260048101899052602481019190915260448101879052606481018690529192506001600160a01b0316906393c0a34f90608401600060405180830381600087803b15801561064957600080fd5b505af115801561065d573d6000803e3d6000fd5b505050505050505050565b6106706124e7565b61067c6012600a61475b565b816040015111156106a457308160405163641a468760e11b815260040161055d929190614767565b8051600e819055602080830151600f80546001600160a01b0319166001600160a01b03909216918217905560408085015160108190556060808701516011819055835196875294860193909352908401528201527f19854f162a92eaba887a94b15691fb68f39b5ffc2a48f1eccd9ebac965432d80906080015b60405180910390a150565b6107316124e7565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229060200161071e565b6107b36040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b600082815260126020908152604091829020825160a08101845281548152600182015481840152600282015481850152600382015460ff1615156060820152600482018054855181860281018601909652808652919492936080860193929083018282801561084157602002820191906000526020600020905b81548152602001906001019080831161082d575b5050505050815250509050919050565b6108596124e7565b600082815260126020526040902080548314158061087657508054155b15610898573083604051631234dccd60e01b815260040161055d929190614648565b816108bb57306000604051639c078bed60e01b815260040161055d9291906147d1565b600381015460ff166108e457308360405163bac362fb60e01b815260040161055d929190614648565b6002810182905560065460405163551c855560e01b815260048101859052602481018490526001600160a01b039091169063551c855590604401600060405180830381600087803b15801561093857600080fd5b505af115801561094c573d6000803e3d6000fd5b50505050827f27dc10bc12529bac536af6dbf5d4b270673ac7aeb848c334e4038ef55ecce8818360405161098291815260200190565b60405180910390a2505050565b6109c36040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b6000828152601260209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff16151560608281019190915260048301805485518188028101880190965280865291968796909586959360808601939192830182828015610a5957602002820191906000526020600020905b815481526020019060010190808311610a45575b505050919092525050506080810151519091506000816001600160401b03811115610a8657610a86613fb3565b604051908082528060200260200182016040528015610abf57816020015b610aac613de9565b815260200190600190039081610aa45790505b5090506000826001600160401b03811115610adc57610adc613fb3565b604051908082528060200260200182016040528015610b05578160200160208202803683370190505b50905060005b83811015610c24576013600086608001518381518110610b2d57610b2d6147f7565b60200260200101518152602001908152602001600020604051806101200160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481525050838281518110610bbb57610bbb6147f7565b60200260200101819052506015600086608001518381518110610be057610be06147f7565b6020026020010151815260200190815260200160002054828281518110610c0957610c096147f7565b6020908102919091010152610c1d8161480d565b9050610b0b565b50600098895260146020526040909820549298909796509194509092505050565b6000610c4f6124e7565b8351835181141580610c5f575080155b15610c90578351604051634f1c9c8160e01b815230600482015260248101839052604481019190915260640161055d565b4287111580610caa5750600e54610ca79042614828565b87115b15610cd157600e54604051630c99b72160e31b815261055d91309142918b91600401614840565b85610cf457306000604051639c078bed60e01b815260040161055d9291906147d1565b600c8054906000610d048361480d565b90915550600081815260126020908152604080832084815560018082018d9055600282018c905560038201805460ff19168a1515908117909155600d805492830181559095527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50185905581518c81529283018b9052908201929092529193509083907fcb94f87a9b05d8957b230ed8ef82ef8ef24fb02e374b4b1300c402ccb3b8868e9060600160405180910390a26000826001600160401b03811115610dce57610dce613fb3565b604051908082528060200260200182016040528015610e0757816020015b610df4613de9565b815260200190600190039081610dec5790505b50905060005b83811015610e8057610e5283898381518110610e2b57610e2b6147f7565b6020026020010151898481518110610e4557610e456147f7565b602002602001015161252f565b828281518110610e6457610e646147f7565b602002602001018190525080610e799061480d565b9050610e0d565b5060065460405163043f03af60e41b81526001600160a01b03909116906343f03af090610eb39085908590600401614866565b600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b505050505050505b95945050505050565b610f2660405180608001604052806000815260200160006001600160a01b0316815260200160008152602001600081525090565b5060408051608081018252600e548152600f546001600160a01b0316602082015260105491810191909152601154606082015290565b610f646124e7565b600154600160a01b900460ff1615610f915760405163161b906f60e01b815230600482015260240161055d565b60018054600160a01b60ff60a01b19909116179055600380546001600160a01b03199081166001600160a01b039a8b1617909155600480548216988a1698909817909755600580548816968916969096179095556006805487169488169490941790935560078054861692871692909217909155600880548516918616919091179055600980548416918516919091179055600a80549092169216919091179055565b600081815260126020526040902060040154606090806001600160401b0381111561106157611061613fb3565b60405190808252806020026020018201604052801561108a578160200160208202803683370190505b50915060005b818110156110f35760008481526012602052604090206004018054829081106110bb576110bb6147f7565b90600052602060002001548382815181106110d8576110d86147f7565b60209081029190910101526110ec8161480d565b9050611090565b5050919050565b60028054141561111c5760405162461bcd60e51b815260040161055d90614611565b60028055600854604051637916c6cd60e11b8152600481018490526000916001600160a01b03169063f22d8d9a9060240160e06040518083038186803b15801561116557600080fd5b505afa158015611179573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119d919061490e565b905060008060006111c08460200151856040015186606001516002600180612745565b9250925092506000806111db84848760018a606001516129d5565b6008546040516251815960e51b8152939650909450600093506001600160a01b031691630a302b209150611217908c908a908890600401614a89565b60c060405180830381600087803b15801561123157600080fd5b505af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190614b26565b60a0810151909150156112d6576004805460a0830151604051632698923f60e21b8152928301526001600160a01b031690639a6248fc90602401600060405180830381600087803b1580156112bd57600080fd5b505af11580156112d1573d6000803e3d6000fd5b505050505b60075460c08801516040808a0151905163c453603960e01b81526001600160a01b039093169263c4536039926113159290918d91908790600401614b42565b600060405180830381600087803b15801561132f57600080fd5b505af1158015611343573d6000803e3d6000fd5b505060048054604080516307f2975760e31b815290516001600160a01b039092169450633f94bab89350808301926000929182900301818387803b15801561138a57600080fd5b505af115801561139e573d6000803e3d6000fd5b505050508887602001518860c001516001600160a01b03167fb587f4a964cfbcea150e428bfd686fc9305b9c66a45f0daa0ff6f3e99e612d4d6040518061014001604052808b60a0015181526020018b60c0015181526020018c60400151600481111561140d5761140d6147ab565b8152602001600281526020018c606001518152602001600081526020016001151581526020018b61010001516000015181526020016000815260200188815250866040518061010001604052808f6001600160a01b03168152602001336001600160a01b0316815260200188600001518152602001886020015181526020018860400151815260200188606001518152602001886080015181526020018860a00151815250426040516114c39493929190614c72565b60405180910390a45050600160025550505050505050565b6001546001600160a01b03163314611521576001546040516312d9f3db60e31b81523060048201523360248201526001600160a01b03909116604482015260640161055d565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6002805414156115b55760405162461bcd60e51b815260040161055d90614611565b60028080556000828152601260209081526040808320815160a081018352815481526001820154818501529481015485830152600381015460ff161515606086015260048101805483518186028101860190945280845294959491936080860193929083018282801561164757602002820191906000526020600020905b815481526020019060010190808311611633575b505050505081525050905081816000015114158061166457508051155b15611686573082604051631234dccd60e01b815260040161055d929190614648565b80602001514210156116af5730826040516320a2810160e21b815260040161055d929190614648565b6116b881612ca6565b50506001600255565b600d54606090806001600160401b038111156116df576116df613fb3565b604051908082528060200260200182016040528015611708578160200160208202803683370190505b50915060005b8181101561176157600d8181548110611729576117296147f7565b9060005260206000200154838281518110611746576117466147f7565b602090810291909101015261175a8161480d565b905061170e565b505090565b61176e6124e7565b6000818152601260209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff16151560608201526004820180548451818702810187019095528085529194929360808601939092908301828280156117fc57602002820191906000526020600020905b8154815260200190600101908083116117e8575b505050505081525050905081816000015114158061181957508051155b1561183b573082604051631234dccd60e01b815260040161055d929190614648565b806060015161186157308260405163bac362fb60e01b815260040161055d929190614648565b61186a81612ca6565b5050565b61189260405180606001604052806000815260200160008152602001600081525090565b6002805414156118b45760405162461bcd60e51b815260040161055d90614611565b60028055610573826000612dfb565b6118cb613de9565b50600090815260136020908152604091829020825161012081018452815481526001820154928101929092526002810154928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260089091015461010082015290565b6002805414156119665760405162461bcd60e51b815260040161055d90614611565b600280556003546040516341627ea760e01b81523060048201526001600160a01b03909116906341627ea79060240160006040518083038186803b1580156119ad57600080fd5b505afa1580156119c1573d6000803e3d6000fd5b5050505060006119d0826130d2565b60085460405163a8f35adf60e01b815260048101869052602481018590529192506000916001600160a01b039091169063a8f35adf90604401602060405180830381600087803b158015611a2357600080fd5b505af1158015611a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5b9190614d82565b9050611a678183613140565b505060016002555050565b611a7a6124e7565b6000828152601260205260409020805483141580611a9757508054155b15611ab9573083604051631234dccd60e01b815260040161055d929190614648565b600083815260126020908152604091829020600301805460ff1916851515908117909155915191825284917fab7e756517bb425436c10403644a884802e0b2d5105f9f5386823b7c42ca5d5f9101610982565b611b14613de9565b611b486040518060a00160405280600081526020016000815260200160008152602001600015158152602001606081525090565b6000838152601360209081526040808320815161012081018352815481526001808301548286015260028084015483860152600380850154606080860191909152600480870154608080880191909152600588015460a080890191909152600689015460c0890152600789015460e089015260089098015461010088018190528b5260128a5299889020885197880189528054885294850154878a015292840154868801529083015460ff161515908501528101805485518188028101880190965280865292968796929586949186019390929190830182828015611c4c57602002820191906000526020600020905b815481526020019060010190808311611c38575b50505050508152505090509250925050915091565b611c8560405180606001604052806000815260200160008152602001600081525090565b600280541415611ca75760405162461bcd60e51b815260040161055d90614611565b60028055610573826001612dfb565b611cbe6124e7565b600082815260136020526040902080548314611cf1573083604051632cb2225f60e21b815260040161055d929190614648565b81611d1457306001604051639c078bed60e01b815260040161055d9291906147d1565b60088101546000908152601260209081526040808320815160a08101835281548152600182015481850152600282015481840152600382015460ff1615156060820152600482018054845181870281018701909552808552919492936080860193909290830182828015611da757602002820191906000526020600020905b815481526020019060010190808311611d93575b50505050508152505090508060600151611dd857805160405163bac362fb60e01b815261055d913091600401614648565b6002820183905560065460405163e7a5897b60e01b815260048101869052602481018590526001600160a01b039091169063e7a5897b90604401600060405180830381600087803b158015611e2c57600080fd5b505af1158015611e40573d6000803e3d6000fd5b50505050837fe494e8ea1592ce5eff63e093b9aa6d5208883099ea0a8734e64a518226fd443e84604051611e7691815260200190565b60405180910390a250505050565b6003546040516341627ea760e01b81523060048201526001600160a01b03909116906341627ea79060240160006040518083038186803b158015611ec757600080fd5b505afa158015611edb573d6000803e3d6000fd5b5050600f546001600160a01b031633149150611f27905057600f54604051638748a2c360e01b81523060048201523360248201526001600160a01b03909116604482015260640161055d565b6009546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611f6b57600080fd5b505afa158015611f7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa39190614d9f565b9050600081118015612036575060095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90611fe29033908590600401614648565b602060405180830381600087803b158015611ffc57600080fd5b505af1158015612010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120349190614db8565b155b1561205c57303033836040516307bd6c6760e11b815260040161055d9493929190614dd5565b600a546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156120a057600080fd5b505afa1580156120b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d89190614d9f565b905060008111801561216b5750600a5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906121179033908590600401614648565b602060405180830381600087803b15801561213157600080fd5b505af1158015612145573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121699190614db8565b155b156121915730303383604051639794f10b60e01b815260040161055d9493929190614dd5565b60408051338152602081018490529081018290527f37b3d08ef7ea83f3a646520b4d8d248a92ffba0f65943f3bc3a8d58dd149e94b9060600160405180910390a15050565b6121fa60405180606001604052806000815260200160008152602001600081525090565b600080600061221f856000015186606001518760800151600089604001516000612745565b925092509250606061223c83838689604001518a608001516129d5565b6040808a01929092526020808a0193845260808901949094526008548a51948b0151935160a08c01519351634dbb0abd60e11b81529296506000956001600160a01b0390921694639b76157a946122a0948c94933393929091600190600401614dff565b6040805180830381600087803b1580156122b957600080fd5b505af11580156122cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f19190614e4f565b908752601054604088015191925060009161230b916132d4565b905061231c868860200151836132ff565b61232a866060015183613140565b60048054604080516307f2975760e31b815290516001600160a01b0390921692633f94bab892828201926000929082900301818387803b15801561236d57600080fd5b505af1158015612381573d6000803e3d6000fd5b5050505086600001518860000151336001600160a01b03167fb587f4a964cfbcea150e428bfd686fc9305b9c66a45f0daa0ff6f3e99e612d4d6040518061014001604052808b60a0015181526020018b60c0015181526020018d6060015160048111156123f0576123f06147ab565b8152602001600081526020018b6080015181526020018d60a0015181526020016000151581526020018b61010001516000015181526020018681526020018c602001518152508760405180610100016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081526020016000815260200160008152504260405161249c9493929190614c72565b60405180910390a4505050505050919050565b818310806124bc57508083115b156124e257308383836040516356e250f360e01b815260040161055d9493929190614840565b505050565b6000546001600160a01b0316331461252d5760005460405163035785f360e31b81523060048201523360248201526001600160a01b03909116604482015260640161055d565b565b612537613de9565b8261255a57306002604051639c078bed60e01b815260040161055d9291906147d1565b8161257d57306001604051639c078bed60e01b815260040161055d9291906147d1565b600b80546000918261258e8361480d565b9190505590506040518061012001604052808281526020018581526020018481526020016000815260200160008152602001600081526020016000815260200160008152602001866000015481525060136000838152602001908152602001600020600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e082015181600701556101008201518160080155905050846004018190806001815401808255809150506001900390600052602060002001600090919091909150558085600001547f8dba15d5569538a96f1404ee74da67080a64e02c5cfbadf4b8908f90320178a186866040516126b9929190918252602082015260400190565b60405180910390a3601360008281526020019081526020016000206040518061012001604052908160008201548152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815250509150505b9392505050565b61274d613e35565b6000808861277357306004604051639c078bed60e01b815260040161055d9291906147d1565b8461279657306003604051639c078bed60e01b815260040161055d9291906147d1565b6000898152601360205260409020805490925089146127cc573089604051632cb2225f60e21b815260040161055d929190614648565b5060088101546000908152601260209081526040808320805484526014909252909120541561281257805460405163f2ebc7bf60e01b815261055d913091600401614648565b600080876002811115612827576128276147ab565b1461283b57612835896134d5565b15612844565b612844896134d5565b6003546040516333ef9fd160e21b81523060048201529192506000916001600160a01b039091169063cfbe7f449060240160a06040518083038186803b15801561288d57600080fd5b505afa1580156128a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128c59190614e73565b9050604051806101200160405280831515815260200187151581526020018960028111156128f5576128f56147ab565b81526020018b600481111561290c5761290c6147ab565b815260200161291b898c614ee2565b81526001808601546020830152860154604080830191909152600480548551925163951583c360e01b81526060909401936001600160a01b039091169263951583c39261296c920190815260200190565b60c06040518083038186803b15801561298457600080fd5b505afa158015612998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129bc9190614b26565b8152602001828152509450505096509650969350505050565b60008060006060866080015160001415612a69578415612a2657604051630f119a1560e01b81523060048201526024810187905260448101869052600060648201819052608482015260a40161055d565b604080516000808252602082019092528190819081612a5b565b612a48613edc565b815260200190600190039081612a405790505b509350935093509350612c9a565b600388015460ff1615612a93578754604051633a9027b960e21b815261055d913091600401614648565b87600101544210612ac457875460018901546040516307f31b4360e31b815261055d92309290914290600401614840565b856001600160401b03811115612adc57612adc613fb3565b604051908082528060200260200182016040528015612b1557816020015b612b02613edc565b815260200190600190039081612afa5790505b50905060005b86811015612c9857612b2e600188614f04565b811415612b4557612b3f8587614f04565b60808901525b60808801516060890151612b7391908c60008c604001516002811115612b6d57612b6d6147ab565b1461350c565b6000600560009054906101000a90046001600160a01b03166001600160a01b0316635c2ddc328c8b8d600201548e600101546040518563ffffffff1660e01b8152600401612bc49493929190614f1b565b6102e060405180830381600087803b158015612bdf57600080fd5b505af1158015612bf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c179190615026565b6101208101516002808d0191909155610140820151908d015560e0810151909150612c429086614828565b94508060c0015184612c549190614828565b9350886080015186612c669190614828565b955080838381518110612c7b57612c7b6147f7565b60200260200101819052505080612c919061480d565b9050612b1b565b505b95509550955095915050565b600d54600090815b81811015612d64578351600d805483908110612ccc57612ccc6147f7565b90600052602060002001541415612d5457600d612cea600184614f04565b81548110612cfa57612cfa6147f7565b9060005260206000200154600d8281548110612d1857612d186147f7565b600091825260209091200155600d805480612d3557612d356150cb565b6001900381819060005260206000200160009055905560019250612d64565b612d5d8161480d565b9050612cae565b5081612d8757825160405163f2ebc7bf60e01b815261055d913091600401614648565b612d908361367c565b6006548351604051636dd2841560e11b81526001600160a01b039092169163dba5082a91612dc49160040190815260200190565b600060405180830381600087803b158015612dde57600080fd5b505af1158015612df2573d6000803e3d6000fd5b50505050505050565b612e1f60405180606001604052806000815260200160008152602001600081525090565b6000806000612e4386600001518760600151886080015160018a604001518a612745565b9250925092506060612e608383868a604001518b608001516129d5565b6040808a01929092526020808a0193845260808901949094526008548b51948c0151935160a08d01519351634dbb0abd60e11b81529296506000956001600160a01b0390921694639b76157a94612ec3948c949333939290918a90600401614dff565b6040805180830381600087803b158015612edc57600080fd5b505af1158015612ef0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f149190614e4f565b9087526010546040880151919250600091612f2e916132d4565b9050612f3e866060015183613140565b612f4d86886020015183613afc565b60048054604080516307f2975760e31b815290516001600160a01b0390921692633f94bab892828201926000929082900301818387803b158015612f9057600080fd5b505af1158015612fa4573d6000803e3d6000fd5b5050505086600001518960000151336001600160a01b03167fb587f4a964cfbcea150e428bfd686fc9305b9c66a45f0daa0ff6f3e99e612d4d6040518061014001604052808b60a0015181526020018b60c0015181526020018e606001516004811115613013576130136147ab565b8152602001600181526020018e6080015181526020018e60a0015181526020018d151581526020018b61010001516000015181526020018681526020018c602001518152508760405180610100016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815250426040516130be9493929190614c72565b60405180910390a450505050505092915050565b60006001600160ff1b0382111561313c5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b606482015260840161055d565b5090565b80613149575050565b600282600481111561315d5761315d6147ab565b141561329857600081131561322a57600a546007546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018490529116906323b872dd90606401602060405180830381600087803b1580156131c257600080fd5b505af11580156131d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131fa9190614db8565b61186a57600754604051639794f10b60e01b815261055d91309133916001600160a01b0316908590600401614dd5565b6007546001600160a01b0316638b89a24233613245846150e1565b6040518363ffffffff1660e01b8152600401613262929190614648565b600060405180830381600087803b15801561327c57600080fd5b505af1158015613290573d6000803e3d6000fd5b505050505050565b60008113156132b95760075461186a9033906001600160a01b031683613ccb565b6007546001600160a01b0316635318b30733613245846150e1565b60006132e26012600a61475b565b6132ec83856150fe565b6132f69190614ee2565b90505b92915050565b608083015161330d57505050565b600083606001516004811115613325576133256147ab565b14156133ca5760048054608085015161010086015160e0870151516040516328b483c560e11b81526001600160a01b0390941694635169078a9461336c949392910161511d565b600060405180830381600087803b15801561338657600080fd5b505af115801561339a573d6000803e3d6000fd5b50506004546133bf92503391506001600160a01b03166133ba8486614f04565b613ccb565b6124e2333083613ccb565b6001836060015160048111156133e2576133e26147ab565b14156134405760045460c084015160808501516001600160a01b039092169163f238ff5c9161341191906132d4565b8560e00151600001516040518363ffffffff1660e01b815260040161336c929190918252602082015260400190565b600283606001516004811115613458576134586147ab565b1415613497576004805460e08501515160405163162dcbd560e11b81526001600160a01b0390921692632c5b97aa92612dc49233928892889101614840565b6004805460075460e08601515160405163162dcbd560e11b81526001600160a01b0393841694632c5b97aa94612dc494169288929091889101614840565b6000808260048111156134ea576134ea6147ab565b14806132f957506001826004811115613505576135056147ab565b1492915050565b60008161352a5761351c856130d2565b613525906150e1565b613533565b613533856130d2565b90506000846004811115613549576135496147ab565b141561357b5761355c83600301546130d2565b613566908261516a565b905061357181613d7e565b6003840155613675565b600184600481111561358f5761358f6147ab565b14156135c1576135a283600601546130d2565b6135ac908261516a565b90506135b781613d7e565b6006840155613675565b60028460048111156135d5576135d56147ab565b1415613607576135e883600401546130d2565b6135f2908261516a565b90506135fd81613d7e565b6004840155613675565b600384600481111561361b5761361b6147ab565b141561364d5761362e83600501546130d2565b613638908261516a565b905061364381613d7e565b6005840155613675565b61365a83600701546130d2565b613664908261516a565b905061366f81613d7e565b60078401555b5050505050565b600354604051630fb75cc960e31b81523060048201526000916001600160a01b031690637dbae6489060240160206040518083038186803b1580156136c057600080fd5b505afa1580156136d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136f89190614d9f565b825160009081526014602052604081208290556080840151519192509081908190819081908190815b81811015613967576000601360008c608001518481518110613745576137456147f7565b6020026020010151815260200190815260200160002060405180610120016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201548152505090508060600151886137d39190614828565b97506137f081602001518260c001516132d490919063ffffffff16565b6137fa9088614828565b965080602001518a11156138fb5761382681602001518b61381b9190614f04565b6060830151906132d4565b613830908a614828565b60115490995060009061386d906138496012600a61475b565b6138539190614f04565b6138678d85602001518f6138679190614f04565b90613dd0565b905061387b6012600a61475b565b81116138875780613893565b6138936012600a61475b565b90506138ac8260800151826132d490919063ffffffff16565b6138b69088614828565b96506138d68260a0015183602001518d6138d09190614f04565b906132d4565b6138e09087614828565b82516000908152601560205260409020919091559450613956565b80602001518a1015613956576139258a826020015161391a9190614f04565b60c0830151906132d4565b61392f908a614828565b98506139498160e001518b83602001516138d09190614f04565b6139539085614828565b93505b506139608161480d565b9050613721565b5060075460009081906001600160a01b0316635d6e344d876139898888614828565b6040516001600160e01b031960e085901b168152600481019290925260248201526044016040805180830381600087803b1580156139c657600080fd5b505af11580156139da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139fe9190614e4f565b60045491935091506001600160a01b03166366c15ceb613a1e848d6132d4565b613a289084614828565b6040516001600160e01b031960e084901b1681526004810191909152602481018a9052604481018c9052606481018b9052608401600060405180830381600087803b158015613a7657600080fd5b505af1158015613a8a573d6000803e3d6000fd5b50508c51604080518e8152602081018e90529081018c9052606081018b9052608081018a905260a0810189905260c081018890529092507fdb2372d9a91045fa42195170e972ab572d182278c275fbb277fed93ac5ddda82915060e00160405180910390a25050505050505050505050565b6080830151613b0a57505050565b600083606001516004811115613b2257613b226147ab565b1415613b6e576004805460808501516040516379cfc4f760e01b81529283015233602483015260448201849052606482018390526001600160a01b0316906379cfc4f790608401612dc4565b600183606001516004811115613b8657613b866147ab565b1415613bed5760045460c084015160808501516001600160a01b03909216916332067e0d91613bb591906132d4565b6040516001600160e01b031960e084901b16815260048101919091523360248201526044810185905260648101849052608401612dc4565b600283606001516004811115613c0557613c056147ab565b1415613c27576004546133bf9033906001600160a01b03166133ba8486614f04565b6007546004546001600160a01b0391821691635318b3079116613c4a8486614f04565b6040518363ffffffff1660e01b8152600401613c67929190614648565b600060405180830381600087803b158015613c8157600080fd5b505af1158015613c95573d6000803e3d6000fd5b5050600754604051635318b30760e01b81526001600160a01b039091169250635318b3079150612dc49030908590600401614648565b6009546040516323b872dd60e01b81526001600160a01b038581166004830152848116602483015260448201849052909116906323b872dd90606401602060405180830381600087803b158015613d2157600080fd5b505af1158015613d35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613d599190614db8565b6124e257308383836040516307bd6c6760e11b815260040161055d9493929190614dd5565b60008082121561313c5760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161055d565b600081613ddf6012600a61475b565b6132ec90856150fe565b6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60408051610120810182526000808252602082018190529091820190815260200160008152602001600081526020016000815260200160008152602001613eab6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b60405180610160016040528060008152602001600081526020016000815260200160008152602001613f3d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001613f8a60405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200160008152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715613feb57613feb613fb3565b60405290565b60405161016081016001600160401b0381118282101715613feb57613feb613fb3565b6005811061402157600080fd5b50565b600061010080838503121561403857600080fd5b604051908101906001600160401b038211818310171561405a5761405a613fb3565b816040528335815260208401356020820152604084013560408201526060840135915061408682614014565b8160608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b6000806000606084860312156140d457600080fd5b505081359360208301359350604090920135919050565b6001600160a01b038116811461402157600080fd5b60006080828403121561411257600080fd5b604051608081018181106001600160401b038211171561413457614134613fb3565b604052823581526020830135614149816140eb565b6020820152604083810135908201526060928301359281019290925250919050565b60006020828403121561417d57600080fd5b813561273e816140eb565b60006020828403121561419a57600080fd5b5035919050565b600060a08301825184526020808401518186015260408401516040860152606084015115156060860152608084015160a0608087015282815180855260c0880191508383019450600092505b8083101561420d57845182529383019360019290920191908301906141ed565b509695505050505050565b6020815260006132f660208301846141a1565b6000806040838503121561423e57600080fd5b50508035926020909101359150565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b600081518084526020808501945080840160005b838110156142e2576142ce87835161424d565b6101209690960195908201906001016142bb565b509495945050505050565b600081518084526020808501945080840160005b838110156142e257815187529582019590820190600101614301565b60808152600061433060808301876141a1565b828103602084015261434281876142a7565b9050828103604084015261435681866142ed565b91505082606083015295945050505050565b600082601f83011261437957600080fd5b813560206001600160401b038083111561439557614395613fb3565b8260051b604051601f19603f830116810181811084821117156143ba576143ba613fb3565b6040529384528581018301938381019250878511156143d857600080fd5b83870191505b848210156143f7578135835291830191908301906143de565b979650505050505050565b801515811461402157600080fd5b600080600080600060a0868803121561442857600080fd5b853594506020860135935060408601356001600160401b038082111561444d57600080fd5b61445989838a01614368565b9450606088013591508082111561446f57600080fd5b5061447c88828901614368565b925050608086013561448d81614402565b809150509295509295909350565b815181526020808301516001600160a01b0316908201526040808301519082015260608083015190820152608081016132f9565b600080600080600080600080610100898b0312156144ec57600080fd5b88356144f7816140eb565b97506020890135614507816140eb565b96506040890135614517816140eb565b95506060890135614527816140eb565b94506080890135614537816140eb565b935060a0890135614547816140eb565b925060c0890135614557816140eb565b915060e0890135614567816140eb565b809150509295985092959890939650565b6020815260006132f660208301846142ed565b6000806040838503121561459e57600080fd5b8235915060208301356145b0816140eb565b809150509250929050565b61012081016132f9828461424d565b600080604083850312156145dd57600080fd5b8235915060208301356145b081614402565b60006101406145fe838661424d565b80610120840152610ee9818401856141a1565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6001600160a01b03929092168252602082015260400190565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156146b257816000190482111561469857614698614661565b808516156146a557918102915b93841c939080029061467c565b509250929050565b6000826146c9575060016132f9565b816146d6575060006132f9565b81600181146146ec57600281146146f657614712565b60019150506132f9565b60ff84111561470757614707614661565b50506001821b6132f9565b5060208310610133831016604e8410600b8410161715614735575081810a6132f9565b61473f8383614677565b806000190482111561475357614753614661565b029392505050565b60006132f683836146ba565b6001600160a01b038316815260a0810161273e6020830184805182526020808201516001600160a01b03169083015260408082015190830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b60058110614021576140216147ab565b6001600160a01b0383168152604081016147ea836147c1565b8260208301529392505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561482157614821614661565b5060010190565b6000821982111561483b5761483b614661565b500190565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b60408152600060e082018454604084015260018086015460608501526002860154608085015260ff600387015416151560a08501526004860160a060c086015282815480855261010087019150826000526020945084600020925060005b818110156148df5783548352928401929185019184016148c4565b5050858103848701526148f281886142a7565b98975050505050505050565b8051614909816140eb565b919050565b600060e0828403121561492057600080fd5b614928613fc9565b8251815260208301516020820152604083015161494481614014565b80604083015250606083015160608201526080830151608082015260a08301516006811061497157600080fd5b60a082015261498260c084016148fe565b60c08201529392505050565b6003811061499e5761499e6147ab565b9052565b61499e816147c1565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a08301525050565b8051151582526020810151151560208301526040810151614a09604084018261498e565b506060810151614a1c60608401826149a2565b506080810151608083015260a081015160a083015260c081015160c083015260e0810151614a4d60e08401826149ab565b50610100015180516101a083015260208101516101c083015260408101516101e083015260608101516102008301526080015161022090910152565b8381526102808101614a9e60208301856149e5565b82610260830152949350505050565b600060c08284031215614abf57600080fd5b60405160c081018181106001600160401b0382111715614ae157614ae1613fb3565b8060405250809150825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201525092915050565b600060c08284031215614b3857600080fd5b6132f68383614aad565b6001600160a01b038581168252841660208201526101208101614b64846147c1565b836040830152610ee960608301846149ab565b600081518084526020808501945080840160005b838110156142e25781518051885283810151848901526040808201519089015260608082015190890152608080820151614bc7828b01826149ab565b505060a0810151610140614c26818b0183805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b60c08301516102408b015260e08301516102608b01526101008301516102808b01526101208301516102a08b0152909101516102c0890152506102e09096019590820190600101614b8b565b600061028086518352602087015160208401526040870151614c9760408501826149a2565b506060870151614caa606085018261498e565b506080870151608084015260a087015160a084015260c0870151614cd260c085018215159052565b5060e087015160e084015261010080880151818501525061012080880151818501525080610140840152614d0881840187614b77565b85516001600160a01b0390811661016086015260208701511661018085015260408601516101a085015260608601516101c085015260808601516101e085015260a086015161020085015260c086015161022085015260e08601516102408501529150614d729050565b8261026083015295945050505050565b600060208284031215614d9457600080fd5b815161273e81614014565b600060208284031215614db157600080fd5b5051919050565b600060208284031215614dca57600080fd5b815161273e81614402565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6103008101614e0e828a6149e5565b6102408201979097526001600160a01b03959095166102608601526102808501939093526102a08401919091526102c083015215156102e090910152919050565b60008060408385031215614e6257600080fd5b505080516020909101519092909150565b600060a08284031215614e8557600080fd5b60405160a081018181106001600160401b0382111715614ea757614ea7613fb3565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600082614eff57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015614f1657614f16614661565b500390565b8454815260018501546020820152600285015460408201526003850154606082015260048501546080820152600585015460a0820152600685015460c0820152600785015460e082015260088501546101008201526103a08101614f836101208301866149e5565b610360820193909352610380015292915050565b6000610100808385031215614fab57600080fd5b604051908101906001600160401b0382118183101715614fcd57614fcd613fb3565b81604052809250835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152505092915050565b60006102e0828403121561503957600080fd5b615041613ff1565b825181526020830151602082015260408301516040820152606083015160608201526150708460808501614aad565b608082015261014061508485828601614f97565b60a083015261024084015160c083015261026084015160e08301526102808401516101008301526102a08401516101208301526102c0909301519281019290925250919050565b634e487b7160e01b600052603160045260246000fd5b6000600160ff1b8214156150f7576150f7614661565b5060000390565b600081600019048311821515161561511857615118614661565b500290565b83815260e0810161515c602083018580518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b8260c0830152949350505050565b600080821280156001600160ff1b038490038513161561518c5761518c614661565b600160ff1b83900384128116156151a5576151a5614661565b5050019056fea2646970667358221220885d12cb2c724cac65aa2f66e91c0c956d984b94401b6d6e52317e223765963564736f6c63430008090033";

type OptionMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarket__factory extends ContractFactory {
  constructor(...args: OptionMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptionMarket> {
    return super.deploy(overrides || {}) as Promise<OptionMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OptionMarket {
    return super.attach(address) as OptionMarket;
  }
  connect(signer: Signer): OptionMarket__factory {
    return super.connect(signer) as OptionMarket__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketInterface {
    return new utils.Interface(_abi) as OptionMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarket {
    return new Contract(address, _abi, signerOrProvider) as OptionMarket;
  }
}
