/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OptionMarketViewer,
  OptionMarketViewerInterface,
} from "../OptionMarketViewer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nominatedOwner",
        type: "address",
      },
    ],
    name: "OnlyNominatedOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "thrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "RemovingInvalidMarket",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct OptionMarketViewer.OptionMarketAddresses",
        name: "market",
        type: "tuple",
      },
    ],
    name: "MarketAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "MarketRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketViewer.OptionMarketAddresses",
        name: "newMarketAddresses",
        type: "tuple",
      },
    ],
    name: "addMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoard",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "boardId",
        type: "uint256",
      },
    ],
    name: "getBoardForBaseKey",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "strikeId",
        type: "uint256",
      },
    ],
    name: "getBoardForStrikeId",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket[]",
        name: "markets",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getLiquidityBalancesAndAllowances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType:
          "struct OptionMarketViewer.LiquidityBalanceAndAllowance[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "getLiveBoards",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "boardId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseIv",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "priceAtExpiry",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "forceCloseGwavIV",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "netGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikePrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "skew",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "forceCloseSkew",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "callDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "putDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "stdVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.StrikeGreeks",
                name: "cachedGreeks",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "baseReturnedRatio",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longCallOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "longPutOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallBaseOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortCallQuoteOpenInterest",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "shortPutOpenInterest",
                type: "uint256",
              },
            ],
            internalType: "struct OptionMarketViewer.StrikeView[]",
            name: "strikes",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.BoardView[]",
        name: "marketBoards",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalQueuedDeposits",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalQueuedWithdrawals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenPrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "contract LiquidityPool",
                name: "liquidityPool",
                type: "address",
              },
              {
                internalType: "contract LiquidityToken",
                name: "liquidityToken",
                type: "address",
              },
              {
                internalType: "contract OptionGreekCache",
                name: "greekCache",
                type: "address",
              },
              {
                internalType: "contract OptionMarket",
                name: "optionMarket",
                type: "address",
              },
              {
                internalType: "contract OptionMarketPricer",
                name: "optionMarketPricer",
                type: "address",
              },
              {
                internalType: "contract OptionToken",
                name: "optionToken",
                type: "address",
              },
              {
                internalType: "contract ShortCollateral",
                name: "shortCollateral",
                type: "address",
              },
              {
                internalType: "contract PoolHedger",
                name: "poolHedger",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "quoteAsset",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "baseAsset",
                type: "address",
              },
            ],
            internalType: "struct OptionMarketViewer.OptionMarketAddresses",
            name: "marketAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxBoardExpiry",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "securityModule",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "feePortionReserved",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staticBaseSettlementFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarket.OptionMarketParameters",
                name: "optionMarketParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minDepositWithdraw",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "depositDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "guardianMultisig",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "guardianDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardSettlementCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxFeePaid",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityPool.LiquidityPoolParameters",
                name: "lpParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxStrikesPerBoard",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptableSpotPricePercentMove",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staleUpdateDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewFloor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewCap",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "rateAndCarry",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.GreekCacheParameters",
                name: "greekCacheParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "ivGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatePostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortSpotMin",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateSpotMin",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.ForceCloseParameters",
                name: "forceCloseParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minStaticQuoteCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minStaticBaseCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callSpotPriceShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putSpotPriceShock",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.MinCollateralParameters",
                name: "minCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "optionPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "standardSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.PricingParameters",
                name: "pricingParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "minDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "minForceCloseDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "tradingCutoff",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMinSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMaxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "capSkewsToAbs",
                    type: "bool",
                  },
                ],
                internalType: "struct OptionMarketPricer.TradeLimitParameters",
                name: "tradeLimitParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "defaultVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "referenceSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticSkewAdjustment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticIvVariance",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.VarianceFeeParameters",
                name: "varianceFeeParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "penaltyRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatorFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "smFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minLiquidationFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionToken.PartialCollateralParameters",
                name: "partialCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "interactionDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "hedgeCap",
                    type: "uint256",
                  },
                ],
                internalType: "struct PoolHedger.PoolHedgerParameters",
                name: "poolHedgerParams",
                type: "tuple",
              },
            ],
            internalType: "struct OptionMarketViewer.MarketParameters",
            name: "marketParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "globalNetGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseIv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceAtExpiry",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "forceCloseGwavIV",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "netDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netStdVega",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netOptionValue",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.NetGreeks",
                name: "netGreeks",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "strikeId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "strikePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseSkew",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "int256",
                        name: "callDelta",
                        type: "int256",
                      },
                      {
                        internalType: "int256",
                        name: "putDelta",
                        type: "int256",
                      },
                      {
                        internalType: "uint256",
                        name: "stdVega",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callPrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "putPrice",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionGreekCache.StrikeGreeks",
                    name: "cachedGreeks",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "baseReturnedRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longCallOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPutOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallBaseOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallQuoteOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPutOpenInterest",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketViewer.StrikeView[]",
                name: "strikes",
                type: "tuple[]",
              },
            ],
            internalType: "struct OptionMarketViewer.BoardView[]",
            name: "liveBoards",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketViewWithBoards",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketAddresses",
    outputs: [
      {
        components: [
          {
            internalType: "contract LiquidityPool",
            name: "liquidityPool",
            type: "address",
          },
          {
            internalType: "contract LiquidityToken",
            name: "liquidityToken",
            type: "address",
          },
          {
            internalType: "contract OptionGreekCache",
            name: "greekCache",
            type: "address",
          },
          {
            internalType: "contract OptionMarket",
            name: "optionMarket",
            type: "address",
          },
          {
            internalType: "contract OptionMarketPricer",
            name: "optionMarketPricer",
            type: "address",
          },
          {
            internalType: "contract OptionToken",
            name: "optionToken",
            type: "address",
          },
          {
            internalType: "contract ShortCollateral",
            name: "shortCollateral",
            type: "address",
          },
          {
            internalType: "contract PoolHedger",
            name: "poolHedger",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "quoteAsset",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "baseAsset",
            type: "address",
          },
        ],
        internalType: "struct OptionMarketViewer.OptionMarketAddresses[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "baseKey",
        type: "bytes32",
      },
    ],
    name: "getMarketForBaseKey",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalQueuedDeposits",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalQueuedWithdrawals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenPrice",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "contract LiquidityPool",
                name: "liquidityPool",
                type: "address",
              },
              {
                internalType: "contract LiquidityToken",
                name: "liquidityToken",
                type: "address",
              },
              {
                internalType: "contract OptionGreekCache",
                name: "greekCache",
                type: "address",
              },
              {
                internalType: "contract OptionMarket",
                name: "optionMarket",
                type: "address",
              },
              {
                internalType: "contract OptionMarketPricer",
                name: "optionMarketPricer",
                type: "address",
              },
              {
                internalType: "contract OptionToken",
                name: "optionToken",
                type: "address",
              },
              {
                internalType: "contract ShortCollateral",
                name: "shortCollateral",
                type: "address",
              },
              {
                internalType: "contract PoolHedger",
                name: "poolHedger",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "quoteAsset",
                type: "address",
              },
              {
                internalType: "contract IERC20",
                name: "baseAsset",
                type: "address",
              },
            ],
            internalType: "struct OptionMarketViewer.OptionMarketAddresses",
            name: "marketAddresses",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxBoardExpiry",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "securityModule",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "feePortionReserved",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staticBaseSettlementFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarket.OptionMarketParameters",
                name: "optionMarketParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minDepositWithdraw",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "depositDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "withdrawalFee",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidityCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBThreshold",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewVarianceCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "address",
                    name: "guardianMultisig",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "guardianDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardSettlementCBTimeout",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxFeePaid",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityPool.LiquidityPoolParameters",
                name: "lpParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "maxStrikesPerBoard",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "acceptableSpotPricePercentMove",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "staleUpdateDuration",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "varianceSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueIvGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionValueSkewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewFloor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "gwavSkewCap",
                    type: "uint256",
                  },
                  {
                    internalType: "int256",
                    name: "rateAndCarry",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.GreekCacheParameters",
                name: "greekCacheParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "ivGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewGWAVPeriod",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatePostCutoffVolShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortSpotMin",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidateSpotMin",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.ForceCloseParameters",
                name: "forceCloseParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minStaticQuoteCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minStaticBaseCollateral",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointA",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shockVolPointB",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "callSpotPriceShock",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "putSpotPriceShock",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionGreekCache.MinCollateralParameters",
                name: "minCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "optionPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "optionPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee1xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "spotPriceFee2xPoint",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "standardSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentFactor",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.PricingParameters",
                name: "pricingParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "minDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "minForceCloseDelta",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "tradingCutoff",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxBaseIV",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxVol",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMinSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "absMaxSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "capSkewsToAbs",
                    type: "bool",
                  },
                ],
                internalType: "struct OptionMarketPricer.TradeLimitParameters",
                name: "tradeLimitParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "defaultVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseVarianceFeeCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skewAdjustmentCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "referenceSkew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticSkewAdjustment",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "vegaCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticVega",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "ivVarianceCoefficient",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minimumStaticIvVariance",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketPricer.VarianceFeeParameters",
                name: "varianceFeeParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "penaltyRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "liquidatorFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "smFeeRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "minLiquidationFee",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionToken.PartialCollateralParameters",
                name: "partialCollatParams",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "interactionDelay",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "hedgeCap",
                    type: "uint256",
                  },
                ],
                internalType: "struct PoolHedger.PoolHedgerParameters",
                name: "poolHedgerParams",
                type: "tuple",
              },
            ],
            internalType: "struct OptionMarketViewer.MarketParameters",
            name: "marketParameters",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "freeLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "burnableLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedCollatLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pendingDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usedDeltaLiquidity",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "NAV",
                type: "uint256",
              },
            ],
            internalType: "struct LiquidityPool.Liquidity",
            name: "liquidity",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "netDelta",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netStdVega",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "netOptionValue",
                type: "int256",
              },
            ],
            internalType: "struct OptionGreekCache.NetGreeks",
            name: "globalNetGreeks",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "market",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "boardId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "expiry",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseIv",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "priceAtExpiry",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "forceCloseGwavIV",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "netDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netStdVega",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netOptionValue",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.NetGreeks",
                name: "netGreeks",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "strikeId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "boardId",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "strikePrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "skew",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "forceCloseSkew",
                    type: "uint256",
                  },
                  {
                    components: [
                      {
                        internalType: "int256",
                        name: "callDelta",
                        type: "int256",
                      },
                      {
                        internalType: "int256",
                        name: "putDelta",
                        type: "int256",
                      },
                      {
                        internalType: "uint256",
                        name: "stdVega",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callPrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "putPrice",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionGreekCache.StrikeGreeks",
                    name: "cachedGreeks",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "baseReturnedRatio",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longCallOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "longPutOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallBaseOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortCallQuoteOpenInterest",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "shortPutOpenInterest",
                    type: "uint256",
                  },
                ],
                internalType: "struct OptionMarketViewer.StrikeView[]",
                name: "strikes",
                type: "tuple[]",
              },
            ],
            internalType: "struct OptionMarketViewer.BoardView[]",
            name: "liveBoards",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "spotPrice",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "quoteKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "baseKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "quoteBaseFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "baseQuoteFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct SynthetixAdapter.ExchangeParams",
            name: "exchangeParams",
            type: "tuple",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketViewWithBoards",
        name: "market",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "getMarkets",
    outputs: [
      {
        components: [
          {
            internalType: "contract IAddressResolver",
            name: "addressResolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "isPaused",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "totalQueuedDeposits",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalQueuedWithdrawals",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenPrice",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "contract LiquidityPool",
                    name: "liquidityPool",
                    type: "address",
                  },
                  {
                    internalType: "contract LiquidityToken",
                    name: "liquidityToken",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionGreekCache",
                    name: "greekCache",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionMarket",
                    name: "optionMarket",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionMarketPricer",
                    name: "optionMarketPricer",
                    type: "address",
                  },
                  {
                    internalType: "contract OptionToken",
                    name: "optionToken",
                    type: "address",
                  },
                  {
                    internalType: "contract ShortCollateral",
                    name: "shortCollateral",
                    type: "address",
                  },
                  {
                    internalType: "contract PoolHedger",
                    name: "poolHedger",
                    type: "address",
                  },
                  {
                    internalType: "contract IERC20",
                    name: "quoteAsset",
                    type: "address",
                  },
                  {
                    internalType: "contract IERC20",
                    name: "baseAsset",
                    type: "address",
                  },
                ],
                internalType: "struct OptionMarketViewer.OptionMarketAddresses",
                name: "marketAddresses",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "maxBoardExpiry",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "securityModule",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "feePortionReserved",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "staticBaseSettlementFee",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionMarket.OptionMarketParameters",
                    name: "optionMarketParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "minDepositWithdraw",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "depositDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "withdrawalDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "withdrawalFee",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidityCBThreshold",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidityCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "ivVarianceCBThreshold",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewVarianceCBThreshold",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "ivVarianceCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewVarianceCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "address",
                        name: "guardianMultisig",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "guardianDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "boardSettlementCBTimeout",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxFeePaid",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct LiquidityPool.LiquidityPoolParameters",
                    name: "lpParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "maxStrikesPerBoard",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "acceptableSpotPricePercentMove",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "staleUpdateDuration",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "varianceIvGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "varianceSkewGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionValueIvGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionValueSkewGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "gwavSkewFloor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "gwavSkewCap",
                        type: "uint256",
                      },
                      {
                        internalType: "int256",
                        name: "rateAndCarry",
                        type: "int256",
                      },
                    ],
                    internalType:
                      "struct OptionGreekCache.GreekCacheParameters",
                    name: "greekCacheParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "ivGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewGWAVPeriod",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortPostCutoffVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "longVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "longPostCutoffVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidateVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidatePostCutoffVolShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortSpotMin",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidateSpotMin",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionGreekCache.ForceCloseParameters",
                    name: "forceCloseParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "minStaticQuoteCollateral",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minStaticBaseCollateral",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolA",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolPointA",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolB",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shockVolPointB",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callSpotPriceShock",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "putSpotPriceShock",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionGreekCache.MinCollateralParameters",
                    name: "minCollatParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "optionPriceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionPriceFee1xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "optionPriceFee2xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "spotPriceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "spotPriceFee1xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "spotPriceFee2xPoint",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "vegaFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "standardSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewAdjustmentFactor",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct OptionMarketPricer.PricingParameters",
                    name: "pricingParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "int256",
                        name: "minDelta",
                        type: "int256",
                      },
                      {
                        internalType: "int256",
                        name: "minForceCloseDelta",
                        type: "int256",
                      },
                      {
                        internalType: "uint256",
                        name: "tradingCutoff",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minBaseIV",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxBaseIV",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minVol",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "maxVol",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "absMinSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "absMaxSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "bool",
                        name: "capSkewsToAbs",
                        type: "bool",
                      },
                    ],
                    internalType:
                      "struct OptionMarketPricer.TradeLimitParameters",
                    name: "tradeLimitParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "defaultVarianceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "forceCloseVarianceFeeCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "skewAdjustmentCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "referenceSkew",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minimumStaticSkewAdjustment",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "vegaCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minimumStaticVega",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "ivVarianceCoefficient",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minimumStaticIvVariance",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionMarketPricer.VarianceFeeParameters",
                    name: "varianceFeeParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "penaltyRatio",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidatorFeeRatio",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "smFeeRatio",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minLiquidationFee",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct OptionToken.PartialCollateralParameters",
                    name: "partialCollatParams",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "interactionDelay",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "hedgeCap",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct PoolHedger.PoolHedgerParameters",
                    name: "poolHedgerParams",
                    type: "tuple",
                  },
                ],
                internalType: "struct OptionMarketViewer.MarketParameters",
                name: "marketParameters",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "freeLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "burnableLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "usedCollatLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "pendingDeltaLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "usedDeltaLiquidity",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "NAV",
                    type: "uint256",
                  },
                ],
                internalType: "struct LiquidityPool.Liquidity",
                name: "liquidity",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "netDelta",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netStdVega",
                    type: "int256",
                  },
                  {
                    internalType: "int256",
                    name: "netOptionValue",
                    type: "int256",
                  },
                ],
                internalType: "struct OptionGreekCache.NetGreeks",
                name: "globalNetGreeks",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "spotPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes32",
                    name: "quoteKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "baseKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "uint256",
                    name: "quoteBaseFeeRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "baseQuoteFeeRate",
                    type: "uint256",
                  },
                ],
                internalType: "struct SynthetixAdapter.ExchangeParams",
                name: "exchangeParams",
                type: "tuple",
              },
            ],
            internalType: "struct OptionMarketViewer.MarketView[]",
            name: "markets",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketsView",
        name: "marketsView",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getOwnerPositions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "market",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "positionId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "strikeId",
                type: "uint256",
              },
              {
                internalType: "enum OptionMarket.OptionType",
                name: "optionType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateral",
                type: "uint256",
              },
              {
                internalType: "enum OptionToken.PositionState",
                name: "state",
                type: "uint8",
              },
            ],
            internalType: "struct OptionToken.OptionPosition[]",
            name: "positions",
            type: "tuple[]",
          },
        ],
        internalType: "struct OptionMarketViewer.MarketOptionPositions[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getOwnerPositionsInRange",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "positionId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strikeId",
            type: "uint256",
          },
          {
            internalType: "enum OptionMarket.OptionType",
            name: "optionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "enum OptionToken.PositionState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct OptionToken.OptionPosition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "_synthetixAdapter",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    name: "marketAddresses",
    outputs: [
      {
        internalType: "contract LiquidityPool",
        name: "liquidityPool",
        type: "address",
      },
      {
        internalType: "contract LiquidityToken",
        name: "liquidityToken",
        type: "address",
      },
      {
        internalType: "contract OptionGreekCache",
        name: "greekCache",
        type: "address",
      },
      {
        internalType: "contract OptionMarket",
        name: "optionMarket",
        type: "address",
      },
      {
        internalType: "contract OptionMarketPricer",
        name: "optionMarketPricer",
        type: "address",
      },
      {
        internalType: "contract OptionToken",
        name: "optionToken",
        type: "address",
      },
      {
        internalType: "contract ShortCollateral",
        name: "shortCollateral",
        type: "address",
      },
      {
        internalType: "contract PoolHedger",
        name: "poolHedger",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "baseAsset",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "optionMarkets",
    outputs: [
      {
        internalType: "contract OptionMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract OptionMarket",
        name: "market",
        type: "address",
      },
    ],
    name: "removeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "synthetixAdapter",
    outputs: [
      {
        internalType: "contract SynthetixAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff60a01b1916905534801561001d57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1614c578061007b6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063845e1259116100b8578063ac6e227b1161007c578063ac6e227b146102f0578063b0862c0e14610303578063c71b7e5314610323578063d2f5a5bb14610404578063d4dfadbf14610417578063db9132361461042a57600080fd5b8063845e1259146102755780638da5cb5b1461029557806397ce0d31146102a85780639cdaffe2146102bd578063a9306dba146102dd57600080fd5b8063256465451161010a57806325646545146101e757806353a47bb7146102075780635d033f7f1461021a5780636cc9023f1461023a57806379ba50971461025a5780637f68720f1461026257600080fd5b80631139e3f114610147578063158ef93e146101705780631627540c1461019457806319ab453c146101a95780631cb66845146101bc575b600080fd5b61015a6101553660046134bc565b61043d565b604051610167919061391e565b60405180910390f35b60025461018490600160a01b900460ff1681565b6040519015158152602001610167565b6101a76101a2366004613a76565b6106f9565b005b6101a76101b7366004613a76565b610756565b6101cf6101ca366004613a9a565b6107d2565b6040516001600160a01b039091168152602001610167565b6101fa6101f5366004613ab3565b6107fc565b6040516101679190613b04565b6001546101cf906001600160a01b031681565b61022d610228366004613b66565b610ad0565b6040516101679190613d0d565b61024d610248366004613a9a565b610b89565b6040516101679190613d68565b6101a7610d6b565b6101a7610270366004613e87565b610e23565b610288610283366004613a76565b610f96565b6040516101679190613fe9565b6000546101cf906001600160a01b031681565b6102b06111b7565b6040516101679190614066565b6102d06102cb3660046140b5565b611319565b60405161016791906140fb565b61022d6102eb36600461410e565b6115fd565b61022d6102fe366004613b66565b611620565b610316610311366004613a76565b61174c565b6040516101679190614130565b6103a1610331366004613a76565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b03978816999688169895881697968716969485169593851694928316939183169291821691168a565b604080516001600160a01b039b8c168152998b1660208b0152978a16978901979097529488166060880152928716608087015290861660a0860152851660c0850152841660e0840152831661010083015290911661012082015261014001610167565b6002546101cf906001600160a01b031681565b61024d610425366004613a76565b611919565b6101a7610438366004613a76565b611ab8565b6040805160608082018352600080835260208301529181019190915281516000816001600160401b03811115610475576104756132bf565b6040519080825280602002602001820160405280156104ae57816020015b61049b612be6565b8152602001906001900390816104935790505b5090506000600260009054906101000a90046001600160a01b03166001600160a01b031663b714fa3e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050157600080fd5b505afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105399190614153565b905060005b838110156106445760006004600088848151811061055e5761055e61416e565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020825161014081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e08201526008820154831661010082015260099091015490911661012082015290506106158184611cca565b8483815181106106275761062761416e565b6020026020010181905250508061063d9061419a565b905061053e565b506040518060600160405280600260009054906101000a90046001600160a01b03166001600160a01b03166305a2ee2a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069e57600080fd5b505afa1580156106b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d691906141b5565b6001600160a01b0316815291151560208301526040909101919091529392505050565b61070161227f565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22906020015b60405180910390a150565b600254600160a01b900460ff16156107ab5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b600280546001600160a81b0319166001600160a01b0390921691909117600160a01b179055565b600381815481106107e257600080fd5b6000918252602090912001546001600160a01b0316905081565b81516060906000816001600160401b0381111561081b5761081b6132bf565b60405190808252806020026020018201604052801561087957816020015b610866604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b8152602001906001900390816108395790505b50905060005b82811015610ac55760006004600088848151811061089f5761089f61416e565b6020908102919091018101516001600160a01b039081168352828201939093526040918201600020825161014081018452815485168152600182015485169281018390526002820154851681850152600382015485166060820152600480830154861660808301526005830154861660a08301526006830154861660c08301526007830154861660e083015260088301548616610100830152600990920154851661012082015292516370a0823160e01b8152938a16908401529092509081906370a082319060240160206040518083038186803b15801561098057600080fd5b505afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b891906141d2565b8484815181106109ca576109ca61416e565b60209081029190910181015101526101008201518251604051636eb1769f60e11b81526001600160a01b038a81166004830152918216602482015291169063dd62ed3e9060440160206040518083038186803b158015610a2957600080fd5b505afa158015610a3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6191906141d2565b848481518110610a7357610a7361416e565b602002602001015160400181815250508160000151848481518110610a9a57610a9a61416e565b60209081029190910101516001600160a01b03909116905250610abe90508161419a565b905061087f565b509150505b92915050565b610ad8612cc2565b6001600160a01b038084166000908152600460208181526040928390208351610140810185528154861681526001820154861692810192909252600281015485169382019390935260038301548416606082015290820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e082015260088201548316610100820152600990910154909116610120820152610b8181846122c7565b949350505050565b610b91612d3b565b60035460005b81811015610d0d5760006004600060038481548110610bb857610bb861416e565b6000918252602080832091909101546001600160a01b039081168452838201949094526040928301822083516101408101855281548616815260018201548616928101929092526002808201548616838601526003820154861660608401819052600480840154881660808601526005840154881660a08601526006840154881660c08601526007840154881660e08601526008840154881661010086015260099093015487166101208501529054945163664702e160e11b8152918201529094509092919091169063cc8e05c29060240160206040518083038186803b158015610ca257600080fd5b505afa158015610cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cda91906141d2565b905085811415610cfa57610cf18260600151611919565b94505050610d0d565b505080610d069061419a565b9050610b97565b506080820151606001516001600160a01b0316610d655760405162461bcd60e51b81526020600482015260166024820152754e6f206d61726b657420666f722062617365206b657960501b60448201526064016107a2565b50919050565b6001546001600160a01b03163314610db1576001546040516312d9f3db60e31b81523060048201523360248201526001600160a01b0390911660448201526064016107a2565b600054600154604080516001600160a01b0393841681529290911660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a160018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b610e2b61227f565b606081018051600380546001808201835560008381527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90920180546001600160a01b03199081166001600160a01b039687161790915585518516835260046020818152604094859020895181548516908916178155908901519381018054841694881694909417909355838801516002840180548416918816919091179055955193820180548216948616949094179093556080860151948101805484169585169590951790945560a0850151600585018054841691851691909117905560c0850151600685018054841691851691909117905560e085015160078501805484169185169190911790556101008501516008850180548416918516919091179055610120850151600990940180549092169390921692909217909155517fd3777d9870fa8e7682a422021d48549c180f7b06a647478f5211caef6b6a4ee89061074b9083906141eb565b6003546060906000816001600160401b03811115610fb657610fb66132bf565b604051908082528060200260200182016040528015610ffc57816020015b604080518082019091526000815260606020820152815260200190600190039081610fd45790505b50905060005b828110156111af57600060046000600384815481106110235761102361416e565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610140810184528154851681526001820154851692810192909252600281015484169282019290925260038201548316606082018190526004830154841660808301526005830154841660a08301526006830154841660c08301526007830154841660e0830152600883015484166101008301526009909201549092166101208301528451919250908490849081106110ea576110ea61416e565b60209081029190910101516001600160a01b03918216905260a082015160405163845e125960e01b8152888316600482015291169063845e12599060240160006040518083038186803b15801561114057600080fd5b505afa158015611154573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261117c919081019061426e565b83838151811061118e5761118e61416e565b60200260200101516020018190525050806111a89061419a565b9050611002565b509392505050565b6003546060906000816001600160401b038111156111d7576111d76132bf565b60405190808252806020026020018201604052801561121057816020015b6111fd612e25565b8152602001906001900390816111f55790505b50905060005b828110156113125760046000600383815481106112355761123561416e565b60009182526020808320909101546001600160a01b039081168452838201949094526040928301909120825161014081018452815485168152600182015485169281019290925260028101548416928201929092526003820154831660608201526004820154831660808201526005820154831660a08201526006820154831660c08201526007820154831660e08201526008820154831661010082015260099091015490911661012082015282518390839081106112f6576112f661416e565b60200260200101819052508061130b9061419a565b9050611216565b5092915050565b6001600160a01b038481166000908152600460208181526040808420815161014081018352815487168152600182015487169381019390935260028101548616838301526003810154861660608085019190915281850154871660808501526005820154871660a085018190526006830154881660c08601526007830154881660e086015260088301548816610100860152600990920154871661012085015291516370a0823160e01b81529589169386019390935293909291906370a082319060240160206040518083038186803b1580156113f557600080fd5b505afa158015611409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142d91906141d2565b9050600061143b8683614307565b85116114475784611451565b6114518683614307565b90506000816001600160401b0381111561146d5761146d6132bf565b6040519080825280602002602001820160405280156114a657816020015b611493612e79565b81526020019060019003908161148b5790505b50905060005b828110156115f05760a08501516001600160a01b03166313ddc40181632f745c598c6114d8868e61431e565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260440160206040518083038186803b15801561151c57600080fd5b505afa158015611530573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155491906141d2565b6040518263ffffffff1660e01b815260040161157291815260200190565b60c06040518083038186803b15801561158a57600080fd5b505afa15801561159e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c29190614336565b8282815181106115d4576115d461416e565b6020026020010181905250806115e99061419a565b90506114ac565b5098975050505050505050565b611605612cc2565b600061161084610b89565b9050610b818160800151846122c7565b611628612cc2565b6001600160a01b03838116600090815260046020818152604080842081516101408101835281548716815260018201548716938101939093526002810154861683830152600381015486166060840181905281850154871660808501526005820154871660a08501526006820154871660c08501526007820154871660e0850152600882015487166101008501526009909101549095166101208301525163a6063c0560e01b8152918201869052929063a6063c05906024016101206040518083038186803b1580156116fa57600080fd5b505afa15801561170e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173291906143cb565b9050611743828261010001516122c7565b95945050505050565b6001600160a01b0380821660009081526004602081815260408084208151610140810183528154871681526001820154871693810193909352600281015486168383015260038101548616606084810182905282860154881660808601526005830154881660a08601526006830154881660c08601526007830154881660e0860152600883015488166101008601526009909201549096166101208401528151637e7088eb60e01b815291519095929493637e7088eb928082019286929091829003018186803b15801561181f57600080fd5b505afa158015611833573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261185b9190810190614443565b8051909150806001600160401b03811115611878576118786132bf565b6040519080825280602002602001820160405280156118b157816020015b61189e612cc2565b8152602001906001900390816118965790505b50935060005b81811015611910576118e2848483815181106118d5576118d561416e565b60200260200101516122c7565b8582815181106118f4576118f461416e565b6020026020010181905250806119099061419a565b90506118b7565b50505050919050565b611921612d3b565b6001600160a01b038083166000908152600460208181526040808420815161014081018352815487168152600182015487168185015260028083015488168285015260038301548816606083015282860154881660808301526005830154881660a08301526006830154881660c08301526007830154881660e083015260088301548816610100830152600990920154871661012082015290548251635b8a7d1f60e11b815292519196611a34958895929091169363b714fa3e9381830193929091829003018186803b1580156119f757600080fd5b505afa158015611a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2f9190614153565b611cca565b9050604051806101400160405280826000015115158152602001826020015181526020018260400151815260200182606001518152602001826080015181526020018260a0015181526020018260c0015181526020018260e001518152602001611aa1846060015161174c565b815260200182610100015181525092505050919050565b611ac061227f565b6003546000908190815b81811015611b2657846001600160a01b031660038281548110611aef57611aef61416e565b6000918252602090912001546001600160a01b03161415611b165780935060019250611b26565b611b1f8161419a565b9050611aca565b5081611b5657604051633cebeb3960e21b81523060048201526001600160a01b03851660248201526044016107a2565b60038054611b6690600190614307565b81548110611b7657611b7661416e565b600091825260209091200154600380546001600160a01b039092169185908110611ba257611ba261416e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506003805480611be157611be1614477565b6000828152602090819020600019908301810180546001600160a01b03191690559091019091556040516001600160a01b03861681527f59d7b1e52008dc342c9421dadfc773114b914a65682a4e4b53cf60a970df0d77910160405180910390a15050506001600160a01b0316600090815260046020819052604090912080546001600160a01b031990811682556001820180548216905560028201805482169055600382018054821690559181018054831690556005810180548316905560068101805483169055600781018054831690556008810180548316905560090180549091169055565b611cd2612be6565b600083604001516001600160a01b0316636461a97b6040518163ffffffff1660e01b81526004016101006040518083038186803b158015611d1257600080fd5b505afa158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4a91906144e8565b90506000611d5785612476565b60025460608701516040516333dfec9960e21b81526001600160a01b03918216600482015292935060009291169063cf7fb2649060240160206040518083038186803b158015611da657600080fd5b505afa158015611dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dde9190614153565b905080158015611dec575084155b156120ab5760025460608701516040516333ef9fd160e21b81526001600160a01b039182166004820152600092919091169063cfbe7f449060240160a06040518083038186803b158015611e3f57600080fd5b505afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e779190614548565b9050604051806101200160405280831515815260200188600001516001600160a01b03166358f67c0b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611eca57600080fd5b505afa158015611ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0291906141d2565b815260200188600001516001600160a01b031663481bf0b86040518163ffffffff1660e01b815260040160206040518083038186803b158015611f4457600080fd5b505afa158015611f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7c91906141d2565b815260200188600001516001600160a01b0316634b94f50e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fbe57600080fd5b505afa158015611fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff691906141d2565b815260200188815260200184815260200188600001516001600160a01b031663951583c384600001516040518263ffffffff1660e01b815260040161203d91815260200190565b60c06040518083038186803b15801561205557600080fd5b505afa158015612069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061208d91906145b7565b81526020018560a00151815260200182815250945050505050610aca565b60405180610120016040528082151581526020016000815260200160008152602001600081526020018781526020018381526020016040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525081526020018460a0015181526020016040518060a0016040528060008152602001600260009054906101000a90046001600160a01b03166001600160a01b03166327a008c18b606001516040518263ffffffff1660e01b815260040161218891906001600160a01b0391909116815260200190565b60206040518083038186803b1580156121a057600080fd5b505afa1580156121b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121d891906141d2565b815260025460608b015160405163664702e160e11b81526001600160a01b03918216600482015260209093019291169063cc8e05c29060240160206040518083038186803b15801561222957600080fd5b505afa15801561223d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061226191906141d2565b81526020016000815260200160008152508152509350505050610aca565b6000546001600160a01b031633146122c55760005460405163035785f360e31b81523060048201523360248201526001600160a01b0390911660448201526064016107a2565b565b6122cf612cc2565b60008060008086606001516001600160a01b0316631f18a342876040518263ffffffff1660e01b815260040161230791815260200190565b60006040518083038186803b15801561231f57600080fd5b505afa158015612333573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261235b91908101906146a1565b935093509350935061236b612ecb565b816123f95787604001516001600160a01b031663254297b9886040518263ffffffff1660e01b81526004016123a291815260200190565b60006040518083038186803b1580156123ba57600080fd5b505afa1580156123ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123f6919081019061478e565b90505b60405180610120016040528089606001516001600160a01b03168152602001866000015181526020018660200151815260200186604001518152602001838152602001866060015115158152602001826020015181526020018260000151815260200161246886848787612957565b905298975050505050505050565b61247e612f15565b60405180610140016040528083606001516001600160a01b0316633105dd9c6040518163ffffffff1660e01b815260040160806040518083038186803b1580156124c757600080fd5b505afa1580156124db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124ff91906148d9565b815260200183600001516001600160a01b0316635181d38f6040518163ffffffff1660e01b81526004016101c06040518083038186803b15801561254257600080fd5b505afa158015612556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257a9190614927565b815260200183604001516001600160a01b031663f369f2ac6040518163ffffffff1660e01b81526004016101406040518083038186803b1580156125bd57600080fd5b505afa1580156125d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f591906149e0565b815260200183604001516001600160a01b031663569466876040518163ffffffff1660e01b81526004016101406040518083038186803b15801561263857600080fd5b505afa15801561264c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267091906149e0565b815260200183604001516001600160a01b031663e81284406040518163ffffffff1660e01b81526004016101006040518083038186803b1580156126b357600080fd5b505afa1580156126c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126eb9190614a67565b815260200183608001516001600160a01b031663da5376316040518163ffffffff1660e01b81526004016101206040518083038186803b15801561272e57600080fd5b505afa158015612742573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276691906143cb565b815260200183608001516001600160a01b031663ffae4b366040518163ffffffff1660e01b81526004016101806040518083038186803b1580156127a957600080fd5b505afa1580156127bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127e19190614af6565b815260200183608001516001600160a01b0316639757b2fa6040518163ffffffff1660e01b81526004016101206040518083038186803b15801561282457600080fd5b505afa158015612838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285c91906143cb565b81526020018360a001516001600160a01b03166352f11fbf6040518163ffffffff1660e01b815260040160806040518083038186803b15801561289e57600080fd5b505afa1580156128b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128d69190614b8d565b81526020018360e001516001600160a01b03166310147a9b6040518163ffffffff1660e01b8152600401604080518083038186803b15801561291757600080fd5b505afa15801561292b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061294f9190614bd3565b905292915050565b8351606090806001600160401b03811115612974576129746132bf565b6040519080825280602002602001820160405280156129ad57816020015b61299a61322e565b8152602001906001900390816129925790505b50915060005b81811015612bdc576040518061018001604052808883815181106129d9576129d961416e565b60200260200101516000015181526020018883815181106129fc576129fc61416e565b602002602001015161010001518152602001888381518110612a2057612a2061416e565b6020026020010151602001518152602001888381518110612a4357612a4361416e565b602002602001015160400151815260200185600014612a63576000612a82565b87606001518381518110612a7957612a7961416e565b60200260200101515b81526020018515612abe576040518060a00160405280600081526020016000815260200160008152602001600081526020016000815250612add565b87604001518381518110612ad457612ad461416e565b60200260200101515b8152602001868381518110612af457612af461416e565b60200260200101518152602001888381518110612b1357612b1361416e565b6020026020010151606001518152602001888381518110612b3657612b3661416e565b602002602001015160c001518152602001888381518110612b5957612b5961416e565b6020026020010151608001518152602001888381518110612b7c57612b7c61416e565b602002602001015160a001518152602001888381518110612b9f57612b9f61416e565b602002602001015160e00151815250838281518110612bc057612bc061416e565b602002602001018190525080612bd59061419a565b90506129b3565b5050949350505050565b604051806101200160405280600015158152602001600081526020016000815260200160008152602001612c18612e25565b8152602001612c25612f15565b8152602001612c636040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001612c8c60405180606001604052806000815260200160008152602001600081525090565b81526040805160a0810182526000808252602082810182905292820181905260608201819052608082015291015290565b905290565b60405180610120016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160001515815260200160008152602001612d2e60405180606001604052806000815260200160008152602001600081525090565b8152602001606081525090565b604051806101400160405280600015158152602001600081526020016000815260200160008152602001612d6d612e25565b8152602001612d7a612f15565b8152602001612db86040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001612de160405180606001604052806000815260200160008152602001600081525090565b815260200160608152602001612cbd6040518060a0016040528060008152602001600080191681526020016000801916815260200160008152602001600081525090565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b6040518060c00160405280600081526020016000815260200160006004811115612ea557612ea5613f4f565b8152602001600081526020016000815260200160006005811115612cbd57612cbd613f4f565b6040518060800160405280612efa60405180606001604052806000815260200160008152602001600081525090565b81526020016000815260200160608152602001606081525090565b604080516101c0810190915260006101408201818152610160830182905261018083018290526101a083019190915281908152602001612fc6604051806101c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001613021604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161307c604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020016130c960405180610100016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161311d6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161318860405180610180016040528060008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81526020016131dc6040518061012001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b815260200161320c6040518060800160405280600081526020016000815260200160008152602001600081525090565b8152602001612cbd604051806040016040528060008152602001600081525090565b604051806101800160405280600081526020016000815260200160008152602001600081526020016000815260200161328f6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156132f8576132f86132bf565b60405290565b60405160c081016001600160401b03811182821017156132f8576132f86132bf565b60405161012081016001600160401b03811182821017156132f8576132f86132bf565b60405160a081016001600160401b03811182821017156132f8576132f86132bf565b604051608081016001600160401b03811182821017156132f8576132f86132bf565b6040516101c081016001600160401b03811182821017156132f8576132f86132bf565b60405161018081016001600160401b03811182821017156132f8576132f86132bf565b604051601f8201601f191681016001600160401b03811182821017156133f5576133f56132bf565b604052919050565b60006001600160401b03821115613416576134166132bf565b5060051b60200190565b6001600160a01b038116811461343557600080fd5b50565b803561344381613420565b919050565b600082601f83011261345957600080fd5b8135602061346e613469836133fd565b6133cd565b82815260059290921b8401810191818101908684111561348d57600080fd5b8286015b848110156134b15780356134a481613420565b8352918301918301613491565b509695505050505050565b6000602082840312156134ce57600080fd5b81356001600160401b038111156134e457600080fd5b610b8184828501613448565b80516001600160a01b03168252602081015161351760208401826001600160a01b03169052565b50604081015161353260408401826001600160a01b03169052565b50606081015161354d60608401826001600160a01b03169052565b50608081015161356860808401826001600160a01b03169052565b5060a081015161358360a08401826001600160a01b03169052565b5060c081015161359e60c08401826001600160a01b03169052565b5060e08101516135b960e08401826001600160a01b03169052565b50610100818101516001600160a01b038116848301525050610120818101516001600160a01b038116848301525b50505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152506101408082015161366a828501826001600160a01b03169052565b5050610160818101519083015261018080820151908301526101a090810151910152565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015181840152505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152505050565b805182526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e0830152610100808201518184015250610120808201518184015250610140808201518184015250610160808201516135e78285018215159052565b613802828251805182526020808201516001600160a01b03169083015260408082015190830152606090810151910152565b602081015161381460808401826135ed565b50604081015161382861024084018261368e565b50606081015161383c61038084018261368e565b5060808181015180516104c085015260208101516104e0850152604081015161050085015260608101516105208501529081015161054084015260a081015161056084015260c081015161058084015260e08101516105a08401525060a08101516138ab6105c08401826136f4565b5060c08101516138bf6106e084018261374e565b5060e08101516138d36108608401826136f4565b50610100810151805161098084015260208101516109a084015260408101516109c084015260608101516109e08401525061012001518051610a0083015260200151610a2090910152565b602080825282516001600160a01b0316828201528281015115156040808401919091528084015160608085018190528151608080870182905260009594909360a0939086019284890190885b81811015613a66578551805115158452898101518a85015285810151868501528481015185850152888101516139a28a8601826134f0565b50878101516139b56101c08601826137d0565b5060c08101518051610c00860152602080820151610c20870152604080830151610c40880152606080840151610c60890152608080850151610c808a015260a090940151610ca089015260e08501518051610cc08a015280840151610ce08a0152820151610d00890152610100909401518051610d2089015291820151610d40880152810151610d6087015291820151610d808601520151610da084015294880194610dc09092019160010161396a565b50909a9950505050505050505050565b600060208284031215613a8857600080fd5b8135613a9381613420565b9392505050565b600060208284031215613aac57600080fd5b5035919050565b60008060408385031215613ac657600080fd5b82356001600160401b03811115613adc57600080fd5b613ae885828601613448565b9250506020830135613af981613420565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015613b5957815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101613b21565b5091979650505050505050565b60008060408385031215613b7957600080fd5b8235613b8481613420565b946020939093013593505050565b600081518084526020808501945080840160005b83811015613c6a578151805188528381015184890152604080820151818a0152606080830151818b0152608080840151818c015260a0808501518051828e0152602081015160c08e01529384015160e08d0152918301516101008c01528201516101208b015290505060c08101516101408981019190915260e0820151610160808b01919091526101008301516101808b01526101208301516101a08b0152908201516101c08a015201516101e08801526102009096019590820190600101613ba6565b509495945050505050565b80516001600160a01b0316825260006101606020830151602085015260408301516040850152606083015160608501526080830151608085015260a0830151613cc260a086018215159052565b5060c083015160c085015260e0830151613cf360e08601828051825260208082015190830152604090810151910152565b506101008301518161014086015261174382860182613b92565b602081526000613a936020830184613c75565b600081518084526020808501808196508360051b8101915082860160005b85811015613b59578284038952613d56848351613c75565b98850198935090840190600101613d3e565b60208152613d7b60208201835115159052565b60208201516040820152604082015160608201526060820151608082015260006080830151613dad60a08401826134f0565b5060a0830151613dc16101e08401826137d0565b5060c08301518051610c20840152602080820151610c40850152604080830151610c608601526060830151610c808601526080830151610ca086015260a090920151610cc085015260e08501518051610ce086015290810151610d008501520151610d20830152610100830151610de0610d40840152613e45610e00840182613d20565b6101208501518051610d608601526020810151610d808601526040810151610da08601526060810151610dc08601526080810151610de08601529091506111af565b60006101408284031215613e9a57600080fd5b613ea26132d5565b613eab83613438565b8152613eb960208401613438565b6020820152613eca60408401613438565b6040820152613edb60608401613438565b6060820152613eec60808401613438565b6080820152613efd60a08401613438565b60a0820152613f0e60c08401613438565b60c0820152613f1f60e08401613438565b60e0820152610100613f32818501613438565b90820152610120613f44848201613438565b908201529392505050565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b83811015613c6a57815180518852838101518489015260408082015160058110613fa557613fa5613f4f565b90890152606081810151908901526080808201519089015260a0908101519060068210613fd457613fd4613f4f565b88015260c09096019590820190600101613f79565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561405857888303603f19018552815180516001600160a01b0316845287015187840187905261404587850182613f65565b9588019593505090860190600101614010565b509098975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156140a9576140958385516134f0565b928401926101409290920191600101614082565b50909695505050505050565b600080600080608085870312156140cb57600080fd5b84356140d681613420565b935060208501356140e681613420565b93969395505050506040820135916060013590565b602081526000613a936020830184613f65565b6000806040838503121561412157600080fd5b50508035926020909101359150565b602081526000613a936020830184613d20565b8051801515811461344357600080fd5b60006020828403121561416557600080fd5b613a9382614143565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156141ae576141ae614184565b5060010190565b6000602082840312156141c757600080fd5b8151613a9381613420565b6000602082840312156141e457600080fd5b5051919050565b6101408101610aca82846134f0565b600060c0828403121561420c57600080fd5b6142146132fe565b9050815181526020820151602082015260408201516005811061423657600080fd5b80604083015250606082015160608201526080820151608082015260a08201516006811061426357600080fd5b60a082015292915050565b6000602080838503121561428157600080fd5b82516001600160401b0381111561429757600080fd5b8301601f810185136142a857600080fd5b80516142b6613469826133fd565b81815260c091820283018401918482019190888411156142d557600080fd5b938501935b838510156142fb576142ec89866141fa565b835293840193918501916142da565b50979650505050505050565b60008282101561431957614319614184565b500390565b6000821982111561433157614331614184565b500190565b600060c0828403121561434857600080fd5b613a9383836141fa565b6000610120828403121561436557600080fd5b61436d613320565b9050815181526020820151602082015260408201516040820152606082015160608201526080820151608082015260a082015160a082015260c082015160c082015260e082015160e082015261010080830151818301525092915050565b600061012082840312156143de57600080fd5b613a938383614352565b600082601f8301126143f957600080fd5b81516020614409613469836133fd565b82815260059290921b8401810191818101908684111561442857600080fd5b8286015b848110156134b1578051835291830191830161442c565b60006020828403121561445557600080fd5b81516001600160401b0381111561446b57600080fd5b610b81848285016143e8565b634e487b7160e01b600052603160045260246000fd5b60006060828403121561449f57600080fd5b604051606081018181106001600160401b03821117156144c1576144c16132bf565b80604052508091508251815260208301516020820152604083015160408201525092915050565b600061010082840312156144fb57600080fd5b6145036132fe565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015261453c8460a0850161448d565b60a08201529392505050565b600060a0828403121561455a57600080fd5b60405160a081018181106001600160401b038211171561457c5761457c6132bf565b806040525082518152602083015160208201526040830151604082015260608301516060820152608083015160808201528091505092915050565b600060c082840312156145c957600080fd5b60405160c081018181106001600160401b03821117156145eb576145eb6132bf565b8060405250825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201528091505092915050565b600082601f83011261464157600080fd5b81516020614651613469836133fd565b828152610120928302850182019282820191908785111561467157600080fd5b8387015b85811015614694576146878982614352565b8452928401928101614675565b5090979650505050505050565b600080600080608085870312156146b757600080fd5b84516001600160401b03808211156146ce57600080fd5b9086019060a082890312156146e257600080fd5b6146ea613343565b82518152602083015160208201526040830151604082015261470e60608401614143565b606082015260808301518281111561472557600080fd5b6147318a8286016143e8565b608083015250602088015190965091508082111561474e57600080fd5b61475a88838901614630565b9450604087015191508082111561477057600080fd5b5061477d878288016143e8565b606096909601519497939650505050565b600060208083850312156147a157600080fd5b82516001600160401b03808211156147b857600080fd5b9084019060c082870312156147cc57600080fd5b6147d4613365565b6147de878461448d565b815260608084015185830152608080850151848111156147fd57600080fd5b8501601f81018a1361480e57600080fd5b805161481c613469826133fd565b81815260a0918202830189019189820191908d84111561483b57600080fd5b938a01935b838510156148955780858f0312156148585760008081fd5b614860613343565b855181528b8601518c8201526040808701519082015287860151888201528686015187820152835293840193918a0191614840565b816040890152808a01519a50505050505050828511156148b457600080fd5b6148c0888686016143e8565b908201529695505050505050565b805161344381613420565b6000608082840312156148eb57600080fd5b6148f3613365565b82518152602083015161490581613420565b6020820152604083810151908201526060928301519281019290925250919050565b60006101c0828403121561493a57600080fd5b614942613387565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152506101406149b28185016148ce565b90820152610160838101519082015261018080840151908201526101a0928301519281019290925250919050565b600061014082840312156149f357600080fd5b6149fb6132d5565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000610100808385031215614a7b57600080fd5b604051908101906001600160401b0382118183101715614a9d57614a9d6132bf565b81604052835181526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b60006101808284031215614b0957600080fd5b614b116133aa565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100808401518183015250610120808401518183015250610140808401518183015250610160613f44818501614143565b600060808284031215614b9f57600080fd5b614ba7613365565b825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b600060408284031215614be557600080fd5b604051604081018181106001600160401b0382111715614c0757614c076132bf565b60405282518152602092830151928101929092525091905056fea26469706673582212207bcd52def7e1a15b20ecdd17f131429519ebbf2ab161874b51c241b336e20fcd64736f6c63430008090033";

type OptionMarketViewerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptionMarketViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptionMarketViewer__factory extends ContractFactory {
  constructor(...args: OptionMarketViewerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OptionMarketViewer> {
    return super.deploy(overrides || {}) as Promise<OptionMarketViewer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OptionMarketViewer {
    return super.attach(address) as OptionMarketViewer;
  }
  connect(signer: Signer): OptionMarketViewer__factory {
    return super.connect(signer) as OptionMarketViewer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptionMarketViewerInterface {
    return new utils.Interface(_abi) as OptionMarketViewerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptionMarketViewer {
    return new Contract(address, _abi, signerOrProvider) as OptionMarketViewer;
  }
}
