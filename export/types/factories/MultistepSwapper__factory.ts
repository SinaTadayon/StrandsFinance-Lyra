/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultistepSwapper,
  MultistepSwapperInterface,
} from "../MultistepSwapper";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
      {
        internalType: "contract ISynthetix",
        name: "_synthetix",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tokenInCurrencyKey",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum MultistepSwapper.SwapType",
            name: "swapType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "tokenOutCurrencyKey",
            type: "bytes32",
          },
          {
            internalType: "uint24",
            name: "poolFee",
            type: "uint24",
          },
        ],
        internalType: "struct MultistepSwapper.Swap[]",
        name: "swaps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526002805460ff60a01b1916905534801561001d57600080fd5b506001600055610b24806100326000396000f3fe6080604052600436106100295760003560e01c80639e3c5bc31461002e578063f09a401614610053575b600080fd5b61004161003c3660046107f5565b610075565b60405190815260200160405180910390f35b34801561005f57600080fd5b5061007361006e366004610899565b610752565b005b6000600260005414156100cf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055826101125760405162461bcd60e51b815260206004820152600e60248201526d30206c656e67746820737761707360901b60448201526064016100c6565b6001600160a01b03871660009081526003602052604090205460ff166101de5760015460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529088169063095ea7b390604401602060405180830381600087803b15801561018157600080fd5b505af1158015610195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b991906108d2565b506001600160a01b0387166000908152600360205260409020805460ff191660011790555b6040516323b872dd60e01b8152336004820152306024820152604481018690526001600160a01b038816906323b872dd90606401602060405180830381600087803b15801561022c57600080fd5b505af1158015610240573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026491906108d2565b5050604080516020810190915260008082528591905b8481101561067057600186868381811061029657610296610911565b6102ac9260206080909202019081019150610927565b60018111156102bd576102bd6108fb565b11156102fe5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420737761707479706560801b60448201526064016100c6565b600086868381811061031257610312610911565b6103289260206080909202019081019150610927565b6001811115610339576103396108fb565b14156103f6576002546001600160a01b031663ee52a2f3898589898681811061036457610364610911565b905060800201604001356040518463ffffffff1660e01b815260040161039d939291909283526020830191909152604082015260600190565b602060405180830381600087803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190610948565b9250610615565b600186868381811061040a5761040a610911565b6104209260206080909202019081019150610927565b6001811115610431576104316108fb565b141561061557815161046e576040516bffffffffffffffffffffffff1960608b901b16602082015260340160405160208183030381529060405291505b8186868381811061048157610481610911565b90506080020160600160208101906104999190610961565b8787848181106104ab576104ab610911565b90506080020160200160208101906104c39190610986565b6040516020016104d5939291906109d3565b60408051601f1981840301815291905291506104f2600186610a35565b8114806105565750610505600186610a35565b8110801561055657506001868661051d846001610a4c565b81811061052c5761052c610911565b6105429260206080909202019081019150610927565b6001811115610553576105536108fb565b14155b15610615576001546040805160a08101825284815230602082015242818301526060810186905260006080820152905163c04b8d5960e01b81526001600160a01b039092169163c04b8d59916105ae91600401610a64565b602060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106009190610948565b92506040518060200160405280600081525091505b85858281811061062757610627610911565b905060800201602001602081019061063f9190610986565b985085858281811061065357610653610911565b9050608002016040013597508061066990610ad3565b905061027a565b50828210156106c15760405162461bcd60e51b815260206004820152601c60248201527f616d6f756e744f7574206c6f776572207468616e206d696e696d756d0000000060448201526064016100c6565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0389169063a9059cbb90604401602060405180830381600087803b15801561070957600080fd5b505af115801561071d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074191906108d2565b505060016000559695505050505050565b600254600160a01b900460ff16156107a25760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016100c6565b600180546001600160a01b039384166001600160a01b0319909116179055600280546001600160a81b0319169190921617600160a01b179055565b6001600160a01b03811681146107f257600080fd5b50565b60008060008060008060a0878903121561080e57600080fd5b8635610819816107dd565b95506020870135945060408701359350606087013567ffffffffffffffff8082111561084457600080fd5b818901915089601f83011261085857600080fd5b81358181111561086757600080fd5b8a60208260071b850101111561087c57600080fd5b602083019550809450505050608087013590509295509295509295565b600080604083850312156108ac57600080fd5b82356108b7816107dd565b915060208301356108c7816107dd565b809150509250929050565b6000602082840312156108e457600080fd5b815180151581146108f457600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561093957600080fd5b8135600281106108f457600080fd5b60006020828403121561095a57600080fd5b5051919050565b60006020828403121561097357600080fd5b813562ffffff811681146108f457600080fd5b60006020828403121561099857600080fd5b81356108f4816107dd565b60005b838110156109be5781810151838201526020016109a6565b838111156109cd576000848401525b50505050565b600084516109e58184602089016109a3565b60e89490941b6001600160e81b0319169190930190815260609190911b6bffffffffffffffffffffffff1916600382015260170192915050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a4757610a47610a1f565b500390565b60008219821115610a5f57610a5f610a1f565b500190565b602081526000825160a0602084015280518060c0850152610a8c8160e08601602085016109a3565b60018060a01b0360208601511660408501526040850151606085015260608501516080850152608085015160a085015260e0601f19601f8301168501019250505092915050565b6000600019821415610ae757610ae7610a1f565b506001019056fea2646970667358221220c7e16535fb4dd88ee14039294640a07a8019c8f8d8301bd3ec535bb4c264948d64736f6c63430008090033";

type MultistepSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultistepSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultistepSwapper__factory extends ContractFactory {
  constructor(...args: MultistepSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultistepSwapper> {
    return super.deploy(overrides || {}) as Promise<MultistepSwapper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MultistepSwapper {
    return super.attach(address) as MultistepSwapper;
  }
  connect(signer: Signer): MultistepSwapper__factory {
    return super.connect(signer) as MultistepSwapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultistepSwapperInterface {
    return new utils.Interface(_abi) as MultistepSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultistepSwapper {
    return new Contract(address, _abi, signerOrProvider) as MultistepSwapper;
  }
}
